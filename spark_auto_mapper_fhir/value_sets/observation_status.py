from __future__ import annotations

from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.base_types.FhirValueSetBase import FhirValueSetBase
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class ObservationStatusCode(FhirValueSetBase):
    """
    ObservationStatus
    """

    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)

    """
    http://hl7.org/fhir/ValueSet/observation-status
    """
    codeset: FhirUri = "http://hl7.org/fhir/ValueSet/observation-status"


class ObservationStatusCodeValues:
    """
    The existence of the observation is registered, but there is no result yet available.
    """

    Registered = ObservationStatusCode("registered")
    """
    This is an initial or interim observation: data may be incomplete or unverified.
    """
    Preliminary = ObservationStatusCode("preliminary")
    """
    The observation is complete and there are no further actions needed. Additional information such "released", "signed", etc would be represented using [Provenance](provenance.html) which provides not only the act but also the actors and dates and other related data. These act states would be associated with an observation status of `preliminary` until they are all completed and then a status of `final` would be applied.
    """
    Final = ObservationStatusCode("final")
    """
    Subsequent to being Final, the observation has been modified subsequent.  This includes updates/new information and corrections.
    """
    Amended = ObservationStatusCode("amended")
    """
    The observation is unavailable because the measurement was not started or not completed (also sometimes called "aborted").
    """
    Cancelled = ObservationStatusCode("cancelled")
    """
    The observation has been withdrawn following previous final release.  This electronic record should never have existed, though it is possible that real-world decisions were based on it. (If real-world activity has occurred, the status should be "cancelled" rather than "entered-in-error".).
    """
    EnteredInError = ObservationStatusCode("entered-in-error")
    """
    The authoring/source system does not know which of the status values currently applies for this observation. Note: This concept is not to be used for "other" - one of the listed statuses is presumed to apply, but the authoring/source system does not know which.
    """
    Unknown = ObservationStatusCode("unknown")
