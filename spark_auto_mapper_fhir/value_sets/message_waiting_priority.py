from __future__ import annotations

from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class MessageWaitingPriority(GenericTypeCode):
    """
    v3.MessageWaitingPriority
    From: http://terminology.hl7.org/ValueSet/v3-MessageWaitingPriority in v3-codesystems.xml
         Indicates that the receiver has messages for the sender  OpenIssue:
    Description does not make sense relative to name of coding system.  Must be
    reviewed and improved.
    """

    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)

    """
    http://terminology.hl7.org/CodeSystem/v3-MessageWaitingPriority
    """
    codeset: FhirUri = "http://terminology.hl7.org/CodeSystem/v3-MessageWaitingPriority"


class MessageWaitingPriorityValues:
    """
    High priority messages are available
    From: http://terminology.hl7.org/CodeSystem/v3-MessageWaitingPriority in v3-codesystems.xml
    """

    High = MessageWaitingPriority("H")
    """
    Low priority messages are available
    From: http://terminology.hl7.org/CodeSystem/v3-MessageWaitingPriority in v3-codesystems.xml
    """
    Low = MessageWaitingPriority("L")
    """
    Medium priority messages are available
    From: http://terminology.hl7.org/CodeSystem/v3-MessageWaitingPriority in v3-codesystems.xml
    """
    Medium = MessageWaitingPriority("M")
