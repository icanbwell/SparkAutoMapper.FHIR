from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.FhirValueSetBase import FhirValueSetBase
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class PostalAddressUseCode(FhirValueSetBase):
    """
    PostalAddressUse
    """
    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)


class PostalAddressUseCodeValues:
    _generaladdressuse = PostalAddressUseCode("_GeneralAddressUse")
    _postaladdressuse = PostalAddressUseCode("_PostalAddressUse")
    _telecommunicationaddressuse = PostalAddressUseCode("_TelecommunicationAddressUse")
    BadAddress = PostalAddressUseCode("BAD")
    ConfidentialAddress = PostalAddressUseCode("CONF")
    PrimaryHome = PostalAddressUseCode("HP")
    VacationHome = PostalAddressUseCode("HV")
    Direct = PostalAddressUseCode("DIR")
    Public = PostalAddressUseCode("PUB")
    PhysicalVisitAddress = PostalAddressUseCode("PHYS")
    PostalAddress = PostalAddressUseCode("PST")
