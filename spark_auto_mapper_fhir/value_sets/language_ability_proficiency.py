from __future__ import annotations

from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class LanguageAbilityProficiency(GenericTypeCode):
    """
    v3.LanguageAbilityProficiency
    From: http://terminology.hl7.org/ValueSet/v3-LanguageAbilityProficiency in v3-codesystems.xml
         A value representing the level of proficiency in a language.  Example:
    Excellent, good, fair, poor.  OpenIssue:
    Description copied from Concept Domain of same name.  Must be verified.
    """

    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)

    """
    http://terminology.hl7.org/CodeSystem/v3-LanguageAbilityProficiency
    """
    codeset: FhirUri = (
        "http://terminology.hl7.org/CodeSystem/v3-LanguageAbilityProficiency"
    )


class LanguageAbilityProficiencyValues:
    """
    Excellent
    From: http://terminology.hl7.org/CodeSystem/v3-LanguageAbilityProficiency in v3-codesystems.xml
    """

    Excellent = LanguageAbilityProficiency("E")
    """
    Fair
    From: http://terminology.hl7.org/CodeSystem/v3-LanguageAbilityProficiency in v3-codesystems.xml
    """
    Fair = LanguageAbilityProficiency("F")
    """
    Good
    From: http://terminology.hl7.org/CodeSystem/v3-LanguageAbilityProficiency in v3-codesystems.xml
    """
    Good = LanguageAbilityProficiency("G")
    """
    Poor
    From: http://terminology.hl7.org/CodeSystem/v3-LanguageAbilityProficiency in v3-codesystems.xml
    """
    Poor = LanguageAbilityProficiency("P")
