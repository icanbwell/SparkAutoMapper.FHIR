from __future__ import annotations

from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class SmartCapabilitiesCode(GenericTypeCode):
    """
    SmartCapabilities
    From: http://terminology.hl7.org/CodeSystem/smart-capabilities in valuesets.xml
        Codes that define what the server is capable of.
    """

    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)

    """
    http://terminology.hl7.org/CodeSystem/smart-capabilities
    """
    codeset: FhirUri = "http://terminology.hl7.org/CodeSystem/smart-capabilities"


class SmartCapabilitiesCodeValues:
    """
    support for SMART’s EHR Launch mode.
    From: http://terminology.hl7.org/CodeSystem/smart-capabilities in valuesets.xml
    """

    EHRLaunchMode = SmartCapabilitiesCode("launch-ehr")
    """
    support for SMART’s Standalone Launch mode.
    From: http://terminology.hl7.org/CodeSystem/smart-capabilities in valuesets.xml
    """
    StandaloneLaunchMode = SmartCapabilitiesCode("launch-standalone")
    """
    support for SMART’s public client profile (no client authentication).
    From: http://terminology.hl7.org/CodeSystem/smart-capabilities in valuesets.xml
    """
    PublicClientProfile = SmartCapabilitiesCode("client-public")
    """
    support for SMART’s confidential client profile (symmetric client secret
    authentication).
    From: http://terminology.hl7.org/CodeSystem/smart-capabilities in valuesets.xml
    """
    ConfidentialClientProfile = SmartCapabilitiesCode("client-confidential-symmetric")
    """
    support for SMART’s OpenID Connect profile.
    From: http://terminology.hl7.org/CodeSystem/smart-capabilities in valuesets.xml
    """
    SupportsOpenIDConnect = SmartCapabilitiesCode("sso-openid-connect")
    """
    support for “need patient banner” launch context (conveyed via
    need_patient_banner token parameter).
    From: http://terminology.hl7.org/CodeSystem/smart-capabilities in valuesets.xml
    """
    Allows_NeedPatientBanner_ = SmartCapabilitiesCode("context-passthrough-banner")
    """
    support for “SMART style URL” launch context (conveyed via smart_style_url
    token parameter).
    From: http://terminology.hl7.org/CodeSystem/smart-capabilities in valuesets.xml
    """
    Allows_SmartStyleStyle_ = SmartCapabilitiesCode("context-passthrough-style")
    """
    support for patient-level launch context (requested by launch/patient scope,
    conveyed via patient token parameter).
    From: http://terminology.hl7.org/CodeSystem/smart-capabilities in valuesets.xml
    """
    Allows_PatientLevelLaunchContext_EHR_ = SmartCapabilitiesCode("context-ehr-patient")
    """
    support for encounter-level launch context (requested by launch/encounter
    scope, conveyed via encounter token parameter).
    From: http://terminology.hl7.org/CodeSystem/smart-capabilities in valuesets.xml
    """
    Allows_EncounterLevelLaunchContext_EHR_ = SmartCapabilitiesCode(
        "context-ehr-encounter"
    )
    """
    support for patient-level launch context (requested by launch/patient scope,
    conveyed via patient token parameter).
    From: http://terminology.hl7.org/CodeSystem/smart-capabilities in valuesets.xml
    """
    Allows_PatientLevelLaunchContext_STANDALONE_ = SmartCapabilitiesCode(
        "context-standalone-patient"
    )
    """
    support for encounter-level launch context (requested by launch/encounter
    scope, conveyed via encounter token parameter).
    From: http://terminology.hl7.org/CodeSystem/smart-capabilities in valuesets.xml
    """
    Allows_EncounterLevelLaunchContext_STANDALONE_ = SmartCapabilitiesCode(
        "context-standalone-encounter"
    )
    """
    support for refresh tokens (requested by offline_access scope).
    From: http://terminology.hl7.org/CodeSystem/smart-capabilities in valuesets.xml
    """
    SupportsRefreshToken = SmartCapabilitiesCode("permission-offline")
    """
    support for patient-level scopes (e.g. patient/Observation.read).
    From: http://terminology.hl7.org/CodeSystem/smart-capabilities in valuesets.xml
    """
    SupportsPatientLevelScopes = SmartCapabilitiesCode("permission-patient")
    """
    support for user-level scopes (e.g. user/Appointment.read).
    From: http://terminology.hl7.org/CodeSystem/smart-capabilities in valuesets.xml
    """
    SupportsUserLevelScopes = SmartCapabilitiesCode("permission-user")
