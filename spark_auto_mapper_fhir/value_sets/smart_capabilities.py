from __future__ import annotations


from spark_auto_mapper_fhir.base_types.FhirValueSetBase import FhirValueSetBase
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class SmartCapabilitiesCode(FhirValueSetBase):
    """
    SmartCapabilities
    """

    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)


class SmartCapabilitiesCodeValues:
    EHRLaunchMode = SmartCapabilitiesCode("launch-ehr")
    StandaloneLaunchMode = SmartCapabilitiesCode("launch-standalone")
    PublicClientProfile = SmartCapabilitiesCode("client-public")
    ConfidentialClientProfile = SmartCapabilitiesCode("client-confidential-symmetric")
    SupportsOpenIDConnect = SmartCapabilitiesCode("sso-openid-connect")
    Allows_NeedPatientBanner_ = SmartCapabilitiesCode("context-passthrough-banner")
    Allows_SmartStyleStyle_ = SmartCapabilitiesCode("context-passthrough-style")
    Allows_PatientLevelLaunchContext_EHR_ = SmartCapabilitiesCode("context-ehr-patient")
    Allows_EncounterLevelLaunchContext_EHR_ = SmartCapabilitiesCode(
        "context-ehr-encounter"
    )
    Allows_PatientLevelLaunchContext_STANDALONE_ = SmartCapabilitiesCode(
        "context-standalone-patient"
    )
    Allows_EncounterLevelLaunchContext_STANDALONE_ = SmartCapabilitiesCode(
        "context-standalone-encounter"
    )
    SupportsRefreshToken = SmartCapabilitiesCode("permission-offline")
    SupportsPatientLevelScopes = SmartCapabilitiesCode("permission-patient")
    SupportsUserLevelScopes = SmartCapabilitiesCode("permission-user")
