from __future__ import annotations

from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.base_types.FhirValueSetBase import FhirValueSetBase
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class EntityNamePartQualifierCode(FhirValueSetBase):
    """
    EntityNamePartQualifier
    """

    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)

    """
    http://hl7.org/fhir/ValueSet/name-part-qualifier
    """
    codeset: FhirUri = "http://hl7.org/fhir/ValueSet/name-part-qualifier"


class EntityNamePartQualifierCodeValues:
    """
    Description:A name part a person acquired.  The name part may be acquired by adoption, or the person may have chosen to use the name part for some other reason.


                           Note: this differs from an Other/Psuedonym/Alias in that an acquired name part is acquired on a formal basis rather than an informal one (e.g. registered as part of the official name).
    """

    Acquired = EntityNamePartQualifierCode("AD")
    """
    Description:A name that a person was given at birth or established as a consequence of adoption. 

                        
                           Note: This is not used for temporary names assigned at birth such as "Baby of Smith" a" which is just a name with a use code of "TEMP".
    """
    Birth = EntityNamePartQualifierCode("BR")
    """
    Description:Used to indicate which of the various name parts is used when interacting with the person.
    """
    Callme = EntityNamePartQualifierCode("CL")
    """
    Description:Indicates that a name part is just an initial.  Initials do not imply a trailing period since this would not work with non-Latin scripts.  In some languages, initials may consist of more than one letter, e.g., "Ph" could stand for "Philippe" or "Th" For "Thomas".
    """
    Initial = EntityNamePartQualifierCode("IN")
    """
    Description:For organizations a suffix indicating the legal status, e.g., "Inc.", "Co.", "AG", "GmbH", "B.V." "S.A.", "Ltd." etc.
    """
    LegalStatus = EntityNamePartQualifierCode("LS")
    """
    Description:Indicates that the name part is a middle name.

                        
                           Usage Notes: In general, the english "middle name" concept is all of the given names after the first. This qualifier may be used to explicitly indicate which given names are considered to be middle names. The middle name qualifier may also be used with family names. This is a Scandinavian use case, matching the concept of "mellomnavn","mellannamn". Note that there are specific rules that indicate what names may be taken as a mellannamn in different Scandinavian countries.
    """
    MiddleName = EntityNamePartQualifierCode("MID")
    """
    Description:A prefix has a strong association to the immediately following name part. A prefix has no implicit trailing white space (it has implicit leading white space though).
    """
    Prefix = EntityNamePartQualifierCode("PFX")
    """
    Description: Medication Name Parts are a means of specifying a range of acceptable "official" forms of the name of a product.  They are used as patterns against which input name strings may be matched for automatic identification of products from input text reports.   While they cover the concepts held under "doseForm" or "route" or "strength" the name parts are not the same and do not fit into a controlled vocabulary in the same way. By specifying up to 8 name parts a much larger range of possible names can be generated.
    """
    Pharmaceuticalentitynamepartqualifiers = EntityNamePartQualifierCode(
        "PharmaceuticalEntityNamePartQualifiers"
    )
    """
    Description:A suffix has a strong association to the immediately preceding name part. A suffix has no implicit leading white space (it has implicit trailing white space though).
    """
    Suffix = EntityNamePartQualifierCode("SFX")
    """
    Description:Extra information about the style of a title
    """
    Titlestyles = EntityNamePartQualifierCode("TitleStyles")
    """
    None
    """
    LegalStatus = EntityNamePartQualifierCode("LS")
    """
    None
    """
    Academic = EntityNamePartQualifierCode("AC")
    """
    None
    """
    Nobility = EntityNamePartQualifierCode("NB")
    """
    None
    """
    Professional = EntityNamePartQualifierCode("PR")
    """
    None
    """
    Honorific = EntityNamePartQualifierCode("HON")
    """
    None
    """
    Birth = EntityNamePartQualifierCode("BR")
    """
    None
    """
    Acquired = EntityNamePartQualifierCode("AD")
    """
    None
    """
    Spouse = EntityNamePartQualifierCode("SP")
    """
    None
    """
    MiddleName = EntityNamePartQualifierCode("MID")
    """
    None
    """
    CallMe = EntityNamePartQualifierCode("CL")
    """
    None
    """
    Initial = EntityNamePartQualifierCode("IN")
    """
    OrganizationNamePartQualifier
    """
    Organizationnamepartqualifier = EntityNamePartQualifierCode(
        "_OrganizationNamePartQualifier"
    )
    """
    Description: Medication Name Parts are a means of specifying a range of acceptable "official" forms of the name of a product.  They are used as patterns against which input name strings may be matched for automatic identification of products from input text reports.   While they cover the concepts held under "doseForm" or "route" or "strength" the name parts are not the same and do not fit into a controlled vocabulary in the same way. By specifying up to 8 name parts a much larger range of possible names can be generated.
    """
    Pharmaceuticalentitynamepartqualifiers = EntityNamePartQualifierCode(
        "PharmaceuticalEntityNamePartQualifiers"
    )
    """
    PersonNamePartQualifier
    """
    Personnamepartqualifier = EntityNamePartQualifierCode("_PersonNamePartQualifier")
    """
    None
    """
    Voorvoegsel = EntityNamePartQualifierCode("VV")
