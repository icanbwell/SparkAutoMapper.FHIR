from __future__ import annotations


from spark_auto_mapper_fhir.base_types.FhirValueSetBase import FhirValueSetBase
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class EntityNamePartQualifierCode(FhirValueSetBase):
    """
    EntityNamePartQualifier
    """

    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)


class EntityNamePartQualifierCodeValues:
    Acquired = EntityNamePartQualifierCode("AD")
    Birth = EntityNamePartQualifierCode("BR")
    Callme = EntityNamePartQualifierCode("CL")
    Initial = EntityNamePartQualifierCode("IN")
    LegalStatus = EntityNamePartQualifierCode("LS")
    MiddleName = EntityNamePartQualifierCode("MID")
    Prefix = EntityNamePartQualifierCode("PFX")
    Pharmaceuticalentitynamepartqualifiers = EntityNamePartQualifierCode(
        "PharmaceuticalEntityNamePartQualifiers"
    )
    Suffix = EntityNamePartQualifierCode("SFX")
    Titlestyles = EntityNamePartQualifierCode("TitleStyles")
    LegalStatus = EntityNamePartQualifierCode("LS")
    Academic = EntityNamePartQualifierCode("AC")
    Nobility = EntityNamePartQualifierCode("NB")
    Professional = EntityNamePartQualifierCode("PR")
    Honorific = EntityNamePartQualifierCode("HON")
    Birth = EntityNamePartQualifierCode("BR")
    Acquired = EntityNamePartQualifierCode("AD")
    Spouse = EntityNamePartQualifierCode("SP")
    MiddleName = EntityNamePartQualifierCode("MID")
    CallMe = EntityNamePartQualifierCode("CL")
    Initial = EntityNamePartQualifierCode("IN")
    Organizationnamepartqualifier = EntityNamePartQualifierCode(
        "_OrganizationNamePartQualifier"
    )
    Pharmaceuticalentitynamepartqualifiers = EntityNamePartQualifierCode(
        "PharmaceuticalEntityNamePartQualifiers"
    )
    Personnamepartqualifier = EntityNamePartQualifierCode("_PersonNamePartQualifier")
    Voorvoegsel = EntityNamePartQualifierCode("VV")
