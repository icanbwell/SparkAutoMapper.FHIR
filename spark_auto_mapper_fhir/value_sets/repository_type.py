from __future__ import annotations

from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class RepositoryTypeCode(GenericTypeCode):
    """
    repositoryType
    From: http://hl7.org/fhir/repository-type in valuesets.xml
        Type for access of external URI.
    """

    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)

    """
    http://hl7.org/fhir/repository-type
    """
    codeset: FhirUri = "http://hl7.org/fhir/repository-type"


class RepositoryTypeCodeValues:
    """
    When URL is clicked, the resource can be seen directly (by webpage or by
    download link format).
    From: http://hl7.org/fhir/repository-type in valuesets.xml
    """

    ClickAndSee = RepositoryTypeCode("directlink")
    """
    When the API method (e.g. [base_url]/[parameter]) related with the URL of the
    website is executed, the resource can be seen directly (usually in JSON or XML
    format).
    From: http://hl7.org/fhir/repository-type in valuesets.xml
    """
    TheURLIsTheRESTfulOrOtherKindOfAPIThatCanAccessToTheResult_ = RepositoryTypeCode(
        "openapi"
    )
    """
    When logged into the website, the resource can be seen.
    From: http://hl7.org/fhir/repository-type in valuesets.xml
    """
    ResultCannotBeAccessUnlessAnAccountIsLoggedIn = RepositoryTypeCode("login")
    """
    When logged in and  follow the API in the website related with URL, the
    resource can be seen.
    From: http://hl7.org/fhir/repository-type in valuesets.xml
    """
    ResultNeedToBeFetchedWithAPIAndNeedLOGIN_OrCookiesAreRequiredWhenVisitingTheLinkOfResource_ = RepositoryTypeCode(
        "oauth"
    )
    """
    Some other complicated or particular way to get resource from URL.
    From: http://hl7.org/fhir/repository-type in valuesets.xml
    """
    SomeOtherComplicatedOrParticularWayToGetResourceFromURL_ = RepositoryTypeCode(
        "other"
    )
