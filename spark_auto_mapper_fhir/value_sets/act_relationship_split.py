from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId
from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class ActRelationshipSplit(GenericTypeCode):
    """
    v3.ActRelationshipSplit
    From: http://terminology.hl7.org/ValueSet/v3-ActRelationshipSplit in v3-codesystems.xml
        **** MISSING DEFINITIONS ****
    """
    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)

    """
    http://terminology.hl7.org/ValueSet/v3-ActRelationshipSplit
    """
    codeset: FhirUri = "http://terminology.hl7.org/ValueSet/v3-ActRelationshipSplit"
    """
    http://terminology.hl7.org/CodeSystem/v3-ActRelationshipSplit
    """
    codeset_2: FhirUri = "http://terminology.hl7.org/CodeSystem/v3-ActRelationshipSplit"


class ActRelationshipSplitValues:
    """
    The pre-condition associated with the branch is evaluated once and if true the
    branch may be entered. All other exclusive branches compete with each other
    and only one will be selected. This implements a COND, IF and CASE
    conditionals, or "XOR-split." The order in which the branches are considered
    may be specified in the priorityNumber attribute.
    From: http://terminology.hl7.org/CodeSystem/v3-ActRelationshipSplit in v3-codesystems.xml
    """
    ExclusiveTryOnce = ActRelationshipSplit("E1")
    """
    A branch is selected as soon as the pre-condition associated with the branch
    evaluates to true.  If the condition is false, the branch may be entered
    later, when the condition turns true.  All other exclusive branches compete
    with each other and only one will be selected.  Each waiting branch executes
    in parallel with the default join code wait  (see below). The order in which
    the branches are considered may be specified in the
    Service_relationship.priority_nmb.
    From: http://terminology.hl7.org/CodeSystem/v3-ActRelationshipSplit in v3-codesystems.xml
    """
    ExclusiveWait = ActRelationshipSplit("EW")
    """
    A branch is executed if its associated preconditions permit. If associated
    preconditions do not permit, the branch is dropped.  Inclusive branches are
    not suppressed and do not suppress other branches.
    From: http://terminology.hl7.org/CodeSystem/v3-ActRelationshipSplit in v3-codesystems.xml
    """
    InclusiveTryOnce = ActRelationshipSplit("I1")
    """
    A branch is executed as soon as its associated conditions permit.  If the
    condition is false, the branch may be entered later, when the condition turns
    true.  Inclusive branches are not suppressed and do not suppress other
    branches.  Each waiting branch executes in parallel with the default join code
    wait  (see below).
    From: http://terminology.hl7.org/CodeSystem/v3-ActRelationshipSplit in v3-codesystems.xml
    """
    InclusiveWait = ActRelationshipSplit("IW")
