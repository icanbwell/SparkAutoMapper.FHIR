from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.FhirValueSetBase import FhirValueSetBase
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class Example Hierarchical ValueSet(FhirValueSetBase):
    """
    """
    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)


class Example Hierarchical ValueSetValues:
    Invalid = Example Hierarchical ValueSet("invalid")
    Structure = Example Hierarchical ValueSet("structure")
    Required = Example Hierarchical ValueSet("required")
    Value = Example Hierarchical ValueSet("value")
    Processing = Example Hierarchical ValueSet("processing")
    Duplicate = Example Hierarchical ValueSet("duplicate")
    Notfound = Example Hierarchical ValueSet("not-found")
    Conflict = Example Hierarchical ValueSet("conflict")
    Lock = Example Hierarchical ValueSet("lock")
    Exception = Example Hierarchical ValueSet("exception")
    Tbrottled = Example Hierarchical ValueSet("tbrottled")
    Login = Example Hierarchical ValueSet("login")
    Unknown = Example Hierarchical ValueSet("unknown")
