from __future__ import annotations

from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class AdverseEventActualityCode(GenericTypeCode):
    """
    AdverseEventActuality
    From: http://hl7.org/fhir/adverse-event-actuality in valuesets.xml
        Overall nature of the adverse event, e.g. real or potential.
    """

    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)

    """
    http://hl7.org/fhir/adverse-event-actuality
    """
    codeset: FhirUri = "http://hl7.org/fhir/adverse-event-actuality"


class AdverseEventActualityCodeValues:
    """
    The adverse event actually happened regardless of whether anyone was affected
    or harmed.
    From: http://hl7.org/fhir/adverse-event-actuality in valuesets.xml
    """

    AdverseEvent = AdverseEventActualityCode("actual")
    """
    A potential adverse event.
    From: http://hl7.org/fhir/adverse-event-actuality in valuesets.xml
    """
    PotentialAdverseEvent = AdverseEventActualityCode("potential")
