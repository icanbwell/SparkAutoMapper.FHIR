from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.FhirValueSetBase import FhirValueSetBase
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class NameRepresentationUse(FhirValueSetBase):
    """
    """
    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)


class NameRepresentationUseValues:
    Namerepresentationuse = NameRepresentationUse("_NameRepresentationUse")
    Assigned = NameRepresentationUse("ASGN")
    License = NameRepresentationUse("C")
    Indigenoustribal = NameRepresentationUse("I")
    Legal = NameRepresentationUse("L")
    Pseudonym = NameRepresentationUse("P")
    Religious = NameRepresentationUse("R")
    Search = NameRepresentationUse("SRCH")
    Abc = NameRepresentationUse("ABC")
    Ide = NameRepresentationUse("IDE")
    Syl = NameRepresentationUse("SYL")
