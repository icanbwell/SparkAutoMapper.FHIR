from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.FhirValueSetBase import FhirValueSetBase
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class Primary_source_type(FhirValueSetBase):
    """
    primary-source-type
    """
    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)


class Primary_source_typeValues:
    LicenseBoard = Primary_source_type("lic-board")
    PrimaryEducation = Primary_source_type("prim")
    ContinuingEducation = Primary_source_type("cont-ed")
    PostalService = Primary_source_type("post-serv")
    RelationshipOwner = Primary_source_type("rel-own")
    RegistrationAuthority = Primary_source_type("reg-auth")
    LegalSource = Primary_source_type("legal")
    IssuingSource = Primary_source_type("issuer")
    AuthoritativeSource = Primary_source_type("auth-source")
