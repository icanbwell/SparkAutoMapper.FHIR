from __future__ import annotations

from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class EnableWhenBehaviorCode(GenericTypeCode):
    """
    EnableWhenBehavior
    From: http://hl7.org/fhir/questionnaire-enable-behavior in valuesets.xml
        Controls how multiple enableWhen values are interpreted -  whether all or any
    must be true.
    """

    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)

    """
    http://hl7.org/fhir/questionnaire-enable-behavior
    """
    codeset: FhirUri = "http://hl7.org/fhir/questionnaire-enable-behavior"


class EnableWhenBehaviorCodeValues:
    """
    Enable the question when all the enableWhen criteria are satisfied.
    From: http://hl7.org/fhir/questionnaire-enable-behavior in valuesets.xml
    """

    All = EnableWhenBehaviorCode("all")
    """
    Enable the question when any of the enableWhen criteria are satisfied.
    From: http://hl7.org/fhir/questionnaire-enable-behavior in valuesets.xml
    """
    Any = EnableWhenBehaviorCode("any")
