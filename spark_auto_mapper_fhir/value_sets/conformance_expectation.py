from __future__ import annotations

from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class ConformanceExpectationCode(GenericTypeCode):
    """
    ConformanceExpectation
    From: http://terminology.hl7.org/CodeSystem/conformance-expectation in valuesets.xml
        Indicates the degree of adherence to a specified behavior or capability
    expected for a system to be deemed conformant with a specification.
    """

    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)

    """
    http://terminology.hl7.org/CodeSystem/conformance-expectation
    """
    codeset: FhirUri = "http://terminology.hl7.org/CodeSystem/conformance-expectation"


class ConformanceExpectationCodeValues:
    """
    Support for the specified capability is required to be considered conformant.
    From: http://terminology.hl7.org/CodeSystem/conformance-expectation in valuesets.xml
    """

    SHALL = ConformanceExpectationCode("SHALL")
    """
    Support for the specified capability is strongly encouraged, and failure to
    support it should only occur after careful consideration.
    From: http://terminology.hl7.org/CodeSystem/conformance-expectation in valuesets.xml
    """
    SHOULD = ConformanceExpectationCode("SHOULD")
    """
    Support for the specified capability is not necessary to be considered
    conformant, and the requirement should be considered strictly optional.
    From: http://terminology.hl7.org/CodeSystem/conformance-expectation in valuesets.xml
    """
    MAY = ConformanceExpectationCode("MAY")
    """
    Support for the specified capability is strongly discouraged and should occur
    only after careful consideration.
    From: http://terminology.hl7.org/CodeSystem/conformance-expectation in valuesets.xml
    """
    SHOULD_NOT = ConformanceExpectationCode("SHOULD-NOT")
