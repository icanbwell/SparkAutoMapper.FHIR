from __future__ import annotations

from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class PropertyRepresentationCode(GenericTypeCode):
    """
    PropertyRepresentation
    From: http://hl7.org/fhir/property-representation in valuesets.xml
        How a property is represented when serialized.
    """

    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)

    """
    http://hl7.org/fhir/property-representation
    """
    codeset: FhirUri = "http://hl7.org/fhir/property-representation"


class PropertyRepresentationCodeValues:
    """
    In XML, this property is represented as an attribute not an element.
    From: http://hl7.org/fhir/property-representation in valuesets.xml
    """

    XMLAttribute = PropertyRepresentationCode("xmlAttr")
    """
    This element is represented using the XML text attribute (primitives only).
    From: http://hl7.org/fhir/property-representation in valuesets.xml
    """
    XMLText = PropertyRepresentationCode("xmlText")
    """
    The type of this element is indicated using xsi:type.
    From: http://hl7.org/fhir/property-representation in valuesets.xml
    """
    TypeAttribute = PropertyRepresentationCode("typeAttr")
    """
    Use CDA narrative instead of XHTML.
    From: http://hl7.org/fhir/property-representation in valuesets.xml
    """
    CDATextFormat = PropertyRepresentationCode("cdaText")
    """
    The property is represented using XHTML.
    From: http://hl7.org/fhir/property-representation in valuesets.xml
    """
    XHTML = PropertyRepresentationCode("xhtml")
