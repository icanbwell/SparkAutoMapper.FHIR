from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.FhirValueSetBase import FhirValueSetBase
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class DataType(FhirValueSetBase):
    """
    """
    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)


class DataTypeValues:
    Address = DataType("Address")
    Age = DataType("Age")
    Annotation = DataType("Annotation")
    Attachment = DataType("Attachment")
    BackboneElement = DataType("BackboneElement")
    CodeableConcept = DataType("CodeableConcept")
    Coding = DataType("Coding")
    ContactDetail = DataType("ContactDetail")
    ContactPoint = DataType("ContactPoint")
    Contributor = DataType("Contributor")
    Count = DataType("Count")
    DataRequirement = DataType("DataRequirement")
    Distance = DataType("Distance")
    Dosage = DataType("Dosage")
    Duration = DataType("Duration")
    Element = DataType("Element")
    ElementDefinition = DataType("ElementDefinition")
    Expression = DataType("Expression")
    Extension = DataType("Extension")
    HumanName = DataType("HumanName")
    Identifier = DataType("Identifier")
    MarketingStatus = DataType("MarketingStatus")
    Meta = DataType("Meta")
    Money = DataType("Money")
    MoneyQuantity = DataType("MoneyQuantity")
    Narrative = DataType("Narrative")
    ParameterDefinition = DataType("ParameterDefinition")
    Period = DataType("Period")
    Population = DataType("Population")
    ProdCharacteristic = DataType("ProdCharacteristic")
    ProductShelfLife = DataType("ProductShelfLife")
    Quantity = DataType("Quantity")
    Range = DataType("Range")
    Ratio = DataType("Ratio")
    Reference = DataType("Reference")
    RelatedArtifact = DataType("RelatedArtifact")
    SampledData = DataType("SampledData")
    Signature = DataType("Signature")
    SimpleQuantity = DataType("SimpleQuantity")
    SubstanceAmount = DataType("SubstanceAmount")
    Timing = DataType("Timing")
    TriggerDefinition = DataType("TriggerDefinition")
    UsageContext = DataType("UsageContext")
    Base64Binary = DataType("base64Binary")
    Boolean = DataType("boolean")
    Canonical = DataType("canonical")
    Code = DataType("code")
    Date = DataType("date")
    DateTime = DataType("dateTime")
    Decimal = DataType("decimal")
    Id = DataType("id")
    Instant = DataType("instant")
    Integer = DataType("integer")
    Markdown = DataType("markdown")
    Oid = DataType("oid")
    PositiveInt = DataType("positiveInt")
    String = DataType("string")
    Time = DataType("time")
    UnsignedInt = DataType("unsignedInt")
    Uri = DataType("uri")
    Url = DataType("url")
    Uuid = DataType("uuid")
    XHTML = DataType("xhtml")
