from __future__ import annotations

from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class TypeDerivationRuleCode(GenericTypeCode):
    """
    TypeDerivationRule
    From: http://hl7.org/fhir/type-derivation-rule in valuesets.xml
        How a type relates to its baseDefinition.
    """

    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)

    """
    http://hl7.org/fhir/type-derivation-rule
    """
    codeset: FhirUri = "http://hl7.org/fhir/type-derivation-rule"


class TypeDerivationRuleCodeValues:
    """
    This definition defines a new type that adds additional elements to the base
    type.
    From: http://hl7.org/fhir/type-derivation-rule in valuesets.xml
    """

    Specialization = TypeDerivationRuleCode("specialization")
    """
    This definition adds additional rules to an existing concrete type.
    From: http://hl7.org/fhir/type-derivation-rule in valuesets.xml
    """
    Constraint = TypeDerivationRuleCode("constraint")
