from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId
from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class UnitTypeCodesCode(GenericTypeCode):
    """
    UnitTypeCodes
    From: http://terminology.hl7.org/CodeSystem/benefit-unit in valuesets.xml
        This value set includes a smattering of Unit type codes.
    """
    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)

    """
    http://terminology.hl7.org/CodeSystem/benefit-unit
    """
    codeset: FhirUri = "http://terminology.hl7.org/CodeSystem/benefit-unit"


class UnitTypeCodesCodeValues:
    """
    A single individual
    From: http://terminology.hl7.org/CodeSystem/benefit-unit in valuesets.xml
    """
    Individual = UnitTypeCodesCode("individual")
    """
    A family, typically includes self, spouse(s) and children to a defined age
    From: http://terminology.hl7.org/CodeSystem/benefit-unit in valuesets.xml
    """
    Family = UnitTypeCodesCode("family")
