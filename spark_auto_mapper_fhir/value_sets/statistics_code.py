from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.FhirValueSetBase import FhirValueSetBase
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class StatisticsCode(FhirValueSetBase):
    """
    """
    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)


class StatisticsCodeValues:
    Average = StatisticsCode("average")
    Maximum = StatisticsCode("maximum")
    Minimum = StatisticsCode("minimum")
    Count = StatisticsCode("count")
    TotalCount = StatisticsCode("total-count")
    Median = StatisticsCode("median")
    StandardDeviation = StatisticsCode("std-dev")
    Sum = StatisticsCode("sum")
    Variance = StatisticsCode("variance")
    20thPercentile = StatisticsCode("20-percent")
    80thPercentile = StatisticsCode("80-percent")
    LowerQuartile = StatisticsCode("4-lower")
    UpperQuartile = StatisticsCode("4-upper")
    QuartileDeviation = StatisticsCode("4-dev")
    1stQuintile = StatisticsCode("5-1")
    2ndQuintile = StatisticsCode("5-2")
    3rdQuintile = StatisticsCode("5-3")
    4thQuintile = StatisticsCode("5-4")
    Skew = StatisticsCode("skew")
    Kurtosis = StatisticsCode("kurtosis")
    Regression = StatisticsCode("regression")
