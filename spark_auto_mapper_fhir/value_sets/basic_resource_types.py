from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.FhirValueSetBase import FhirValueSetBase
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class BasicResourceTypes(FhirValueSetBase):
    """
    """
    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)


class BasicResourceTypesValues:
    Consent = BasicResourceTypes("consent")
    Referral = BasicResourceTypes("referral")
    AdverseEvent = BasicResourceTypes("advevent")
    AppointmentRequest = BasicResourceTypes("aptmtreq")
    Transfer = BasicResourceTypes("transfer")
    Diet = BasicResourceTypes("diet")
    AdministrativeActivity = BasicResourceTypes("adminact")
    Exposure = BasicResourceTypes("exposure")
    Investigation = BasicResourceTypes("investigation")
    Account = BasicResourceTypes("account")
    Invoice = BasicResourceTypes("invoice")
    InvoiceAdjudication = BasicResourceTypes("adjudicat")
    PredeterminationRequest = BasicResourceTypes("predetreq")
    Predetermination = BasicResourceTypes("predetermine")
    Study = BasicResourceTypes("study")
    Protocol = BasicResourceTypes("protocol")
