from __future__ import annotations

from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class ProcessingID(GenericTypeCode):
    """
    v3.ProcessingID
    From: http://terminology.hl7.org/ValueSet/v3-ProcessingID in v3-codesystems.xml
         Codes used to specify whether a message is part of a production, training, or
    debugging system.
    """

    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)

    """
    http://terminology.hl7.org/CodeSystem/v3-ProcessingID
    """
    codeset: FhirUri = "http://terminology.hl7.org/CodeSystem/v3-ProcessingID"


class ProcessingIDValues:
    """
    Identifies debugging type of processing.
    From: http://terminology.hl7.org/CodeSystem/v3-ProcessingID in v3-codesystems.xml
    """

    Debugging = ProcessingID("D")
    """
    Identifies production type of processing.
    From: http://terminology.hl7.org/CodeSystem/v3-ProcessingID in v3-codesystems.xml
    """
    Production = ProcessingID("P")
    """
    Identifies training type of processing.
    From: http://terminology.hl7.org/CodeSystem/v3-ProcessingID in v3-codesystems.xml
    """
    Training = ProcessingID("T")
