from __future__ import annotations

from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class PropertyTypeCode(GenericTypeCode):
    """
    PropertyType
    """

    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)

    """
    http://hl7.org/fhir/ValueSet/concept-property-type
    """
    codeset: FhirUri = "http://hl7.org/fhir/ValueSet/concept-property-type"


class PropertyTypeCodeValues:
    """
    The property value is a code that identifies a concept defined in the code system.
    """

    Code_internalReference_ = PropertyTypeCode("code")
    """
    The property  value is a code defined in an external code system. This may be used for translations, but is not the intent.
    """
    Coding_externalReference_ = PropertyTypeCode("Coding")
    """
    The property value is a string.
    """
    String = PropertyTypeCode("string")
    """
    The property value is a string (often used to assign ranking values to concepts for supporting score assessments).
    """
    Integer = PropertyTypeCode("integer")
    """
    The property value is a boolean true | false.
    """
    Boolean = PropertyTypeCode("boolean")
    """
    The property is a date or a date + time.
    """
    DateTime = PropertyTypeCode("dateTime")
    """
    The property value is a decimal number.
    """
    Decimal = PropertyTypeCode("decimal")
