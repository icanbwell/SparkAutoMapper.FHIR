from __future__ import annotations

from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class ActClassObservation(GenericTypeCode):
    """
    v3.ActClassObservation
    From: http://terminology.hl7.org/ValueSet/v3-ActClassObservation in v3-codesystems.xml
          Description:
    An act that is intended to result in new information about a subject. The main
    difference between Observations and other Acts is that Observations have a
    value attribute. Thecode
    attribute of Observation and thevalue
    attribute of Observation must be considered in combination to determine the
    semantics of the observation.  Discussion:
     Structurally, many observations are name-value-pairs, where the
    Observation.code (inherited from Act) is the name and the Observation.value is
    the value of the property. Such a construct is also known as a  variable (a
    named feature that can assume a value) hence, the Observation class is always
    used to hold generic name-value-pairs or variables, even though the variable
    valuation may not be the result of an elaborate observation method. It may be
    a simple answer to a question or it may be an assertion or setting of a
    parameter. As with all Act statements, Observation statements describe what
    was done, and in the case of Observations, this includes a description of what
    was actually observed (results or answers); and those results or answers are
    part of the observation and not split off into other objects. The method of
    action is asserted by the Observation classCode or its subclasses at the least
    granular level, by the Observation.code attribute value at the medium level of
    granularity, and by the attribute value of observation.methodCode when a finer
    level of granularity is required. The method in whole or in part may also
    appear in the attribute value of Observation.value when using coded data types
    to express the value of the attribute. Relevant aspects of methodology may
    also be restated in value when the results themselves imply or state a
    methodology. An observation may consist of component observations each having
    their own Observation.code and Observation.value. In this case, the composite
    observation may not have an Observation.value for itself. For instance, a
    white blood cell count consists of the sub-observations for the counts of the
    various granulocytes, lymphocytes and other normal or abnormal blood cells
    (e.g., blasts). The overall white blood cell count Observation itself may
    therefore not have a value by itself (even though it could have one, e.g., the
    sum total of white blood cells). Thus, as long as an Act is essentially an Act
    of recognizing and noting information about a subject, it is an Observation,
    regardless of whether it has a simple value by itself or whether it has sub-
    observations. Even though observations are professional acts (see Act) and as
    such are intentional actions, this does not require that every possible
    outcome of an observation be pondered in advance of it being actually made.
    For instance, differential white blood cell counts (WBC) rarely show blasts,
    but if they do, this is part of the WBC observation even though blasts might
    not be predefined in the structure of a normal WBC. Clinical documents
    commonly have Subjective and Objective findings, both of which are kinds of
    Observations. In addition, clinical documents commonly contain Assessments,
    which are also kinds of Observations. Thus, the establishment of a diagnosis
    is an Observation.  Examples:
       Recording the results of a Family History Assessment  Laboratory test and
    associated result  Physical exam test and associated result  Device
    temperature  Soil lead level
    """

    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)

    """
    http://terminology.hl7.org/CodeSystem/v3-ActClass
    """
    codeset: FhirUri = "http://terminology.hl7.org/CodeSystem/v3-ActClass"


class ActClassObservationValues:
    """
    A record of something that is being done, has been done, can be done, or is
    intended or requested to be done.


                               Examples:The kinds of acts that are common in
    health care are (1) a clinical observation, (2) an assessment of health
    condition (such as problems and diagnoses), (3) healthcare goals, (4)
    treatment services (such as medication, surgery, physical and psychological
    therapy), (5) assisting, monitoring or attending, (6) training and education
    services to patients and their next of kin, (7) and notary services (such as
    advanced directives or living will), (8)  editing and maintaining documents,
    and many others.


                               Discussion and Rationale: Acts are the pivot of the
    RIM; all domain information and processes are represented primarily in Acts.
    Any profession or business, including healthcare, is primarily constituted of
    intentional and occasionally non-intentional actions, performed and recorded
    by responsible actors. An Act-instance is a record of such an action.

                            Acts connect to Entities in their Roles through
    Participations and connect to other Acts through ActRelationships.
    Participations are the authors, performers and other responsible parties as
    well as subjects and beneficiaries (which includes tools and material used in
    the performance of the act, which are also subjects). The moodCode
    distinguishes between Acts that are meant as factual records, vs. records of
    intended or ordered services, and the other modalities in which act can
    appear.

                            One of the Participations that all acts have (at least
    implicitly) is a primary author, who is responsible of the Act and who "owns"
    the act. Responsibility for the act means responsibility for what is being
    stated in the Act and as what it is stated. Ownership of the act is assumed in
    the sense of who may operationally modify the same act. Ownership and
    responsibility of the Act is not the same as ownership or responsibility of
    what the Act-object refers to in the real world. The same real world activity
    can be described by two people, each being the author of their Act, describing
    the same real world activity. Yet one can be a witness while the other can be
    a principal performer. The performer has responsibilities for the physical
    actions; the witness only has responsibility for making a true statement to
    the best of his or her ability. The two Act-instances may even disagree, but
    because each is properly attributed to its author, such disagreements can
    exist side by side and left to arbitration by a recipient of these Act-
    instances.

                            In this sense, an Act-instance represents a
    "statement" according to Rector and Nowlan (1991) [Foundations for an
    electronic medical record. Methods Inf Med. 30.]  Rector and Nowlan have
    emphasized the importance of understanding the medical record not as a
    collection of facts, but "a faithful record of what clinicians have heard,
    seen, thought, and done." Rector and Nowlan go on saying that "the other
    requirements for a medical record, e.g., that it be attributable and
    permanent, follow naturally from this view." Indeed the Act class is this
    attributable statement, and the rules of updating acts (discussed in the
    state-transition model, see Act.statusCode) versus generating new Act-
    instances are designed according to this principle of permanent attributable
    statements.

                            Rector and Nolan focus on the electronic medical
    record as a collection of statements, while attributed statements, these are
    still mostly factual statements. However, the Act class goes beyond this
    limitation to attributed factual statements, representing what is known as
    "speech-acts" in linguistics and philosophy.  The notion of speech-act
    includes that there is pragmatic meaning in language utterances, aside from
    just factual statements; and that these utterances interact with the real
    world to change the state of affairs, even directly cause physical activities
    to happen. For example, an order is a speech act that (provided it is issued
    adequately) will cause the ordered action to be physically performed. The
    speech act theory has culminated in the seminal work by Austin (1962) [How to
    do things with words. Oxford University Press].

                            An activity in the real world may progress from
    defined, through planned and ordered to executed, which is represented as the
    mood of the Act. Even though one might think of a single activity as
    progressing from planned to executed, this progression is reflected by
    multiple Act-instances, each having one and only one mood that will not change
    along the Act-instance life cycle.  This is because the attribution and
    content of speech acts along this progression of an activity may be different,
    and it is often critical that a permanent and faithful record be maintained of
    this progression. The specification of orders or promises or plans must not be
    overwritten by the specification of what was actually done, so as to allow
    comparing actions with their earlier specifications. Act-instances that
    describe this progression of the same real world activity are linked through
    the ActRelationships (of the relationship category "sequel").

                            Act as statements or speech-acts are the only
    representation of real world facts or processes in the HL7 RIM. The truth
    about the real world is constructed through a combination (and arbitration) of
    such attributed statements only, and there is no class in the RIM whose
    objects represent "objective state of affairs" or "real processes" independent
    from attributed statements. As such, there is no distinction between an
    activity and its documentation. Every Act includes both to varying degrees.
    For example, a factual statement made about recent (but past) activities,
    authored (and signed) by the performer of such activities, is commonly known
    as a procedure report or original documentation (e.g., surgical procedure
    report, clinic note etc.). Conversely, a status update on an activity that is
    presently in progress, authored by the performer (or a close observer) is
    considered to capture that activity (and is later superceded by a full
    procedure report). However, both status update and procedure report are acts
    of the same kind, only distinguished by mood and state (see statusCode) and
    completeness of the information.
    From: http://terminology.hl7.org/CodeSystem/v3-ActClass in v3-codesystems.xml
    """

    Act = ActClassObservation("ACT")
    """
    From: http://terminology.hl7.org/CodeSystem/v3-ActClass in v3-codesystems.xml
    """
    DOCCNTNT = ActClassObservation("DOCCNTNT")
    """
    From: http://terminology.hl7.org/CodeSystem/v3-ActClass in v3-codesystems.xml
    """
    DOCLIST = ActClassObservation("DOCLIST")
    """
    From: http://terminology.hl7.org/CodeSystem/v3-ActClass in v3-codesystems.xml
    """
    DOCLSTITM = ActClassObservation("DOCLSTITM")
    """
    From: http://terminology.hl7.org/CodeSystem/v3-ActClass in v3-codesystems.xml
    """
    DOCPARA = ActClassObservation("DOCPARA")
    """
    From: http://terminology.hl7.org/CodeSystem/v3-ActClass in v3-codesystems.xml
    """
    DOCTBL = ActClassObservation("DOCTBL")
    """
    From: http://terminology.hl7.org/CodeSystem/v3-ActClass in v3-codesystems.xml
    """
    LINKHTML = ActClassObservation("LINKHTML")
    """
    From: http://terminology.hl7.org/CodeSystem/v3-ActClass in v3-codesystems.xml
    """
    LOCALATTR = ActClassObservation("LOCALATTR")
    """
    From: http://terminology.hl7.org/CodeSystem/v3-ActClass in v3-codesystems.xml
    """
    LOCALMRKP = ActClassObservation("LOCALMRKP")
    """
    From: http://terminology.hl7.org/CodeSystem/v3-ActClass in v3-codesystems.xml
    """
    Ordered = ActClassObservation("ordered")
    """
    From: http://terminology.hl7.org/CodeSystem/v3-ActClass in v3-codesystems.xml
    """
    REFR = ActClassObservation("REFR")
    """
    From: http://terminology.hl7.org/CodeSystem/v3-ActClass in v3-codesystems.xml
    """
    TBLCOL = ActClassObservation("TBLCOL")
    """
    From: http://terminology.hl7.org/CodeSystem/v3-ActClass in v3-codesystems.xml
    """
    TBLCOLGP = ActClassObservation("TBLCOLGP")
    """
    From: http://terminology.hl7.org/CodeSystem/v3-ActClass in v3-codesystems.xml
    """
    TBLDATA = ActClassObservation("TBLDATA")
    """
    From: http://terminology.hl7.org/CodeSystem/v3-ActClass in v3-codesystems.xml
    """
    TBLHDR = ActClassObservation("TBLHDR")
    """
    From: http://terminology.hl7.org/CodeSystem/v3-ActClass in v3-codesystems.xml
    """
    TBLROW = ActClassObservation("TBLROW")
    """
    From: http://terminology.hl7.org/CodeSystem/v3-ActClass in v3-codesystems.xml
    """
    Tbody = ActClassObservation("tbody")
    """
    From: http://terminology.hl7.org/CodeSystem/v3-ActClass in v3-codesystems.xml
    """
    Tfoot = ActClassObservation("tfoot")
    """
    From: http://terminology.hl7.org/CodeSystem/v3-ActClass in v3-codesystems.xml
    """
    Thead = ActClassObservation("thead")
    """
    From: http://terminology.hl7.org/CodeSystem/v3-ActClass in v3-codesystems.xml
    """
    Unordered = ActClassObservation("unordered")
