from __future__ import annotations

from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class EncounterTypeCode(GenericTypeCode):
    """
    EncounterType
    From: http://terminology.hl7.org/CodeSystem/encounter-type in valuesets.xml
        This example value set defines a set of codes that can be used to indicate the
    type of encounter: a specific code indicating type of service provided.
    """

    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)

    """
    http://terminology.hl7.org/CodeSystem/encounter-type
    """
    codeset: FhirUri = "http://terminology.hl7.org/CodeSystem/encounter-type"


class EncounterTypeCodeValues:
    """
    From: http://terminology.hl7.org/CodeSystem/encounter-type in valuesets.xml
    """

    AnnualDiabetesMellitusScreening = EncounterTypeCode("ADMS")
    """
    From: http://terminology.hl7.org/CodeSystem/encounter-type in valuesets.xml
    """
    BoneDrilling_boneMarrowPunctionInClinic = EncounterTypeCode("BD/BM-clin")
    """
    From: http://terminology.hl7.org/CodeSystem/encounter-type in valuesets.xml
    """
    InfantColonScreening_60Minutes = EncounterTypeCode("CCS60")
    """
    From: http://terminology.hl7.org/CodeSystem/encounter-type in valuesets.xml
    """
    OutpatientKenacortInjection = EncounterTypeCode("OKI")
