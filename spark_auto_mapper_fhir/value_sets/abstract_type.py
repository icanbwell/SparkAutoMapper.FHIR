from __future__ import annotations


from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class AbstractTypeCode(GenericTypeCode):
    """
    AbstractType
    From: http://hl7.org/fhir/abstract-types in valuesets.xml
        A list of the base types defined by this version of the FHIR specification -
    types that are defined, but for which only specializations actually are
    created.
    """

    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)


class AbstractTypeCodeValues:
    """
    A place holder that means any kind of data type
    From: http://hl7.org/fhir/abstract-types in valuesets.xml
    """

    Type = AbstractTypeCode("Type")
    """
    A place holder that means any kind of resource
    From: http://hl7.org/fhir/abstract-types in valuesets.xml
    """
    Any = AbstractTypeCode("Any")
