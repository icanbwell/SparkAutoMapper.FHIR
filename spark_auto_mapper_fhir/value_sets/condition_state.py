from __future__ import annotations

from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode
from spark_auto_mapper.type_definitions.defined_types import AutoMapperTextInputType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class ConditionStateCode(GenericTypeCode):
    """
    ConditionState
    From: http://terminology.hl7.org/CodeSystem/condition-state in valuesets.xml
        Enumeration indicating whether the condition is currently active, inactive, or
    has been resolved.
    """

    def __init__(self, value: AutoMapperTextInputType):
        super().__init__(value=value)

    """
    http://terminology.hl7.org/CodeSystem/condition-state
    """
    codeset: FhirUri = "http://terminology.hl7.org/CodeSystem/condition-state"


class ConditionStateCodeValues:
    """
    The condition is active.
    From: http://terminology.hl7.org/CodeSystem/condition-state in valuesets.xml
    """

    Active = ConditionStateCode("active")
    """
    The condition is inactive, but not resolved.
    From: http://terminology.hl7.org/CodeSystem/condition-state in valuesets.xml
    """
    Inactive = ConditionStateCode("inactive")
    """
    The condition is resolved.
    From: http://terminology.hl7.org/CodeSystem/condition-state in valuesets.xml
    """
    Resolved = ConditionStateCode("resolved")
