from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString

from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_complex_type_base import FhirComplexTypeBase

if TYPE_CHECKING:
    pass
    # type_ (RelatedArtifactType)
    from spark_auto_mapper_fhir.value_sets.related_artifact_type import (
        RelatedArtifactTypeCode,
    )

    # label (string)
    # display (string)
    # citation (markdown)
    from spark_auto_mapper_fhir.fhir_types.markdown import FhirMarkdown

    # url (url)
    from spark_auto_mapper_fhir.fhir_types.url import FhirUrl

    # document (Attachment)
    from spark_auto_mapper_fhir.complex_types.attachment import Attachment

    # resource (canonical)
    from spark_auto_mapper_fhir.fhir_types.canonical import FhirCanonical


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class RelatedArtifact(FhirComplexTypeBase):
    """
    RelatedArtifact
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        type_: RelatedArtifactTypeCode,
        label: Optional[FhirString] = None,
        display: Optional[FhirString] = None,
        citation: Optional[FhirMarkdown] = None,
        url: Optional[FhirUrl] = None,
        document: Optional[Attachment] = None,
        resource: Optional[FhirCanonical] = None,
    ) -> None:
        """

            :param id_: id of resource
            :param extension: extensions
            :param type_: The type of relationship to the related artifact.
            :param label: A short label that can be used to reference the citation from elsewhere in the
        containing artifact, such as a footnote index.
            :param display: A brief description of the document or knowledge resource being referenced,
        suitable for display to a consumer.
            :param citation: A bibliographic citation for the related artifact. This text SHOULD be
        formatted according to an accepted citation format.
            :param url: A url for the artifact that can be followed to access the actual content.
            :param document: The document being referenced, represented as an attachment. This is exclusive
        with the resource element.
            :param resource: The related resource, such as a library, value set, profile, or other
        knowledge resource.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            type_=type_,
            label=label,
            display=display,
            citation=citation,
            url=url,
            document=document,
            resource=resource,
        )
