from __future__ import annotations
from typing import Optional, TYPE_CHECKING, Union

from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString

from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_complex_type_base import FhirComplexTypeBase

if TYPE_CHECKING:
    pass
    # time (dateTime)
    # text (markdown)
    from spark_auto_mapper_fhir.fhir_types.markdown import FhirMarkdown

    # authorReference (Reference)
    from spark_auto_mapper_fhir.complex_types.reference import Reference

    # Imports for References for authorReference
    from spark_auto_mapper_fhir.resources.practitioner import Practitioner
    from spark_auto_mapper_fhir.resources.patient import Patient
    from spark_auto_mapper_fhir.resources.related_person import RelatedPerson
    from spark_auto_mapper_fhir.resources.organization import Organization

    # authorString (string)


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class Annotation(FhirComplexTypeBase):
    """
    Annotation
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        time: Optional[FhirDateTime] = None,
        text: FhirMarkdown,
        authorReference: Optional[
            Reference[Union[Practitioner, Patient, RelatedPerson, Organization]]
        ] = None,
        authorString: Optional[FhirString] = None,
    ) -> None:
        """

        :param id_: id of resource
        :param extension: extensions
        :param time: Indicates when this particular annotation was made.
        :param text: The text of the annotation in markdown format.
        :param authorReference: None
        :param authorString: None
        """
        super().__init__(
            id_=id_,
            extension=extension,
            time=time,
            text=text,
            authorReference=authorReference,
            authorString=authorString,
        )
