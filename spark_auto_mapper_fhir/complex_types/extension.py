from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_complex_type_base import FhirComplexTypeBase

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.complex_types.base64_binary import base64Binary
    from spark_auto_mapper_fhir.complex_types.boolean import boolean
    from spark_auto_mapper_fhir.complex_types.canonical import canonical
    from spark_auto_mapper_fhir.complex_types.code import code
    from spark_auto_mapper_fhir.complex_types.date import date
    from spark_auto_mapper_fhir.complex_types.date_time import dateTime
    from spark_auto_mapper_fhir.complex_types.decimal import decimal
    from spark_auto_mapper_fhir.complex_types.id import id
    from spark_auto_mapper_fhir.complex_types.instant import instant
    from spark_auto_mapper_fhir.complex_types.integer import integer
    from spark_auto_mapper_fhir.complex_types.markdown import markdown
    from spark_auto_mapper_fhir.complex_types.oid import oid
    from spark_auto_mapper_fhir.complex_types.positive_int import positiveInt
    from spark_auto_mapper_fhir.complex_types.string import string
    from spark_auto_mapper_fhir.complex_types.time import time
    from spark_auto_mapper_fhir.complex_types.unsigned_int import unsignedInt
    from spark_auto_mapper_fhir.complex_types.uri import uri
    from spark_auto_mapper_fhir.complex_types.url import url
    from spark_auto_mapper_fhir.complex_types.uuid import uuid
    from spark_auto_mapper_fhir.complex_types.address import Address
    from spark_auto_mapper_fhir.complex_types.annotation import Annotation
    from spark_auto_mapper_fhir.complex_types.attachment import Attachment
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept
    from spark_auto_mapper_fhir.complex_types.coding import Coding
    from spark_auto_mapper_fhir.complex_types.contact_point import ContactPoint
    from spark_auto_mapper_fhir.complex_types.human_name import HumanName
    from spark_auto_mapper_fhir.complex_types.identifier import Identifier
    from spark_auto_mapper_fhir.complex_types.money import Money
    from spark_auto_mapper_fhir.complex_types.period import Period
    from spark_auto_mapper_fhir.complex_types.quantity import Quantity
    from spark_auto_mapper_fhir.complex_types.range import Range
    from spark_auto_mapper_fhir.complex_types.ratio import Ratio
    from spark_auto_mapper_fhir.complex_types.reference import Reference
    from spark_auto_mapper_fhir.complex_types.sampled_data import SampledData
    from spark_auto_mapper_fhir.complex_types.signature import Signature
    from spark_auto_mapper_fhir.backbone_elements.timing import Timing
    from spark_auto_mapper_fhir.complex_types.contact_detail import ContactDetail
    from spark_auto_mapper_fhir.complex_types.contributor import Contributor
    from spark_auto_mapper_fhir.complex_types.data_requirement import DataRequirement
    from spark_auto_mapper_fhir.complex_types.expression import Expression
    from spark_auto_mapper_fhir.complex_types.parameter_definition import ParameterDefinition
    from spark_auto_mapper_fhir.complex_types.related_artifact import RelatedArtifact
    from spark_auto_mapper_fhir.complex_types.trigger_definition import TriggerDefinition
    from spark_auto_mapper_fhir.complex_types.usage_context import UsageContext
    from spark_auto_mapper_fhir.backbone_elements.dosage import Dosage
    from spark_auto_mapper_fhir.complex_types.meta import Meta


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class Extension(FhirComplexTypeBase):
    """
    Extension
    """
    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        meta: Optional[Meta] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        valueBase64Binary: base64Binary ,
        valueBoolean: FhirBoolean ,
        valueCanonical: canonical ,
        valueCode: code ,
        valueDate: FhirDate ,
        valueDateTime: FhirDateTime ,
        valueDecimal: decimal ,
        valueId: id ,
        valueInstant: instant ,
        valueInteger: FhirInteger ,
        valueMarkdown: markdown ,
        valueOid: oid ,
        valuePositiveInt: positiveInt ,
        valueString: FhirString ,
        valueTime: time ,
        valueUnsignedInt: unsignedInt ,
        valueUri: uri ,
        valueUrl: url ,
        valueUuid: uuid ,
        valueAddress: Address ,
        valueAge: Age ,
        valueAnnotation: Annotation ,
        valueAttachment: Attachment ,
        valueCodeableConcept: CodeableConcept ,
        valueCoding: Coding ,
        valueContactPoint: ContactPoint ,
        valueCount: Count ,
        valueDistance: Distance ,
        valueDuration: Duration ,
        valueHumanName: HumanName ,
        valueIdentifier: Identifier ,
        valueMoney: Money ,
        valuePeriod: Period ,
        valueQuantity: Quantity ,
        valueRange: Range ,
        valueRatio: Ratio ,
        valueReference: Reference ,
        valueSampledData: SampledData ,
        valueSignature: Signature ,
        valueTiming: Timing ,
        valueContactDetail: ContactDetail ,
        valueContributor: Contributor ,
        valueDataRequirement: DataRequirement ,
        valueExpression: Expression ,
        valueParameterDefinition: ParameterDefinition ,
        valueRelatedArtifact: RelatedArtifact ,
        valueTriggerDefinition: TriggerDefinition ,
        valueUsageContext: UsageContext ,
        valueDosage: Dosage ,
        valueMeta: Meta ,
    ) -> None:
        """

        :param id_: id of resource
        :param meta: Meta
        :param extension: extensions
        :param valueBase64Binary: None
        :param valueBoolean: None
        :param valueCanonical: None
        :param valueCode: None
        :param valueDate: None
        :param valueDateTime: None
        :param valueDecimal: None
        :param valueId: None
        :param valueInstant: None
        :param valueInteger: None
        :param valueMarkdown: None
        :param valueOid: None
        :param valuePositiveInt: None
        :param valueString: None
        :param valueTime: None
        :param valueUnsignedInt: None
        :param valueUri: None
        :param valueUrl: None
        :param valueUuid: None
        :param valueAddress: None
        :param valueAge: None
        :param valueAnnotation: None
        :param valueAttachment: None
        :param valueCodeableConcept: None
        :param valueCoding: None
        :param valueContactPoint: None
        :param valueCount: None
        :param valueDistance: None
        :param valueDuration: None
        :param valueHumanName: None
        :param valueIdentifier: None
        :param valueMoney: None
        :param valuePeriod: None
        :param valueQuantity: None
        :param valueRange: None
        :param valueRatio: None
        :param valueReference: None
        :param valueSampledData: None
        :param valueSignature: None
        :param valueTiming: None
        :param valueContactDetail: None
        :param valueContributor: None
        :param valueDataRequirement: None
        :param valueExpression: None
        :param valueParameterDefinition: None
        :param valueRelatedArtifact: None
        :param valueTriggerDefinition: None
        :param valueUsageContext: None
        :param valueDosage: None
        :param valueMeta: None
        """
        super().__init__(
            id_=id_,
            meta=meta,
            extension=extension,
            valueBase64Binary=valueBase64Binary,
            valueBoolean=valueBoolean,
            valueCanonical=valueCanonical,
            valueCode=valueCode,
            valueDate=valueDate,
            valueDateTime=valueDateTime,
            valueDecimal=valueDecimal,
            valueId=valueId,
            valueInstant=valueInstant,
            valueInteger=valueInteger,
            valueMarkdown=valueMarkdown,
            valueOid=valueOid,
            valuePositiveInt=valuePositiveInt,
            valueString=valueString,
            valueTime=valueTime,
            valueUnsignedInt=valueUnsignedInt,
            valueUri=valueUri,
            valueUrl=valueUrl,
            valueUuid=valueUuid,
            valueAddress=valueAddress,
            valueAge=valueAge,
            valueAnnotation=valueAnnotation,
            valueAttachment=valueAttachment,
            valueCodeableConcept=valueCodeableConcept,
            valueCoding=valueCoding,
            valueContactPoint=valueContactPoint,
            valueCount=valueCount,
            valueDistance=valueDistance,
            valueDuration=valueDuration,
            valueHumanName=valueHumanName,
            valueIdentifier=valueIdentifier,
            valueMoney=valueMoney,
            valuePeriod=valuePeriod,
            valueQuantity=valueQuantity,
            valueRange=valueRange,
            valueRatio=valueRatio,
            valueReference=valueReference,
            valueSampledData=valueSampledData,
            valueSignature=valueSignature,
            valueTiming=valueTiming,
            valueContactDetail=valueContactDetail,
            valueContributor=valueContributor,
            valueDataRequirement=valueDataRequirement,
            valueExpression=valueExpression,
            valueParameterDefinition=valueParameterDefinition,
            valueRelatedArtifact=valueRelatedArtifact,
            valueTriggerDefinition=valueTriggerDefinition,
            valueUsageContext=valueUsageContext,
            valueDosage=valueDosage,
            valueMeta=valueMeta,
        )
