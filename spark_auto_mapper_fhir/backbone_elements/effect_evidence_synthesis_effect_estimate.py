from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # description (string)
    # type_ (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # End Import for References for type_
    # Import for CodeableConcept for type_
    from spark_auto_mapper_fhir.value_sets.effect_estimate_type import (
        EffectEstimateTypeCode,
    )

    # End Import for CodeableConcept for type_
    # variantState (CodeableConcept)
    # End Import for References for variantState
    # Import for CodeableConcept for variantState
    from spark_auto_mapper_fhir.value_sets.evidence_variant_state import (
        EvidenceVariantStateCode,
    )

    # End Import for CodeableConcept for variantState
    # value (decimal)
    from spark_auto_mapper_fhir.fhir_types.decimal import FhirDecimal

    # unitOfMeasure (CodeableConcept)
    # End Import for References for unitOfMeasure
    # Import for CodeableConcept for unitOfMeasure
    from spark_auto_mapper_fhir.value_sets.ucum_codes import UCUMCodesCode

    # End Import for CodeableConcept for unitOfMeasure
    # precisionEstimate (EffectEvidenceSynthesis.PrecisionEstimate)
    from spark_auto_mapper_fhir.backbone_elements.effect_evidence_synthesis_precision_estimate import (
        EffectEvidenceSynthesisPrecisionEstimate,
    )


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class EffectEvidenceSynthesisEffectEstimate(FhirBackboneElementBase):
    """
    EffectEvidenceSynthesis.EffectEstimate
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        description: Optional[FhirString] = None,
        type_: Optional[CodeableConcept[EffectEstimateTypeCode]] = None,
        variantState: Optional[CodeableConcept[EvidenceVariantStateCode]] = None,
        value: Optional[FhirDecimal] = None,
        unitOfMeasure: Optional[CodeableConcept[UCUMCodesCode]] = None,
        precisionEstimate: Optional[
            FhirList[EffectEvidenceSynthesisPrecisionEstimate]
        ] = None,
    ) -> None:
        """

        :param id_: id of resource
        :param extension: extensions
        :param description: Human-readable summary of effect estimate.
        :param type_: Examples include relative risk and mean difference.
        :param variantState: Used to define variant exposure states such as low-risk state.
        :param value: The point estimate of the effect estimate.
        :param unitOfMeasure: Specifies the UCUM unit for the outcome.
        :param precisionEstimate: A description of the precision of the estimate for the effect.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            description=description,
            type_=type_,
            variantState=variantState,
            value=value,
            unitOfMeasure=unitOfMeasure,
            precisionEstimate=precisionEstimate,
        )
