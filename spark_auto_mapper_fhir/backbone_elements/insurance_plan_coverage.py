from __future__ import annotations
from typing import Optional, TYPE_CHECKING, Union

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # type_ (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # End Import for References for type_
    # Import for CodeableConcept for type_
    from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode

    # End Import for CodeableConcept for type_
    # network (Reference)
    from spark_auto_mapper_fhir.complex_types.reference import Reference

    # Imports for References for network
    from spark_auto_mapper_fhir.resources.organization import Organization

    # benefit (InsurancePlan.Benefit)
    from spark_auto_mapper_fhir.backbone_elements.insurance_plan_benefit import (
        InsurancePlanBenefit,
    )


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class InsurancePlanCoverage(FhirBackboneElementBase):
    """
    InsurancePlan.Coverage
        Details of a Health Insurance product/plan provided by an organization.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        type_: CodeableConcept[GenericTypeCode],
        network: Optional[FhirList[Reference[Union[Organization]]]] = None,
        benefit: FhirList[InsurancePlanBenefit],
    ) -> None:
        """
            Details of a Health Insurance product/plan provided by an organization.

            :param id_: id of resource
            :param extension: extensions
            :param type_: Type of coverage  (Medical; Dental; Mental Health; Substance Abuse; Vision;
        Drug; Short Term; Long Term Care; Hospice; Home Health).
            :param network: Reference to the network that providing the type of coverage.
            :param benefit: Specific benefits under this type of coverage.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            type_=type_,
            network=network,
            benefit=benefit,
        )
