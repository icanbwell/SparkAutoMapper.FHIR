from __future__ import annotations
from typing import Optional, TYPE_CHECKING, Union

from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # collector (Reference)
    from spark_auto_mapper_fhir.complex_types.reference import Reference

    # Imports for References for collector
    from spark_auto_mapper_fhir.resources.practitioner import Practitioner
    from spark_auto_mapper_fhir.resources.practitioner_role import PractitionerRole

    # source (Reference)
    # Imports for References for source
    from spark_auto_mapper_fhir.resources.patient import Patient
    from spark_auto_mapper_fhir.resources.organization import Organization

    # collectedDateTime (dateTime)
    # collectedPeriod (Period)
    from spark_auto_mapper_fhir.complex_types.period import Period


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class BiologicallyDerivedProductCollection(FhirBackboneElementBase):
    """
        BiologicallyDerivedProduct.Collection
            A material substance originating from a biological entity intended to be transplanted or infused
    into another (possibly the same) biological entity.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        collector: Optional[Reference[Union[Practitioner, PractitionerRole]]] = None,
        source: Optional[Reference[Union[Patient, Organization]]] = None,
        collectedDateTime: Optional[FhirDateTime] = None,
        collectedPeriod: Optional[Period] = None,
    ) -> None:
        """
            A material substance originating from a biological entity intended to be
        transplanted or infused
        into another (possibly the same) biological entity.

            :param id_: id of resource
            :param extension: extensions
            :param collector: Healthcare professional who is performing the collection.
            :param source: The patient or entity, such as a hospital or vendor in the case of a
        processed/manipulated/manufactured product, providing the product.
            :param collectedDateTime: None
            :param collectedPeriod: None
        """
        super().__init__(
            id_=id_,
            extension=extension,
            collector=collector,
            source=source,
            collectedDateTime=collectedDateTime,
            collectedPeriod=collectedPeriod,
        )
