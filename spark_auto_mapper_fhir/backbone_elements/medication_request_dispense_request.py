from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.backbone_elements.medication_request_initial_fill import MedicationRequestInitialFill
    from spark_auto_mapper_fhir.complex_types.period import Period
    from spark_auto_mapper_fhir.complex_types.unsigned_int import unsignedInt
    from spark_auto_mapper_fhir.complex_types.quantity import Quantity
    from spark_auto_mapper_fhir.complex_types.reference import Reference
    # Imports for References for performer
    from spark_auto_mapper_fhir.resources.organization import Organization


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class MedicationRequestDispenseRequest(FhirBackboneElementBase):
    """
    """
    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        extension: Optional[FhirList[ExtensionBase]] = None,
        initialFill: Optional[MedicationRequestInitialFill ] = None,
        dispenseInterval: Optional[Duration ] = None,
        validityPeriod: Optional[Period ] = None,
        numberOfRepeatsAllowed: Optional[unsignedInt ] = None,
        quantity: Optional[Quantity ] = None,
        expectedSupplyDuration: Optional[Duration ] = None,
        performer: Optional[Reference [Union[Organization]]] = None,
    ) -> None:
        """

        :param id_: id of resource
        :param extension: extensions
        :param initialFill: Indicates the quantity or duration for the first dispense of the medication.
        :param dispenseInterval: The minimum period of time that must occur between dispenses of the
    medication.
        :param validityPeriod: This indicates the validity period of a prescription (stale dating the
    Prescription).
        :param numberOfRepeatsAllowed: An integer indicating the number of times, in addition to the original
    dispense, (aka refills or repeats) that the patient can receive the prescribed
    medication. Usage Notes: This integer does not include the original order
    dispense. This means that if an order indicates dispense 30 tablets plus "3
    repeats", then the order can be dispensed a total of 4 times and the patient
    can receive a total of 120 tablets.  A prescriber may explicitly say that zero
    refills are permitted after the initial dispense.
        :param quantity: The amount that is to be dispensed for one fill.
        :param expectedSupplyDuration: Identifies the period time over which the supplied product is expected to be
    used, or the length of time the dispense is expected to last.
        :param performer: Indicates the intended dispensing Organization specified by the prescriber.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            initialFill=initialFill,
            dispenseInterval=dispenseInterval,
            validityPeriod=validityPeriod,
            numberOfRepeatsAllowed=numberOfRepeatsAllowed,
            quantity=quantity,
            expectedSupplyDuration=expectedSupplyDuration,
            performer=performer,
        )
