from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # authorType (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # End Import for References for authorType
    # Import for CodeableConcept for authorType
    from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode

    # End Import for CodeableConcept for authorType
    # authorDescription (string)


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class SubstanceSourceMaterialAuthor(FhirBackboneElementBase):
    """
    SubstanceSourceMaterial.Author
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        authorType: Optional[CodeableConcept[GenericTypeCode]] = None,
        authorDescription: Optional[FhirString] = None,
    ) -> None:
        """

            :param id_: id of resource
            :param extension: extensions
            :param authorType: The type of author of an organism species shall be specified. The
        parenthetical author of an organism species refers to the first author who
        published the plant/animal name (of any rank). The primary author of an
        organism species refers to the first author(s), who validly published the
        plant/animal name.
            :param authorDescription: The author of an organism species shall be specified. The author year of an
        organism shall also be specified when applicable; refers to the year in which
        the first author(s) published the infraspecific plant/animal name (of any
        rank).
        """
        super().__init__(
            id_=id_,
            extension=extension,
            authorType=authorType,
            authorDescription=authorDescription,
        )
