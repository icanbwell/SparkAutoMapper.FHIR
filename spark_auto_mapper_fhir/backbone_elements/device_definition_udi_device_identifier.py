from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId
from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # deviceIdentifier (string)
    # issuer (uri)
    # jurisdiction (uri)


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class DeviceDefinitionUdiDeviceIdentifier(FhirBackboneElementBase):
    """
    DeviceDefinition.UdiDeviceIdentifier
        The characteristics, operational status and capabilities of a medical-related component of a medical device.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        deviceIdentifier: FhirString,
        issuer: FhirUri,
        jurisdiction: FhirUri,
    ) -> None:
        """
            The characteristics, operational status and capabilities of a medical-related
        component of a medical device.

            :param id_: id of resource
            :param extension: extensions
            :param deviceIdentifier: The identifier that is to be associated with every Device that references this
        DeviceDefintiion for the issuer and jurisdication porvided in the
        DeviceDefinition.udiDeviceIdentifier.
            :param issuer: The organization that assigns the identifier algorithm.
            :param jurisdiction: The jurisdiction to which the deviceIdentifier applies.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            deviceIdentifier=deviceIdentifier,
            issuer=issuer,
            jurisdiction=jurisdiction,
        )
