from __future__ import annotations
from typing import Optional, TYPE_CHECKING, Union

from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # party (Reference)
    from spark_auto_mapper_fhir.complex_types.reference import Reference

    # Imports for References for party
    from spark_auto_mapper_fhir.resources.patient import Patient
    from spark_auto_mapper_fhir.resources.related_person import RelatedPerson
    from spark_auto_mapper_fhir.resources.organization import Organization

    # onHold (boolean)
    # period (Period)
    from spark_auto_mapper_fhir.complex_types.period import Period


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class AccountGuarantor(FhirBackboneElementBase):
    """
    Account.Guarantor
        A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        party: Reference[Union[Patient, RelatedPerson, Organization]],
        onHold: Optional[FhirBoolean] = None,
        period: Optional[Period] = None,
    ) -> None:
        """
            A financial tool for tracking value accrued for a particular purpose.  In the
        healthcare field, used to track charges for a patient, cost centers, etc.

            :param id_: id of resource
            :param extension: extensions
            :param party: The entity who is responsible.
            :param onHold: A guarantor may be placed on credit hold or otherwise have their role
        temporarily suspended.
            :param period: The timeframe during which the guarantor accepts responsibility for the
        account.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            party=party,
            onHold=onHold,
            period=period,
        )
