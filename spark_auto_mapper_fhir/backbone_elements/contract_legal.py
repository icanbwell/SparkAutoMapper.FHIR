from __future__ import annotations
from typing import Optional, TYPE_CHECKING, Union

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # contentAttachment (Attachment)
    from spark_auto_mapper_fhir.complex_types.attachment import Attachment

    # contentReference (Reference)
    from spark_auto_mapper_fhir.complex_types.reference import Reference

    # Imports for References for contentReference
    from spark_auto_mapper_fhir.resources.composition import Composition
    from spark_auto_mapper_fhir.resources.document_reference import DocumentReference
    from spark_auto_mapper_fhir.resources.questionnaire_response import (
        QuestionnaireResponse,
    )


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class ContractLegal(FhirBackboneElementBase):
    """
    Contract.Legal
        Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        contentAttachment: Optional[Attachment] = None,
        contentReference: Optional[
            Reference[Union[Composition, DocumentReference, QuestionnaireResponse]]
        ] = None,
    ) -> None:
        """
            Legally enforceable, formally recorded unilateral or bilateral directive i.e.,
        a policy or agreement.

            :param id_: id of resource
            :param extension: extensions
            :param contentAttachment: None
            :param contentReference: None
        """
        super().__init__(
            id_=id_,
            extension=extension,
            contentAttachment=contentAttachment,
            contentReference=contentReference,
        )
