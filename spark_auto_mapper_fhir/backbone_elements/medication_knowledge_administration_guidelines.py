from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    # dosage (MedicationKnowledge.Dosage)
    from spark_auto_mapper_fhir.backbone_elements.medication_knowledge_dosage import (
        MedicationKnowledgeDosage,
    )

    # patientCharacteristics (MedicationKnowledge.PatientCharacteristics)
    from spark_auto_mapper_fhir.backbone_elements.medication_knowledge_patient_characteristics import (
        MedicationKnowledgePatientCharacteristics,
    )


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class MedicationKnowledgeAdministrationGuidelines(FhirBackboneElementBase):
    """
    MedicationKnowledge.AdministrationGuidelines
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        extension: Optional[FhirList[ExtensionBase]] = None,
        dosage: Optional[FhirList[MedicationKnowledgeDosage]] = None,
        patientCharacteristics: Optional[
            FhirList[MedicationKnowledgePatientCharacteristics]
        ] = None,
    ) -> None:
        """

            :param id_: id of resource
            :param extension: extensions
            :param dosage: Dosage for the medication for the specific guidelines.
            :param patientCharacteristics: Characteristics of the patient that are relevant to the administration
        guidelines (for example, height, weight, gender, etc.).
        """
        super().__init__(
            id_=id_,
            extension=extension,
            dosage=dosage,
            patientCharacteristics=patientCharacteristics,
        )
