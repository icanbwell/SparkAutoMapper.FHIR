from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # id_ (string)
    # extension (Extension)
    # modifierExtension (Extension)
    # outcome (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # End Import for References for outcome
    # Import for CodeableConcept for outcome
    from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode

    # End Import for CodeableConcept for outcome
    # probabilityDecimal (decimal)
    from spark_auto_mapper_fhir.fhir_types.decimal import FhirDecimal

    # probabilityRange (Range)
    from spark_auto_mapper_fhir.complex_types.range import Range

    # qualitativeRisk (CodeableConcept)
    # End Import for References for qualitativeRisk
    # Import for CodeableConcept for qualitativeRisk
    from spark_auto_mapper_fhir.value_sets.risk_probability import RiskProbabilityCode

    # End Import for CodeableConcept for qualitativeRisk
    # relativeRisk (decimal)
    # whenPeriod (Period)
    from spark_auto_mapper_fhir.complex_types.period import Period

    # whenRange (Range)
    # rationale (string)


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class RiskAssessmentPrediction(FhirBackboneElementBase):
    """
    RiskAssessment.Prediction
        An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirString] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        modifierExtension: Optional[FhirList[ExtensionBase]] = None,
        outcome: Optional[CodeableConcept[GenericTypeCode]] = None,
        probabilityDecimal: Optional[FhirDecimal] = None,
        probabilityRange: Optional[Range] = None,
        qualitativeRisk: Optional[CodeableConcept[RiskProbabilityCode]] = None,
        relativeRisk: Optional[FhirDecimal] = None,
        whenPeriod: Optional[Period] = None,
        whenRange: Optional[Range] = None,
        rationale: Optional[FhirString] = None,
    ) -> None:
        """
            An assessment of the likely outcome(s) for a patient or other subject as well
        as the likelihood of each outcome.

            :param id_: None
            :param extension: May be used to represent additional information that is not part of the basic
        definition of the element. To make the use of extensions safe and manageable,
        there is a strict set of governance  applied to the definition and use of
        extensions. Though any implementer can define an extension, there is a set of
        requirements that SHALL be met as part of the definition of the extension.
            :param modifierExtension: May be used to represent additional information that is not part of the basic
        definition of the element and that modifies the understanding of the element
        in which it is contained and/or the understanding of the containing element's
        descendants. Usually modifier elements provide negation or qualification. To
        make the use of extensions safe and manageable, there is a strict set of
        governance applied to the definition and use of extensions. Though any
        implementer can define an extension, there is a set of requirements that SHALL
        be met as part of the definition of the extension. Applications processing a
        resource are required to check for modifier extensions.

        Modifier extensions SHALL NOT change the meaning of any elements on Resource
        or DomainResource (including cannot change the meaning of modifierExtension
        itself).
            :param outcome: One of the potential outcomes for the patient (e.g. remission, death,  a
        particular condition).
            :param probabilityDecimal: None
            :param probabilityRange: None
            :param qualitativeRisk: Indicates how likely the outcome is (in the specified timeframe), expressed as
        a qualitative value (e.g. low, medium, or high).
            :param relativeRisk: Indicates the risk for this particular subject (with their specific
        characteristics) divided by the risk of the population in general.  (Numbers
        greater than 1 = higher risk than the population, numbers less than 1 = lower
        risk.).
            :param whenPeriod: None
            :param whenRange: None
            :param rationale: Additional information explaining the basis for the prediction.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            modifierExtension=modifierExtension,
            outcome=outcome,
            probabilityDecimal=probabilityDecimal,
            probabilityRange=probabilityRange,
            qualitativeRisk=qualitativeRisk,
            relativeRisk=relativeRisk,
            whenPeriod=whenPeriod,
            whenRange=whenRange,
            rationale=rationale,
        )
