from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # measure (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # End Import for References for measure
    # Import for CodeableConcept for measure
    from spark_auto_mapper_fhir.value_sets.loinc_codes import LOINCCodesCode

    # End Import for CodeableConcept for measure
    # detailQuantity (Quantity)
    from spark_auto_mapper_fhir.complex_types.quantity import Quantity

    # detailRange (Range)
    from spark_auto_mapper_fhir.complex_types.range import Range

    # detailCodeableConcept (CodeableConcept)
    # End Import for References for detailCodeableConcept
    # Import for CodeableConcept for detailCodeableConcept
    from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode

    # End Import for CodeableConcept for detailCodeableConcept
    # due (Duration)
    from spark_auto_mapper_fhir.complex_types.duration import Duration


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class PlanDefinitionTarget(FhirBackboneElementBase):
    """
    PlanDefinition.Target
        This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        measure: Optional[CodeableConcept[LOINCCodesCode]] = None,
        detailQuantity: Optional[Quantity] = None,
        detailRange: Optional[Range] = None,
        detailCodeableConcept: Optional[CodeableConcept[GenericTypeCode]] = None,
        due: Optional[Duration] = None,
    ) -> None:
        """
            This resource allows for the definition of various types of plans as a
        sharable, consumable, and executable artifact. The resource is general enough
        to support the description of a broad range of clinical artifacts such as
        clinical decision support rules, order sets and protocols.

            :param id_: id of resource
            :param extension: extensions
            :param measure: The parameter whose value is to be tracked, e.g. body weight, blood pressure,
        or hemoglobin A1c level.
            :param detailQuantity: None
            :param detailRange: None
            :param detailCodeableConcept: None
            :param due: Indicates the timeframe after the start of the goal in which the goal should
        be met.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            measure=measure,
            detailQuantity=detailQuantity,
            detailRange=detailRange,
            detailCodeableConcept=detailCodeableConcept,
            due=due,
        )
