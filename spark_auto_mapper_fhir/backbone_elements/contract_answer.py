from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.complex_types.boolean import boolean
    from spark_auto_mapper_fhir.complex_types.decimal import decimal
    from spark_auto_mapper_fhir.complex_types.integer import integer
    from spark_auto_mapper_fhir.complex_types.date import date
    from spark_auto_mapper_fhir.complex_types.date_time import dateTime
    from spark_auto_mapper_fhir.complex_types.time import time
    from spark_auto_mapper_fhir.complex_types.string import string
    from spark_auto_mapper_fhir.complex_types.uri import uri
    from spark_auto_mapper_fhir.complex_types.attachment import Attachment
    from spark_auto_mapper_fhir.complex_types.coding import Coding
    from spark_auto_mapper_fhir.complex_types.quantity import Quantity
    from spark_auto_mapper_fhir.complex_types.reference import Reference


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class ContractAnswer(FhirBackboneElementBase):
    """ """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        meta: Optional[Meta] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        valueBoolean: boolean,
        valueDecimal: decimal,
        valueInteger: integer,
        valueDate: date,
        valueDateTime: dateTime,
        valueTime: time,
        valueString: string,
        valueUri: uri,
        valueAttachment: Attachment,
        valueCoding: Coding,
        valueQuantity: Quantity,
        valueReference: Reference,
    ) -> None:
        """

        :param id_: id of resource
        :param meta: Meta
        :param extension: extensions
        :param valueBoolean: None
        :param valueDecimal: None
        :param valueInteger: None
        :param valueDate: None
        :param valueDateTime: None
        :param valueTime: None
        :param valueString: None
        :param valueUri: None
        :param valueAttachment: None
        :param valueCoding: None
        :param valueQuantity: None
        :param valueReference: None
        """
        super().__init__(
            resourceType="ContractAnswer",
            id_=id_,
            meta=meta,
            extension=extension,
            valueBoolean=valueBoolean,
            valueDecimal=valueDecimal,
            valueInteger=valueInteger,
            valueDate=valueDate,
            valueDateTime=valueDateTime,
            valueTime=valueTime,
            valueString=valueString,
            valueUri=valueUri,
            valueAttachment=valueAttachment,
            valueCoding=valueCoding,
            valueQuantity=valueQuantity,
            valueReference=valueReference,
        )
