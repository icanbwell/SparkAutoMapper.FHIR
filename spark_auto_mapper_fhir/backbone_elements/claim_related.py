from __future__ import annotations
from typing import Optional, TYPE_CHECKING, Union

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # claim (Reference)
    from spark_auto_mapper_fhir.complex_types.reference import Reference

    # Imports for References for claim
    from spark_auto_mapper_fhir.resources.claim import Claim

    # relationship (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # End Import for References for relationship
    # Import for CodeableConcept for relationship
    from spark_auto_mapper_fhir.value_sets.example_related_claim_relationship_codes import (
        ExampleRelatedClaimRelationshipCodesCode,
    )

    # End Import for CodeableConcept for relationship
    # reference (Identifier)
    from spark_auto_mapper_fhir.complex_types.identifier import Identifier


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class ClaimRelated(FhirBackboneElementBase):
    """
    Claim.Related
        A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        claim: Optional[Reference[Union[Claim]]] = None,
        relationship: Optional[
            CodeableConcept[ExampleRelatedClaimRelationshipCodesCode]
        ] = None,
        reference: Optional[Identifier] = None,
    ) -> None:
        """
            A provider issued list of professional services and products which have been
        provided, or are to be provided, to a patient which is sent to an insurer for
        reimbursement.

            :param id_: id of resource
            :param extension: extensions
            :param claim: Reference to a related claim.
            :param relationship: A code to convey how the claims are related.
            :param reference: An alternate organizational reference to the case or file to which this
        particular claim pertains.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            claim=claim,
            relationship=relationship,
            reference=reference,
        )
