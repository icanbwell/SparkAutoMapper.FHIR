from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.complex_types.naming_system_identifier_type import (
        NamingSystemIdentifierType,
    )
    from spark_auto_mapper_fhir.complex_types.period import Period


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class NamingSystemUniqueId(FhirBackboneElementBase):
    """ """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        meta: Optional[Meta] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        type: NamingSystemIdentifierType,
        value: FhirString,
        preferred: Optional[FhirBoolean] = None,
        comment: Optional[FhirString] = None,
        period: Optional[Period] = None,
    ) -> None:
        """

            :param id_: id of resource
            :param meta: Meta
            :param extension: extensions
            :param type: Identifies the unique identifier scheme used for this particular identifier.
            :param value: The string that should be sent over the wire to identify the code system or
        identifier system.
            :param preferred: Indicates whether this identifier is the "preferred" identifier of this type.
            :param comment: Notes about the past or intended usage of this identifier.
            :param period: Identifies the period of time over which this identifier is considered
        appropriate to refer to the naming system.  Outside of this window, the
        identifier might be non-deterministic.
        """
        super().__init__(
            resourceType="NamingSystemUniqueId",
            id_=id_,
            meta=meta,
            extension=extension,
            type=type,
            value=value,
            preferred=preferred,
            comment=comment,
            period=period,
        )
