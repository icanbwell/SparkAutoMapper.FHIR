from __future__ import annotations
from typing import Optional, TYPE_CHECKING, Union

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # type_ (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # End Import for References for type_
    # Import for CodeableConcept for type_
    from spark_auto_mapper_fhir.value_sets.participant_type import ParticipantTypeCode

    # End Import for CodeableConcept for type_
    # period (Period)
    from spark_auto_mapper_fhir.complex_types.period import Period

    # individual (Reference)
    from spark_auto_mapper_fhir.complex_types.reference import Reference

    # Imports for References for individual
    from spark_auto_mapper_fhir.resources.practitioner import Practitioner
    from spark_auto_mapper_fhir.resources.practitioner_role import PractitionerRole
    from spark_auto_mapper_fhir.resources.related_person import RelatedPerson


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class EncounterParticipant(FhirBackboneElementBase):
    """
    Encounter.Participant
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        type_: Optional[FhirList[CodeableConcept[ParticipantTypeCode]]] = None,
        period: Optional[Period] = None,
        individual: Optional[
            Reference[Union[Practitioner, PractitionerRole, RelatedPerson]]
        ] = None,
    ) -> None:
        """

            :param id_: id of resource
            :param extension: extensions
            :param type_: Role of participant in encounter.
            :param period: The period of time that the specified participant participated in the
        encounter. These can overlap or be sub-sets of the overall encounter's period.
            :param individual: Persons involved in the encounter other than the patient.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            type_=type_,
            period=period,
            individual=individual,
        )
