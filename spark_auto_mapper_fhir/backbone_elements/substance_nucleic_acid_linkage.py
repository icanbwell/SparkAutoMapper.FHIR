from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.complex_types.string import string
    from spark_auto_mapper_fhir.complex_types.identifier import Identifier
    from spark_auto_mapper_fhir.complex_types.string import string
    from spark_auto_mapper_fhir.complex_types.string import string


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class SubstanceNucleicAcidLinkage(FhirBackboneElementBase):
    """ """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        meta: Optional[Meta] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        connectivity: Optional[string] = None,
        identifier: Optional[Identifier] = None,
        name: Optional[string] = None,
        residueSite: Optional[string] = None,
    ) -> None:
        """

            :param id_: id of resource
            :param meta: Meta
            :param extension: extensions
            :param connectivity: The entity that links the sugar residues together should also be captured for
        nearly all naturally occurring nucleic acid the linkage is a phosphate group.
        For many synthetic oligonucleotides phosphorothioate linkages are often seen.
        Linkage connectivity is assumed to be 3’-5’. If the linkage is either 3’-3’ or
        5’-5’ this should be specified.
            :param identifier: Each linkage will be registered as a fragment and have an ID.
            :param name: Each linkage will be registered as a fragment and have at least one name. A
        single name shall be assigned to each linkage.
            :param residueSite: Residues shall be captured as described in 5.3.6.8.3.
        """
        super().__init__(
            resourceType="SubstanceNucleicAcidLinkage",
            id_=id_,
            meta=meta,
            extension=extension,
            connectivity=connectivity,
            identifier=identifier,
            name=name,
            residueSite=residueSite,
        )
