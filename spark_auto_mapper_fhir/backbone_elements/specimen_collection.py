from __future__ import annotations
from typing import Optional, TYPE_CHECKING, Union

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.complex_types.reference import Reference

    # Imports for References for collector
    from spark_auto_mapper_fhir.resources.practitioner import Practitioner
    from spark_auto_mapper_fhir.resources.practitioner_role import PractitionerRole
    from spark_auto_mapper_fhir.complex_types.quantity import Quantity
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # Import for CodeableConcept for method
    from spark_auto_mapper_fhir.value_sets.fhir_specimen_collection_method import (
        FHIRSpecimenCollectionMethod,
    )

    # End Import for CodeableConcept for method
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # Import for CodeableConcept for bodySite
    from spark_auto_mapper_fhir.value_sets.snomedct_body_structures import (
        SNOMEDCTBodyStructures,
    )

    # End Import for CodeableConcept for bodySite


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class SpecimenCollection(FhirBackboneElementBase):
    """ """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        extension: Optional[FhirList[ExtensionBase]] = None,
        collector: Optional[Reference[Union[Practitioner, PractitionerRole]]] = None,
        duration: Optional[Duration] = None,
        quantity: Optional[Quantity] = None,
        method: Optional[CodeableConcept[FHIRSpecimenCollectionMethod]] = None,
        bodySite: Optional[CodeableConcept[SNOMEDCTBodyStructures]] = None,
    ) -> None:
        """

            :param id_: id of resource
            :param extension: extensions
            :param collector: Person who collected the specimen.
            :param duration: The span of time over which the collection of a specimen occurred.
            :param quantity: The quantity of specimen collected; for instance the volume of a blood sample,
        or the physical measurement of an anatomic pathology sample.
            :param method: A coded value specifying the technique that is used to perform the procedure.
            :param bodySite: Anatomical location from which the specimen was collected (if subject is a
        patient). This is the target site.  This element is not used for environmental
        specimens.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            collector=collector,
            duration=duration,
            quantity=quantity,
            method=method,
            bodySite=bodySite,
        )
