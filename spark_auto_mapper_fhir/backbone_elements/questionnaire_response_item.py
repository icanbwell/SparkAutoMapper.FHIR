from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # id_ (string)
    # extension (Extension)
    # modifierExtension (Extension)
    # linkId (string)
    # definition (uri)
    # text (string)
    # answer (QuestionnaireResponse.Answer)
    from spark_auto_mapper_fhir.backbone_elements.questionnaire_response_answer import (
        QuestionnaireResponseAnswer,
    )


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class QuestionnaireResponseItem(FhirBackboneElementBase):
    """
    QuestionnaireResponse.Item
        A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirString] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        modifierExtension: Optional[FhirList[ExtensionBase]] = None,
        linkId: FhirString,
        definition: Optional[FhirUri] = None,
        text: Optional[FhirString] = None,
        answer: Optional[FhirList[QuestionnaireResponseAnswer]] = None,
        item: Optional[FhirList[QuestionnaireResponseItem]] = None,
    ) -> None:
        """
            A structured set of questions and their answers. The questions are ordered and
        grouped into coherent subsets, corresponding to the structure of the grouping
        of the questionnaire being responded to.

            :param id_: None
            :param extension: May be used to represent additional information that is not part of the basic
        definition of the element. To make the use of extensions safe and manageable,
        there is a strict set of governance  applied to the definition and use of
        extensions. Though any implementer can define an extension, there is a set of
        requirements that SHALL be met as part of the definition of the extension.
            :param modifierExtension: May be used to represent additional information that is not part of the basic
        definition of the element and that modifies the understanding of the element
        in which it is contained and/or the understanding of the containing element's
        descendants. Usually modifier elements provide negation or qualification. To
        make the use of extensions safe and manageable, there is a strict set of
        governance applied to the definition and use of extensions. Though any
        implementer can define an extension, there is a set of requirements that SHALL
        be met as part of the definition of the extension. Applications processing a
        resource are required to check for modifier extensions.

        Modifier extensions SHALL NOT change the meaning of any elements on Resource
        or DomainResource (including cannot change the meaning of modifierExtension
        itself).
            :param linkId: The item from the Questionnaire that corresponds to this item in the
        QuestionnaireResponse resource.
            :param definition: A reference to an [[[ElementDefinition]]] that provides the details for the
        item.
            :param text: Text that is displayed above the contents of the group or as the text of the
        question being answered.
            :param answer: The respondent's answer(s) to the question.
            :param item: Questions or sub-groups nested beneath a question or group.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            modifierExtension=modifierExtension,
            linkId=linkId,
            definition=definition,
            text=text,
            answer=answer,
            item=item,
        )
