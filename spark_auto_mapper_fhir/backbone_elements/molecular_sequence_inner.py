from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    # start (integer)
    from spark_auto_mapper_fhir.complex_types.integer import integer
    # end (integer)
    from spark_auto_mapper_fhir.complex_types.integer import integer


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class MolecularSequenceInner(FhirBackboneElementBase):
    """
    MolecularSequence.Inner
    """
    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        extension: Optional[FhirList[ExtensionBase]] = None,
        start: Optional[FhirInteger ] = None,
        end: Optional[FhirInteger ] = None,
    ) -> None:
        """

        :param id_: id of resource
        :param extension: extensions
        :param start: Structural variant inner start. If the coordinate system is either 0-based or
    1-based, then start position is inclusive.
        :param end: Structural variant inner end. If the coordinate system is 0-based then end is
    exclusive and does not include the last position. If the coordinate system is
    1-base, then end is inclusive and includes the last position.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            start=start,
            end=end,
        )
