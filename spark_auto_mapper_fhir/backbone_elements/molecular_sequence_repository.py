from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.complex_types.repository_type import repositoryType
    from spark_auto_mapper_fhir.complex_types.uri import uri
    from spark_auto_mapper_fhir.complex_types.string import string
    from spark_auto_mapper_fhir.complex_types.string import string
    from spark_auto_mapper_fhir.complex_types.string import string
    from spark_auto_mapper_fhir.complex_types.string import string


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class MolecularSequenceRepository(FhirBackboneElementBase):
    """
    """
    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        meta: Optional[Meta] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        type: repositoryType,
        url: Optional[uri] = None,
        name: Optional[string] = None,
        datasetId: Optional[string] = None,
        variantsetId: Optional[string] = None,
        readsetId: Optional[string] = None,
    ) -> None:
        """

        :param id_: id of resource
        :param meta: Meta
        :param extension: extensions
        :param type: Click and see / RESTful API / Need login to see / RESTful API with
    authentication / Other ways to see resource.
        :param url: URI of an external repository which contains further details about the
    genetics data.
        :param name: URI of an external repository which contains further details about the
    genetics data.
        :param datasetId: Id of the variant in this external repository. The server will understand how
    to use this id to call for more info about datasets in external repository.
        :param variantsetId: Id of the variantset in this external repository. The server will understand
    how to use this id to call for more info about variantsets in external
    repository.
        :param readsetId: Id of the read in this external repository.
        """
        super().__init__(
            resourceType="MolecularSequenceRepository",
            id_=id_,
            meta=meta,
            extension=extension,
            type=type,
            url=url,
            name=name,
            datasetId=datasetId,
            variantsetId=variantsetId,
            readsetId=readsetId,
        )
