from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId
from spark_auto_mapper_fhir.fhir_types.uri import FhirUri

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # relation (string)
    # url (uri)


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class BundleLink(FhirBackboneElementBase):
    """
    Bundle.Link
        A container for a collection of resources.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        relation: FhirString,
        url: FhirUri,
    ) -> None:
        """
            A container for a collection of resources.

            :param id_: id of resource
            :param extension: extensions
            :param relation: A name which details the functional use for this link - see
        [http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-
        relations-1](http://www.iana.org/assignments/link-relations/link-
        relations.xhtml#link-relations-1).
            :param url: The reference details for the link.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            relation=relation,
            url=url,
        )
