from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    # applicability (ChargeItemDefinition.Applicability)
    from spark_auto_mapper_fhir.backbone_elements.charge_item_definition_applicability import ChargeItemDefinitionApplicability
    # priceComponent (ChargeItemDefinition.PriceComponent)
    from spark_auto_mapper_fhir.backbone_elements.charge_item_definition_price_component import ChargeItemDefinitionPriceComponent


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class ChargeItemDefinitionPropertyGroup(FhirBackboneElementBase):
    """
    ChargeItemDefinition.PropertyGroup
    """
    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        extension: Optional[FhirList[ExtensionBase]] = None,
        applicability: Optional[FhirList[ChargeItemDefinitionApplicability ]] = None,
        priceComponent: Optional[FhirList[ChargeItemDefinitionPriceComponent ]] = None,
    ) -> None:
        """

        :param id_: id of resource
        :param extension: extensions
        :param applicability: Expressions that describe applicability criteria for the priceComponent.
        :param priceComponent: The price for a ChargeItem may be calculated as a base price with
    surcharges/deductions that apply in certain conditions. A ChargeItemDefinition
    resource that defines the prices, factors and conditions that apply to a
    billing code is currently under development. The priceComponent element can be
    used to offer transparency to the recipient of the Invoice of how the prices
    have been calculated.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            applicability=applicability,
            priceComponent=priceComponent,
        )
