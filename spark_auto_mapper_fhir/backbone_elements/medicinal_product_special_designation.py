from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    # identifier (Identifier)
    from spark_auto_mapper_fhir.complex_types.identifier import Identifier
    # type_ (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept
    # intendedUse (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept
    # status (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept
    # date (dateTime)
    from spark_auto_mapper_fhir.complex_types.date_time import dateTime
    # species (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class MedicinalProductSpecialDesignation(FhirBackboneElementBase):
    """
    MedicinalProduct.SpecialDesignation
    """
    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        extension: Optional[FhirList[ExtensionBase]] = None,
        identifier: Optional[FhirList[Identifier ]] = None,
        type_: Optional[CodeableConcept ] = None,
        intendedUse: Optional[CodeableConcept ] = None,
        status: Optional[CodeableConcept ] = None,
        date: Optional[FhirDateTime ] = None,
        species: Optional[CodeableConcept ] = None,
    ) -> None:
        """

        :param id_: id of resource
        :param extension: extensions
        :param identifier: Identifier for the designation, or procedure number.
        :param type_: The type of special designation, e.g. orphan drug, minor use.
        :param intendedUse: The intended use of the product, e.g. prevention, treatment.
        :param status: For example granted, pending, expired or withdrawn.
        :param date: Date when the designation was granted.
        :param species: Animal species for which this applies.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            identifier=identifier,
            type_=type_,
            intendedUse=intendedUse,
            status=status,
            date=date,
            species=species,
        )
