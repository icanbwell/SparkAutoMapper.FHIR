from __future__ import annotations
from typing import Optional, TYPE_CHECKING, Union

from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # description (string)
    # procedure (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # End Import for References for procedure
    # Import for CodeableConcept for procedure
    from spark_auto_mapper_fhir.value_sets.procedure_codes_snomedct_ import (
        ProcedureCodes_SNOMEDCT_Code,
    )

    # End Import for CodeableConcept for procedure
    # additive (Reference)
    from spark_auto_mapper_fhir.complex_types.reference import Reference

    # Imports for References for additive
    from spark_auto_mapper_fhir.resources.substance import Substance

    # timeDateTime (dateTime)
    # timePeriod (Period)
    from spark_auto_mapper_fhir.complex_types.period import Period


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class BiologicallyDerivedProductProcessing(FhirBackboneElementBase):
    """
        BiologicallyDerivedProduct.Processing
            A material substance originating from a biological entity intended to be transplanted or infused
    into another (possibly the same) biological entity.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        description: Optional[FhirString] = None,
        procedure: Optional[CodeableConcept[ProcedureCodes_SNOMEDCT_Code]] = None,
        additive: Optional[Reference[Union[Substance]]] = None,
        timeDateTime: Optional[FhirDateTime] = None,
        timePeriod: Optional[Period] = None,
    ) -> None:
        """
            A material substance originating from a biological entity intended to be
        transplanted or infused
        into another (possibly the same) biological entity.

            :param id_: id of resource
            :param extension: extensions
            :param description: Description of of processing.
            :param procedure: Procesing code.
            :param additive: Substance added during processing.
            :param timeDateTime: None
            :param timePeriod: None
        """
        super().__init__(
            id_=id_,
            extension=extension,
            description=description,
            procedure=procedure,
            additive=additive,
            timeDateTime=timeDateTime,
            timePeriod=timePeriod,
        )
