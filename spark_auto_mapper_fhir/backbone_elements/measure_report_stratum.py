from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # id_ (string)
    # extension (Extension)
    # modifierExtension (Extension)
    # value (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # End Import for References for value
    # Import for CodeableConcept for value
    from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode

    # End Import for CodeableConcept for value
    # component (MeasureReport.Component)
    from spark_auto_mapper_fhir.backbone_elements.measure_report_component import (
        MeasureReportComponent,
    )

    # population (MeasureReport.Population1)
    from spark_auto_mapper_fhir.backbone_elements.measure_report_population1 import (
        MeasureReportPopulation1,
    )

    # measureScore (Quantity)
    from spark_auto_mapper_fhir.complex_types.quantity import Quantity


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class MeasureReportStratum(FhirBackboneElementBase):
    """
    MeasureReport.Stratum
        The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirString] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        modifierExtension: Optional[FhirList[ExtensionBase]] = None,
        value: Optional[CodeableConcept[GenericTypeCode]] = None,
        component: Optional[FhirList[MeasureReportComponent]] = None,
        population: Optional[FhirList[MeasureReportPopulation1]] = None,
        measureScore: Optional[Quantity] = None,
    ) -> None:
        """
            The MeasureReport resource contains the results of the calculation of a
        measure; and optionally a reference to the resources involved in that
        calculation.

            :param id_: None
            :param extension: May be used to represent additional information that is not part of the basic
        definition of the element. To make the use of extensions safe and manageable,
        there is a strict set of governance  applied to the definition and use of
        extensions. Though any implementer can define an extension, there is a set of
        requirements that SHALL be met as part of the definition of the extension.
            :param modifierExtension: May be used to represent additional information that is not part of the basic
        definition of the element and that modifies the understanding of the element
        in which it is contained and/or the understanding of the containing element's
        descendants. Usually modifier elements provide negation or qualification. To
        make the use of extensions safe and manageable, there is a strict set of
        governance applied to the definition and use of extensions. Though any
        implementer can define an extension, there is a set of requirements that SHALL
        be met as part of the definition of the extension. Applications processing a
        resource are required to check for modifier extensions.

        Modifier extensions SHALL NOT change the meaning of any elements on Resource
        or DomainResource (including cannot change the meaning of modifierExtension
        itself).
            :param value: The value for this stratum, expressed as a CodeableConcept. When defining
        stratifiers on complex values, the value must be rendered such that the value
        for each stratum within the stratifier is unique.
            :param component: A stratifier component value.
            :param population: The populations that make up the stratum, one for each type of population
        appropriate to the measure.
            :param measureScore: The measure score for this stratum, calculated as appropriate for the measure
        type and scoring method, and based on only the members of this stratum.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            modifierExtension=modifierExtension,
            value=value,
            component=component,
            population=population,
            measureScore=measureScore,
        )
