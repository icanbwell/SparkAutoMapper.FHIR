from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # purpose (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # End Import for References for purpose
    # Import for CodeableConcept for purpose
    from spark_auto_mapper_fhir.value_sets.contact_entity_type import (
        ContactEntityTypeCode,
    )

    # End Import for CodeableConcept for purpose
    # name (HumanName)
    from spark_auto_mapper_fhir.complex_types.human_name import HumanName

    # telecom (ContactPoint)
    from spark_auto_mapper_fhir.complex_types.contact_point import ContactPoint

    # address (Address)
    from spark_auto_mapper_fhir.complex_types.address import Address


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class OrganizationContact(FhirBackboneElementBase):
    """
    Organization.Contact
        A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action.  Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        purpose: Optional[CodeableConcept[ContactEntityTypeCode]] = None,
        name: Optional[HumanName] = None,
        telecom: Optional[FhirList[ContactPoint]] = None,
        address: Optional[Address] = None,
    ) -> None:
        """
            A formally or informally recognized grouping of people or organizations formed
        for the purpose of achieving some form of collective action.  Includes
        companies, institutions, corporations, departments, community groups,
        healthcare practice groups, payer/insurer, etc.

            :param id_: id of resource
            :param extension: extensions
            :param purpose: Indicates a purpose for which the contact can be reached.
            :param name: A name associated with the contact.
            :param telecom: A contact detail (e.g. a telephone number or an email address) by which the
        party may be contacted.
            :param address: Visiting or postal addresses for the contact.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            purpose=purpose,
            name=name,
            telecom=telecom,
            address=address,
        )
