from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.complex_types.restful_capability_mode import RestfulCapabilityMode
    from spark_auto_mapper_fhir.complex_types.markdown import markdown
    from spark_auto_mapper_fhir.backbone_elements.capability_statement_security import CapabilityStatementSecurity
    from spark_auto_mapper_fhir.backbone_elements.capability_statement_resource import CapabilityStatementResource
    from spark_auto_mapper_fhir.backbone_elements.capability_statement_interaction1 import CapabilityStatementInteraction1
    from spark_auto_mapper_fhir.backbone_elements.capability_statement_search_param import CapabilityStatementSearchParam
    from spark_auto_mapper_fhir.backbone_elements.capability_statement_operation import CapabilityStatementOperation
    from spark_auto_mapper_fhir.complex_types.canonical import canonical


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class CapabilityStatementRest(FhirBackboneElementBase):
    """
    """
    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        extension: Optional[FhirList[ExtensionBase]] = None,
        mode: RestfulCapabilityMode ,
        documentation: Optional[markdown ] = None,
        security: Optional[CapabilityStatementSecurity ] = None,
        resource: Optional[FhirList[CapabilityStatementResource ]] = None,
        interaction: Optional[FhirList[CapabilityStatementInteraction1 ]] = None,
        searchParam: Optional[FhirList[CapabilityStatementSearchParam ]] = None,
        operation: Optional[FhirList[CapabilityStatementOperation ]] = None,
        compartment: Optional[FhirList[canonical ]] = None,
    ) -> None:
        """

        :param id_: id of resource
        :param extension: extensions
        :param mode: Identifies whether this portion of the statement is describing the ability to
    initiate or receive restful operations.
        :param documentation: Information about the system's restful capabilities that apply across all
    applications, such as security.
        :param security: Information about security implementation from an interface perspective - what
    a client needs to know.
        :param resource: A specification of the restful capabilities of the solution for a specific
    resource type.
        :param interaction: A specification of restful operations supported by the system.
        :param searchParam: Search parameters that are supported for searching all resources for
    implementations to support and/or make use of - either references to ones
    defined in the specification, or additional ones defined for/by the
    implementation.
        :param operation: Definition of an operation or a named query together with its parameters and
    their meaning and type.
        :param compartment: An absolute URI which is a reference to the definition of a compartment that
    the system supports. The reference is to a CompartmentDefinition resource by
    its canonical URL .
        """
        super().__init__(
            id_=id_,
            extension=extension,
            mode=mode,
            documentation=documentation,
            security=security,
            resource=resource,
            interaction=interaction,
            searchParam=searchParam,
            operation=operation,
            compartment=compartment,
        )
