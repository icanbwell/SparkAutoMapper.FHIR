from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.complex_types.identifier import Identifier
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept
    from spark_auto_mapper_fhir.complex_types.period import Period


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class MedicinalProductAuthorizationJurisdictionalAuthorization(FhirBackboneElementBase):
    """
    """
    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        meta: Optional[Meta] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        identifier: Optional[FhirList[Identifier]] = None,
        country: Optional[CodeableConcept] = None,
        jurisdiction: Optional[FhirList[CodeableConcept]] = None,
        legalStatusOfSupply: Optional[CodeableConcept] = None,
        validityPeriod: Optional[Period] = None,
    ) -> None:
        """

        :param id_: id of resource
        :param meta: Meta
        :param extension: extensions
        :param identifier: The assigned number for the marketing authorization.
        :param country: Country of authorization.
        :param jurisdiction: Jurisdiction within a country.
        :param legalStatusOfSupply: The legal status of supply in a jurisdiction or region.
        :param validityPeriod: The start and expected end date of the authorization.
        """
        super().__init__(
            resourceType="MedicinalProductAuthorizationJurisdictionalAuthorization",
            id_=id_,
            meta=meta,
            extension=extension,
            identifier=identifier,
            country=country,
            jurisdiction=jurisdiction,
            legalStatusOfSupply=legalStatusOfSupply,
            validityPeriod=validityPeriod,
        )
