from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.complex_types.positive_int import positiveInt
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept
    from spark_auto_mapper_fhir.complex_types.date_time import dateTime
    from spark_auto_mapper_fhir.complex_types.reference import Reference
    # Imports for References for udi
    from spark_auto_mapper_fhir.resources.device import Device


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class ClaimProcedure(FhirBackboneElementBase):
    """
    """
    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        meta: Optional[Meta] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        sequence: positiveInt,
        type_: Optional[FhirList[CodeableConcept]] = None,
        date: Optional[dateTime] = None,
        udi: Optional[FhirList[Reference[Union[Device]]]] = None,
    ) -> None:
        """

        :param id_: id of resource
        :param meta: Meta
        :param extension: extensions
        :param sequence: A number to uniquely identify procedure entries.
        :param type_: When the condition was observed or the relative ranking.
        :param date: Date and optionally time the procedure was performed.
        :param udi: Unique Device Identifiers associated with this line item.
        """
        super().__init__(
            resourceType="ClaimProcedure",
            id_=id_,
            meta=meta,
            extension=extension,
            sequence=sequence,
            type_=type_,
            date=date,
            udi=udi,
        )
