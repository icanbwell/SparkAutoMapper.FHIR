from __future__ import annotations
from typing import Optional, TYPE_CHECKING, Union

from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId
from spark_auto_mapper_fhir.resources.resource import Resource

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # reference (Reference)
    from spark_auto_mapper_fhir.complex_types.reference import Reference

    # Imports for References for reference
    # fhirVersion (FHIRVersion)
    from spark_auto_mapper_fhir.value_sets.fhir_version import FHIRVersionCode

    # name (string)
    # description (string)
    # groupingId (id)
    from spark_auto_mapper_fhir.complex_types.id import id

    # exampleBoolean (boolean)
    # exampleCanonical (canonical)
    from spark_auto_mapper_fhir.fhir_types.canonical import FhirCanonical


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class ImplementationGuideResource(FhirBackboneElementBase):
    """
    ImplementationGuide.Resource
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        reference: Reference[Union[Resource]],
        fhirVersion: Optional[FhirList[FHIRVersionCode]] = None,
        name: Optional[FhirString] = None,
        description: Optional[FhirString] = None,
        groupingId: Optional[id] = None,
        exampleBoolean: Optional[FhirBoolean] = None,
        exampleCanonical: Optional[FhirCanonical] = None,
    ) -> None:
        """

            :param id_: id of resource
            :param extension: extensions
            :param reference: Where this resource is found.
            :param fhirVersion: Indicates the FHIR Version(s) this artifact is intended to apply to. If no
        versions are specified, the resource is assumed to apply to all the versions
        stated in ImplementationGuide.fhirVersion.
            :param name: A human assigned name for the resource. All resources SHOULD have a name, but
        the name may be extracted from the resource (e.g. ValueSet.name).
            :param description: A description of the reason that a resource has been included in the
        implementation guide.
            :param groupingId: Reference to the id of the grouping this resource appears in.
            :param exampleBoolean: None
            :param exampleCanonical: None
        """
        super().__init__(
            id_=id_,
            extension=extension,
            reference=reference,
            fhirVersion=fhirVersion,
            name=name,
            description=description,
            groupingId=groupingId,
            exampleBoolean=exampleBoolean,
            exampleCanonical=exampleCanonical,
        )
