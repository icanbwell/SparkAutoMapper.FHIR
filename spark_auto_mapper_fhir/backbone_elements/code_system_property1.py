from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # code (code)
    from spark_auto_mapper_fhir.complex_types.code import code

    # valueCode (code)
    # valueCoding (Coding)
    from spark_auto_mapper_fhir.complex_types.coding import Coding

    # End Import for References for valueCoding
    # Import for CodeableConcept for valueCoding
    from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode

    # End Import for CodeableConcept for valueCoding
    # valueString (string)
    # valueInteger (integer)
    # valueBoolean (boolean)
    # valueDateTime (dateTime)
    # valueDecimal (decimal)
    from spark_auto_mapper_fhir.fhir_types.decimal import FhirDecimal


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class CodeSystemProperty1(FhirBackboneElementBase):
    """
    CodeSystem.Property1
        The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        code: code,
        valueCode: Optional[code] = None,
        valueCoding: Optional[Coding[GenericTypeCode]] = None,
        valueString: Optional[FhirString] = None,
        valueInteger: Optional[FhirInteger] = None,
        valueBoolean: Optional[FhirBoolean] = None,
        valueDateTime: Optional[FhirDateTime] = None,
        valueDecimal: Optional[FhirDecimal] = None,
    ) -> None:
        """
            The CodeSystem resource is used to declare the existence of and describe a
        code system or code system supplement and its key properties, and optionally
        define a part or all of its content.

            :param id_: id of resource
            :param extension: extensions
            :param code: A code that is a reference to CodeSystem.property.code.
            :param valueCode: None
            :param valueCoding: None
            :param valueString: None
            :param valueInteger: None
            :param valueBoolean: None
            :param valueDateTime: None
            :param valueDecimal: None
        """
        super().__init__(
            id_=id_,
            extension=extension,
            code=code,
            valueCode=valueCode,
            valueCoding=valueCoding,
            valueString=valueString,
            valueInteger=valueInteger,
            valueBoolean=valueBoolean,
            valueDateTime=valueDateTime,
            valueDecimal=valueDecimal,
        )
