from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # strength (BindingStrength)
    from spark_auto_mapper_fhir.value_sets.binding_strength import BindingStrengthCode

    # description (string)
    # valueSet (canonical)
    from spark_auto_mapper_fhir.fhir_types.canonical import FhirCanonical


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class ElementDefinitionBinding(FhirBackboneElementBase):
    """
    ElementDefinition.Binding
        Captures constraints on each element within the resource, profile, or extension.
        If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        strength: BindingStrengthCode,
        description: Optional[FhirString] = None,
        valueSet: Optional[FhirCanonical] = None,
    ) -> None:
        """
            Captures constraints on each element within the resource, profile, or
        extension.
            If the element is present, it must have a value for at least one of the
        defined elements, an @id referenced from the Narrative, or extensions

            :param id_: id of resource
            :param extension: extensions
            :param strength: Indicates the degree of conformance expectations associated with this binding
        - that is, the degree to which the provided value set must be adhered to in
        the instances.
            :param description: Describes the intended use of this particular set of codes.
            :param valueSet: Refers to the value set that identifies the set of codes the binding refers
        to.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            strength=strength,
            description=description,
            valueSet=valueSet,
        )
