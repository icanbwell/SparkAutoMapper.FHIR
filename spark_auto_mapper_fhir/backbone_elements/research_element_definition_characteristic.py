from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.complex_types.usage_context import UsageContext
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept
    from spark_auto_mapper_fhir.complex_types.group_measure import GroupMeasure
    from spark_auto_mapper_fhir.complex_types.group_measure import GroupMeasure


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class ResearchElementDefinitionCharacteristic(FhirBackboneElementBase):
    """ """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        extension: Optional[FhirList[ExtensionBase]] = None,
        usageContext: Optional[FhirList[UsageContext]] = None,
        exclude: Optional[FhirBoolean] = None,
        unitOfMeasure: Optional[CodeableConcept] = None,
        studyEffectiveDescription: Optional[FhirString] = None,
        studyEffectiveTimeFromStart: Optional[Duration] = None,
        studyEffectiveGroupMeasure: Optional[GroupMeasure] = None,
        participantEffectiveDescription: Optional[FhirString] = None,
        participantEffectiveTimeFromStart: Optional[Duration] = None,
        participantEffectiveGroupMeasure: Optional[GroupMeasure] = None,
    ) -> None:
        """

            :param id_: id of resource
            :param extension: extensions
            :param usageContext: Use UsageContext to define the members of the population, such as Age Ranges,
        Genders, Settings.
            :param exclude: When true, members with this characteristic are excluded from the element.
            :param unitOfMeasure: Specifies the UCUM unit for the outcome.
            :param studyEffectiveDescription: A narrative description of the time period the study covers.
            :param studyEffectiveTimeFromStart: Indicates duration from the study initiation.
            :param studyEffectiveGroupMeasure: Indicates how elements are aggregated within the study effective period.
            :param participantEffectiveDescription: A narrative description of the time period the study covers.
            :param participantEffectiveTimeFromStart: Indicates duration from the participant's study entry.
            :param participantEffectiveGroupMeasure: Indicates how elements are aggregated within the study effective period.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            usageContext=usageContext,
            exclude=exclude,
            unitOfMeasure=unitOfMeasure,
            studyEffectiveDescription=studyEffectiveDescription,
            studyEffectiveTimeFromStart=studyEffectiveTimeFromStart,
            studyEffectiveGroupMeasure=studyEffectiveGroupMeasure,
            participantEffectiveDescription=participantEffectiveDescription,
            participantEffectiveTimeFromStart=participantEffectiveTimeFromStart,
            participantEffectiveGroupMeasure=participantEffectiveGroupMeasure,
        )
