from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # id_ (string)
    # extension (Extension)
    # modifierExtension (Extension)
    # definitionCodeableConcept (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # End Import for References for definitionCodeableConcept
    # Import for CodeableConcept for definitionCodeableConcept
    from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode

    # End Import for CodeableConcept for definitionCodeableConcept
    # definitionCanonical (canonical)
    from spark_auto_mapper_fhir.fhir_types.canonical import FhirCanonical

    # definitionExpression (Expression)
    from spark_auto_mapper_fhir.complex_types.expression import Expression

    # definitionDataRequirement (DataRequirement)
    from spark_auto_mapper_fhir.complex_types.data_requirement import DataRequirement

    # usageContext (UsageContext)
    from spark_auto_mapper_fhir.complex_types.usage_context import UsageContext

    # exclude (boolean)
    # unitOfMeasure (CodeableConcept)
    # End Import for References for unitOfMeasure
    # Import for CodeableConcept for unitOfMeasure
    from spark_auto_mapper_fhir.value_sets.ucum_codes import UCUMCodesCode

    # End Import for CodeableConcept for unitOfMeasure
    # studyEffectiveDescription (string)
    # studyEffectiveDateTime (dateTime)
    # studyEffectivePeriod (Period)
    from spark_auto_mapper_fhir.complex_types.period import Period

    # studyEffectiveDuration (Duration)
    from spark_auto_mapper_fhir.complex_types.duration import Duration

    # studyEffectiveTiming (Timing)
    from spark_auto_mapper_fhir.backbone_elements.timing import Timing

    # studyEffectiveTimeFromStart (Duration)
    # studyEffectiveGroupMeasure (GroupMeasure)
    from spark_auto_mapper_fhir.value_sets.group_measure import GroupMeasureCode

    # participantEffectiveDescription (string)
    # participantEffectiveDateTime (dateTime)
    # participantEffectivePeriod (Period)
    # participantEffectiveDuration (Duration)
    # participantEffectiveTiming (Timing)
    # participantEffectiveTimeFromStart (Duration)
    # participantEffectiveGroupMeasure (GroupMeasure)


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class ResearchElementDefinitionCharacteristic(FhirBackboneElementBase):
    """
    ResearchElementDefinition.Characteristic
        The ResearchElementDefinition resource describes a "PICO" element that knowledge (evidence, assertion, recommendation) is about.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirString] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        modifierExtension: Optional[FhirList[ExtensionBase]] = None,
        definitionCodeableConcept: Optional[CodeableConcept[GenericTypeCode]] = None,
        definitionCanonical: Optional[FhirCanonical] = None,
        definitionExpression: Optional[Expression] = None,
        definitionDataRequirement: Optional[DataRequirement] = None,
        usageContext: Optional[FhirList[UsageContext]] = None,
        exclude: Optional[FhirBoolean] = None,
        unitOfMeasure: Optional[CodeableConcept[UCUMCodesCode]] = None,
        studyEffectiveDescription: Optional[FhirString] = None,
        studyEffectiveDateTime: Optional[FhirDateTime] = None,
        studyEffectivePeriod: Optional[Period] = None,
        studyEffectiveDuration: Optional[Duration] = None,
        studyEffectiveTiming: Optional[Timing] = None,
        studyEffectiveTimeFromStart: Optional[Duration] = None,
        studyEffectiveGroupMeasure: Optional[GroupMeasureCode] = None,
        participantEffectiveDescription: Optional[FhirString] = None,
        participantEffectiveDateTime: Optional[FhirDateTime] = None,
        participantEffectivePeriod: Optional[Period] = None,
        participantEffectiveDuration: Optional[Duration] = None,
        participantEffectiveTiming: Optional[Timing] = None,
        participantEffectiveTimeFromStart: Optional[Duration] = None,
        participantEffectiveGroupMeasure: Optional[GroupMeasureCode] = None,
    ) -> None:
        """
            The ResearchElementDefinition resource describes a "PICO" element that
        knowledge (evidence, assertion, recommendation) is about.

            :param id_: None
            :param extension: May be used to represent additional information that is not part of the basic
        definition of the element. To make the use of extensions safe and manageable,
        there is a strict set of governance  applied to the definition and use of
        extensions. Though any implementer can define an extension, there is a set of
        requirements that SHALL be met as part of the definition of the extension.
            :param modifierExtension: May be used to represent additional information that is not part of the basic
        definition of the element and that modifies the understanding of the element
        in which it is contained and/or the understanding of the containing element's
        descendants. Usually modifier elements provide negation or qualification. To
        make the use of extensions safe and manageable, there is a strict set of
        governance applied to the definition and use of extensions. Though any
        implementer can define an extension, there is a set of requirements that SHALL
        be met as part of the definition of the extension. Applications processing a
        resource are required to check for modifier extensions.

        Modifier extensions SHALL NOT change the meaning of any elements on Resource
        or DomainResource (including cannot change the meaning of modifierExtension
        itself).
            :param definitionCodeableConcept: None
            :param definitionCanonical: None
            :param definitionExpression: None
            :param definitionDataRequirement: None
            :param usageContext: Use UsageContext to define the members of the population, such as Age Ranges,
        Genders, Settings.
            :param exclude: When true, members with this characteristic are excluded from the element.
            :param unitOfMeasure: Specifies the UCUM unit for the outcome.
            :param studyEffectiveDescription: A narrative description of the time period the study covers.
            :param studyEffectiveDateTime: None
            :param studyEffectivePeriod: None
            :param studyEffectiveDuration: None
            :param studyEffectiveTiming: None
            :param studyEffectiveTimeFromStart: Indicates duration from the study initiation.
            :param studyEffectiveGroupMeasure: Indicates how elements are aggregated within the study effective period.
            :param participantEffectiveDescription: A narrative description of the time period the study covers.
            :param participantEffectiveDateTime: None
            :param participantEffectivePeriod: None
            :param participantEffectiveDuration: None
            :param participantEffectiveTiming: None
            :param participantEffectiveTimeFromStart: Indicates duration from the participant's study entry.
            :param participantEffectiveGroupMeasure: Indicates how elements are aggregated within the study effective period.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            modifierExtension=modifierExtension,
            definitionCodeableConcept=definitionCodeableConcept,
            definitionCanonical=definitionCanonical,
            definitionExpression=definitionExpression,
            definitionDataRequirement=definitionDataRequirement,
            usageContext=usageContext,
            exclude=exclude,
            unitOfMeasure=unitOfMeasure,
            studyEffectiveDescription=studyEffectiveDescription,
            studyEffectiveDateTime=studyEffectiveDateTime,
            studyEffectivePeriod=studyEffectivePeriod,
            studyEffectiveDuration=studyEffectiveDuration,
            studyEffectiveTiming=studyEffectiveTiming,
            studyEffectiveTimeFromStart=studyEffectiveTimeFromStart,
            studyEffectiveGroupMeasure=studyEffectiveGroupMeasure,
            participantEffectiveDescription=participantEffectiveDescription,
            participantEffectiveDateTime=participantEffectiveDateTime,
            participantEffectivePeriod=participantEffectivePeriod,
            participantEffectiveDuration=participantEffectiveDuration,
            participantEffectiveTiming=participantEffectiveTiming,
            participantEffectiveTimeFromStart=participantEffectiveTimeFromStart,
            participantEffectiveGroupMeasure=participantEffectiveGroupMeasure,
        )
