from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # actionId (id)
    from spark_auto_mapper_fhir.complex_types.id import id

    # relationship (ActionRelationshipType)
    from spark_auto_mapper_fhir.value_sets.action_relationship_type import (
        ActionRelationshipTypeCode,
    )

    # offsetDuration (Duration)
    from spark_auto_mapper_fhir.complex_types.duration import Duration

    # offsetRange (Range)
    from spark_auto_mapper_fhir.complex_types.range import Range


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class RequestGroupRelatedAction(FhirBackboneElementBase):
    """
    RequestGroup.RelatedAction
        A group of related requests that can be used to capture intended activities that have inter-dependencies such as "give this medication after that one".
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        actionId: id,
        relationship: ActionRelationshipTypeCode,
        offsetDuration: Optional[Duration] = None,
        offsetRange: Optional[Range] = None,
    ) -> None:
        """
            A group of related requests that can be used to capture intended activities
        that have inter-dependencies such as "give this medication after that one".

            :param id_: id of resource
            :param extension: extensions
            :param actionId: The element id of the action this is related to.
            :param relationship: The relationship of this action to the related action.
            :param offsetDuration: None
            :param offsetRange: None
        """
        super().__init__(
            id_=id_,
            extension=extension,
            actionId=actionId,
            relationship=relationship,
            offsetDuration=offsetDuration,
            offsetRange=offsetRange,
        )
