from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # type_ (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # End Import for References for type_
    # Import for CodeableConcept for type_
    from spark_auto_mapper_fhir.value_sets.benefit_type_codes import (
        BenefitTypeCodesCode,
    )

    # End Import for CodeableConcept for type_
    # allowedUnsignedInt (unsignedInt)
    from spark_auto_mapper_fhir.complex_types.unsigned_int import unsignedInt

    # allowedString (string)
    # allowedMoney (Money)
    from spark_auto_mapper_fhir.complex_types.money import Money

    # usedUnsignedInt (unsignedInt)
    # usedString (string)
    # usedMoney (Money)


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class CoverageEligibilityResponseBenefit(FhirBackboneElementBase):
    """
    CoverageEligibilityResponse.Benefit
        This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        type_: CodeableConcept[BenefitTypeCodesCode],
        allowedUnsignedInt: Optional[unsignedInt] = None,
        allowedString: Optional[FhirString] = None,
        allowedMoney: Optional[Money] = None,
        usedUnsignedInt: Optional[unsignedInt] = None,
        usedString: Optional[FhirString] = None,
        usedMoney: Optional[Money] = None,
    ) -> None:
        """
            This resource provides eligibility and plan details from the processing of an
        CoverageEligibilityRequest resource.

            :param id_: id of resource
            :param extension: extensions
            :param type_: Classification of benefit being provided.
            :param allowedUnsignedInt: None
            :param allowedString: None
            :param allowedMoney: None
            :param usedUnsignedInt: None
            :param usedString: None
            :param usedMoney: None
        """
        super().__init__(
            id_=id_,
            extension=extension,
            type_=type_,
            allowedUnsignedInt=allowedUnsignedInt,
            allowedString=allowedString,
            allowedMoney=allowedMoney,
            usedUnsignedInt=usedUnsignedInt,
            usedString=usedString,
            usedMoney=usedMoney,
        )
