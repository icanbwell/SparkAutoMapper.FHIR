from __future__ import annotations
from typing import Optional, TYPE_CHECKING, Union

from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId
from spark_auto_mapper_fhir.resources.resource import Resource

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # flag (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # End Import for References for flag
    # Import for CodeableConcept for flag
    from spark_auto_mapper_fhir.value_sets.patient_medicine_change_types import (
        PatientMedicineChangeTypesCode,
    )

    # End Import for CodeableConcept for flag
    # deleted (boolean)
    # date (dateTime)
    # item (Reference)
    from spark_auto_mapper_fhir.complex_types.reference import Reference

    # Imports for References for item


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class ListEntry(FhirBackboneElementBase):
    """
    List.Entry
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        flag: Optional[CodeableConcept[PatientMedicineChangeTypesCode]] = None,
        deleted: Optional[FhirBoolean] = None,
        date: Optional[FhirDateTime] = None,
        item: Reference[Union[Resource]],
    ) -> None:
        """

            :param id_: id of resource
            :param extension: extensions
            :param flag: The flag allows the system constructing the list to indicate the role and
        significance of the item in the list.
            :param deleted: True if this item is marked as deleted in the list.
            :param date: When this item was added to the list.
            :param item: A reference to the actual resource from which data was derived.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            flag=flag,
            deleted=deleted,
            date=date,
            item=item,
        )
