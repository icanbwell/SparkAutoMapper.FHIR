from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # id_ (string)
    # extension (Extension)
    # modifierExtension (Extension)
    # identifier (Identifier)
    from spark_auto_mapper_fhir.complex_types.identifier import Identifier

    # type_ (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # End Import for References for type_
    # Import for CodeableConcept for type_
    from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode

    # End Import for CodeableConcept for type_
    # period (Quantity)
    from spark_auto_mapper_fhir.complex_types.quantity import Quantity

    # specialPrecautionsForStorage (CodeableConcept)
    # End Import for References for specialPrecautionsForStorage
    # Import for CodeableConcept for specialPrecautionsForStorage
    # End Import for CodeableConcept for specialPrecautionsForStorage


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class ProductShelfLife(FhirBackboneElementBase):
    """
    ProductShelfLife
        The shelf-life and storage information for a medicinal product item or container can be described using this class.
        If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirString] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        modifierExtension: Optional[FhirList[ExtensionBase]] = None,
        identifier: Optional[Identifier] = None,
        type_: CodeableConcept[GenericTypeCode],
        period: Quantity,
        specialPrecautionsForStorage: Optional[
            FhirList[CodeableConcept[GenericTypeCode]]
        ] = None,
    ) -> None:
        """
            The shelf-life and storage information for a medicinal product item or
        container can be described using this class.
            If the element is present, it must have a value for at least one of the
        defined elements, an @id referenced from the Narrative, or extensions

            :param id_: None
            :param extension: May be used to represent additional information that is not part of the basic
        definition of the element. To make the use of extensions safe and manageable,
        there is a strict set of governance  applied to the definition and use of
        extensions. Though any implementer can define an extension, there is a set of
        requirements that SHALL be met as part of the definition of the extension.
            :param modifierExtension: May be used to represent additional information that is not part of the basic
        definition of the element and that modifies the understanding of the element
        in which it is contained and/or the understanding of the containing element's
        descendants. Usually modifier elements provide negation or qualification. To
        make the use of extensions safe and manageable, there is a strict set of
        governance applied to the definition and use of extensions. Though any
        implementer can define an extension, there is a set of requirements that SHALL
        be met as part of the definition of the extension. Applications processing a
        resource are required to check for modifier extensions.

        Modifier extensions SHALL NOT change the meaning of any elements on Resource
        or DomainResource (including cannot change the meaning of modifierExtension
        itself).
            :param identifier: Unique identifier for the packaged Medicinal Product.
            :param type_: This describes the shelf life, taking into account various scenarios such as
        shelf life of the packaged Medicinal Product itself, shelf life after
        transformation where necessary and shelf life after the first opening of a
        bottle, etc. The shelf life type shall be specified using an appropriate
        controlled vocabulary The controlled term and the controlled term identifier
        shall be specified.
            :param period: The shelf life time period can be specified using a numerical value for the
        period of time and its unit of time measurement The unit of measurement shall
        be specified in accordance with ISO 11240 and the resulting terminology The
        symbol and the symbol identifier shall be used.
            :param specialPrecautionsForStorage: Special precautions for storage, if any, can be specified using an appropriate
        controlled vocabulary The controlled term and the controlled term identifier
        shall be specified.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            modifierExtension=modifierExtension,
            identifier=identifier,
            type_=type_,
            period=period,
            specialPrecautionsForStorage=specialPrecautionsForStorage,
        )
