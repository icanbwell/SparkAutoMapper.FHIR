from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.complex_types.identifier import Identifier
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # Import for CodeableConcept for type
    from spark_auto_mapper_fhir.value_sets.specimencontainertype import (
        Specimencontainertype,
    )

    # End Import for CodeableConcept for type
    from spark_auto_mapper_fhir.complex_types.quantity import Quantity
    from spark_auto_mapper_fhir.complex_types.quantity import Quantity


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class SpecimenContainer(FhirBackboneElementBase):
    """ """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        extension: Optional[FhirList[ExtensionBase]] = None,
        identifier: Optional[FhirList[Identifier]] = None,
        description: Optional[FhirString] = None,
        type: Optional[CodeableConcept[Specimencontainertype]] = None,
        capacity: Optional[Quantity] = None,
        specimenQuantity: Optional[Quantity] = None,
    ) -> None:
        """

            :param id_: id of resource
            :param extension: extensions
            :param identifier: Id for container. There may be multiple; a manufacturer's bar code, lab
        assigned identifier, etc. The container ID may differ from the specimen id in
        some circumstances.
            :param description: Textual description of the container.
            :param type: The type of container associated with the specimen (e.g. slide, aliquot,
        etc.).
            :param capacity: The capacity (volume or other measure) the container may contain.
            :param specimenQuantity: The quantity of specimen in the container; may be volume, dimensions, or other
        appropriate measurements, depending on the specimen type.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            identifier=identifier,
            description=description,
            type=type,
            capacity=capacity,
            specimenQuantity=specimenQuantity,
        )
