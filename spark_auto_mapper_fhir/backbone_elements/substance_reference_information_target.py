from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.complex_types.identifier import Identifier
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept
    from spark_auto_mapper_fhir.complex_types.reference import Reference
    # Imports for References for source
    from spark_auto_mapper_fhir.resources.document_reference import DocumentReference


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class SubstanceReferenceInformationTarget(FhirBackboneElementBase):
    """
    """
    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        extension: Optional[FhirList[ExtensionBase]] = None,
        target: Optional[Identifier ] = None,
        type: Optional[CodeableConcept ] = None,
        interaction: Optional[CodeableConcept ] = None,
        organism: Optional[CodeableConcept ] = None,
        organismType: Optional[CodeableConcept ] = None,
        amountType: Optional[CodeableConcept ] = None,
        source: Optional[FhirList[Reference [Union[DocumentReference]]]] = None,
    ) -> None:
        """

        :param id_: id of resource
        :param extension: extensions
        :param target: Todo.
        :param type: Todo.
        :param interaction: Todo.
        :param organism: Todo.
        :param organismType: Todo.
        :param amountType: Todo.
        :param source: Todo.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            target=target,
            type=type,
            interaction=interaction,
            organism=organism,
            organismType=organismType,
            amountType=amountType,
            source=source,
        )
