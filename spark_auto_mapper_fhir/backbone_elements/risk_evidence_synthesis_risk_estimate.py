from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.complex_types.string import string
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept
    # Import for CodeableConcept for type
    from spark_auto_mapper_fhir.value_sets.risk_estimate_type import RiskEstimateType
    # End Import for CodeableConcept for type
    from spark_auto_mapper_fhir.complex_types.decimal import decimal
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept
    from spark_auto_mapper_fhir.complex_types.integer import integer
    from spark_auto_mapper_fhir.complex_types.integer import integer
    from spark_auto_mapper_fhir.backbone_elements.risk_evidence_synthesis_precision_estimate import RiskEvidenceSynthesisPrecisionEstimate


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class RiskEvidenceSynthesisRiskEstimate(FhirBackboneElementBase):
    """
    """
    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        extension: Optional[FhirList[ExtensionBase]] = None,
        description: Optional[FhirString ] = None,
        type: Optional[CodeableConcept[RiskEstimateType] ] = None,
        value: Optional[decimal ] = None,
        unitOfMeasure: Optional[CodeableConcept ] = None,
        denominatorCount: Optional[FhirInteger ] = None,
        numeratorCount: Optional[FhirInteger ] = None,
        precisionEstimate: Optional[FhirList[RiskEvidenceSynthesisPrecisionEstimate ]] = None,
    ) -> None:
        """

        :param id_: id of resource
        :param extension: extensions
        :param description: Human-readable summary of risk estimate.
        :param type: Examples include proportion and mean.
        :param value: The point estimate of the risk estimate.
        :param unitOfMeasure: Specifies the UCUM unit for the outcome.
        :param denominatorCount: The sample size for the group that was measured for this risk estimate.
        :param numeratorCount: The number of group members with the outcome of interest.
        :param precisionEstimate: A description of the precision of the estimate for the effect.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            description=description,
            type=type,
            value=value,
            unitOfMeasure=unitOfMeasure,
            denominatorCount=denominatorCount,
            numeratorCount=numeratorCount,
            precisionEstimate=precisionEstimate,
        )
