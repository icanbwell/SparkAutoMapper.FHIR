from __future__ import annotations
from typing import Optional, TYPE_CHECKING, Union

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # code (DocumentRelationshipType)
    from spark_auto_mapper_fhir.value_sets.document_relationship_type import (
        DocumentRelationshipTypeCode,
    )

    # targetIdentifier (Identifier)
    from spark_auto_mapper_fhir.complex_types.identifier import Identifier

    # targetReference (Reference)
    from spark_auto_mapper_fhir.complex_types.reference import Reference

    # Imports for References for targetReference
    from spark_auto_mapper_fhir.resources.composition import Composition


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class CompositionRelatesTo(FhirBackboneElementBase):
    """
    Composition.RelatesTo
        A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        code: DocumentRelationshipTypeCode,
        targetIdentifier: Optional[Identifier] = None,
        targetReference: Optional[Reference[Union[Composition]]] = None,
    ) -> None:
        """
            A set of healthcare-related information that is assembled together into a
        single logical package that provides a single coherent statement of meaning,
        establishes its own context and that has clinical attestation with regard to
        who is making the statement. A Composition defines the structure and narrative
        content necessary for a document. However, a Composition alone does not
        constitute a document. Rather, the Composition must be the first entry in a
        Bundle where Bundle.type=document, and any other resources referenced from
        Composition must be included as subsequent entries in the Bundle (for example
        Patient, Practitioner, Encounter, etc.).

            :param id_: id of resource
            :param extension: extensions
            :param code: The type of relationship that this composition has with anther composition or
        document.
            :param targetIdentifier: None
            :param targetReference: None
        """
        super().__init__(
            id_=id_,
            extension=extension,
            code=code,
            targetIdentifier=targetIdentifier,
            targetReference=targetReference,
        )
