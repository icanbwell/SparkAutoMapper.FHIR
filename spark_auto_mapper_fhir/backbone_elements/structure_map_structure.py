from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # url (canonical)
    from spark_auto_mapper_fhir.fhir_types.canonical import FhirCanonical

    # mode (StructureMapModelMode)
    from spark_auto_mapper_fhir.value_sets.structure_map_model_mode import (
        StructureMapModelModeCode,
    )

    # alias (string)
    # documentation (string)


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class StructureMapStructure(FhirBackboneElementBase):
    """
    StructureMap.Structure
        A Map of relationships between 2 structures that can be used to transform data.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        url: FhirCanonical,
        mode: StructureMapModelModeCode,
        alias: Optional[FhirString] = None,
        documentation: Optional[FhirString] = None,
    ) -> None:
        """
            A Map of relationships between 2 structures that can be used to transform
        data.

            :param id_: id of resource
            :param extension: extensions
            :param url: The canonical reference to the structure.
            :param mode: How the referenced structure is used in this mapping.
            :param alias: The name used for this type in the map.
            :param documentation: Documentation that describes how the structure is used in the mapping.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            url=url,
            mode=mode,
            alias=alias,
            documentation=documentation,
        )
