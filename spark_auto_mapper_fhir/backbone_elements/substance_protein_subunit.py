from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # subunit (integer)
    # sequence (string)
    # length (integer)
    # sequenceAttachment (Attachment)
    from spark_auto_mapper_fhir.complex_types.attachment import Attachment

    # nTerminalModificationId (Identifier)
    from spark_auto_mapper_fhir.complex_types.identifier import Identifier

    # nTerminalModification (string)
    # cTerminalModificationId (Identifier)
    # cTerminalModification (string)


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class SubstanceProteinSubunit(FhirBackboneElementBase):
    """
    SubstanceProtein.Subunit
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        subunit: Optional[FhirInteger] = None,
        sequence: Optional[FhirString] = None,
        length: Optional[FhirInteger] = None,
        sequenceAttachment: Optional[Attachment] = None,
        nTerminalModificationId: Optional[Identifier] = None,
        nTerminalModification: Optional[FhirString] = None,
        cTerminalModificationId: Optional[Identifier] = None,
        cTerminalModification: Optional[FhirString] = None,
    ) -> None:
        """

            :param id_: id of resource
            :param extension: extensions
            :param subunit: Index of primary sequences of amino acids linked through peptide bonds in
        order of decreasing length. Sequences of the same length will be ordered by
        molecular weight. Subunits that have identical sequences will be repeated and
        have sequential subscripts.
            :param sequence: The sequence information shall be provided enumerating the amino acids from N-
        to C-terminal end using standard single-letter amino acid codes. Uppercase
        shall be used for L-amino acids and lowercase for D-amino acids. Transcribed
        SubstanceProteins will always be described using the translated sequence; for
        synthetic peptide containing amino acids that are not represented with a
        single letter code an X should be used within the sequence. The modified amino
        acids will be distinguished by their position in the sequence.
            :param length: Length of linear sequences of amino acids contained in the subunit.
            :param sequenceAttachment: The sequence information shall be provided enumerating the amino acids from N-
        to C-terminal end using standard single-letter amino acid codes. Uppercase
        shall be used for L-amino acids and lowercase for D-amino acids. Transcribed
        SubstanceProteins will always be described using the translated sequence; for
        synthetic peptide containing amino acids that are not represented with a
        single letter code an X should be used within the sequence. The modified amino
        acids will be distinguished by their position in the sequence.
            :param nTerminalModificationId: Unique identifier for molecular fragment modification based on the ISO 11238
        Substance ID.
            :param nTerminalModification: The name of the fragment modified at the N-terminal of the SubstanceProtein
        shall be specified.
            :param cTerminalModificationId: Unique identifier for molecular fragment modification based on the ISO 11238
        Substance ID.
            :param cTerminalModification: The modification at the C-terminal shall be specified.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            subunit=subunit,
            sequence=sequence,
            length=length,
            sequenceAttachment=sequenceAttachment,
            nTerminalModificationId=nTerminalModificationId,
            nTerminalModification=nTerminalModification,
            cTerminalModificationId=cTerminalModificationId,
            cTerminalModification=cTerminalModification,
        )
