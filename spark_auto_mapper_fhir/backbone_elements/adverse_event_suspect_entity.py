from __future__ import annotations
from typing import Optional, TYPE_CHECKING, Union

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # instance (Reference)
    from spark_auto_mapper_fhir.complex_types.reference import Reference

    # Imports for References for instance
    from spark_auto_mapper_fhir.resources.immunization import Immunization
    from spark_auto_mapper_fhir.resources.procedure import Procedure
    from spark_auto_mapper_fhir.resources.substance import Substance
    from spark_auto_mapper_fhir.resources.medication import Medication
    from spark_auto_mapper_fhir.resources.medication_administration import (
        MedicationAdministration,
    )
    from spark_auto_mapper_fhir.resources.medication_statement import (
        MedicationStatement,
    )
    from spark_auto_mapper_fhir.resources.device import Device

    # causality (AdverseEvent.Causality)
    from spark_auto_mapper_fhir.backbone_elements.adverse_event_causality import (
        AdverseEventCausality,
    )


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class AdverseEventSuspectEntity(FhirBackboneElementBase):
    """
    AdverseEvent.SuspectEntity
        Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        instance: Reference[
            Union[
                Immunization,
                Procedure,
                Substance,
                Medication,
                MedicationAdministration,
                MedicationStatement,
                Device,
            ]
        ],
        causality: Optional[FhirList[AdverseEventCausality]] = None,
    ) -> None:
        """
            Actual or  potential/avoided event causing unintended physical injury
        resulting from or contributed to by medical care, a research study or other
        healthcare setting factors that requires additional monitoring, treatment, or
        hospitalization, or that results in death.

            :param id_: id of resource
            :param extension: extensions
            :param instance: Identifies the actual instance of what caused the adverse event.  May be a
        substance, medication, medication administration, medication statement or a
        device.
            :param causality: Information on the possible cause of the event.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            instance=instance,
            causality=causality,
        )
