from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.complex_types.reference import Reference
    # Imports for References for instance
    from spark_auto_mapper_fhir.resources.immunization import Immunization
    from spark_auto_mapper_fhir.resources.procedure import Procedure
    from spark_auto_mapper_fhir.resources.substance import Substance
    from spark_auto_mapper_fhir.resources.medication import Medication
    from spark_auto_mapper_fhir.resources.medication_administration import MedicationAdministration
    from spark_auto_mapper_fhir.resources.medication_statement import MedicationStatement
    from spark_auto_mapper_fhir.resources.device import Device
    from spark_auto_mapper_fhir.backbone_elements.adverse_event_causality import AdverseEventCausality


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class AdverseEventSuspectEntity(FhirBackboneElementBase):
    """
    """
    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        meta: Optional[Meta] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        instance: Reference[Union[Immunization, Procedure, Substance, Medication, MedicationAdministration, MedicationStatement, Device]],
        causality: Optional[FhirList[AdverseEventCausality]] = None,
    ) -> None:
        """

        :param id_: id of resource
        :param meta: Meta
        :param extension: extensions
        :param instance: Identifies the actual instance of what caused the adverse event.  May be a
    substance, medication, medication administration, medication statement or a
    device.
        :param causality: Information on the possible cause of the event.
        """
        super().__init__(
            resourceType="AdverseEventSuspectEntity",
            id_=id_,
            meta=meta,
            extension=extension,
            instance=instance,
            causality=causality,
        )
