from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept
    from spark_auto_mapper_fhir.complex_types.string import string
    from spark_auto_mapper_fhir.backbone_elements.timing import Timing
    from spark_auto_mapper_fhir.complex_types.quantity import Quantity
    from spark_auto_mapper_fhir.complex_types.string import string


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class NutritionOrderSupplement(FhirBackboneElementBase):
    """
    """
    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        meta: Optional[Meta] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        type: Optional[CodeableConcept] = None,
        productName: Optional[string] = None,
        schedule: Optional[FhirList[Timing]] = None,
        quantity: Optional[Quantity] = None,
        instruction: Optional[string] = None,
    ) -> None:
        """

        :param id_: id of resource
        :param meta: Meta
        :param extension: extensions
        :param type: The kind of nutritional supplement product required such as a high protein or
    pediatric clear liquid supplement.
        :param productName: The product or brand name of the nutritional supplement such as "Acme Protein
    Shake".
        :param schedule: The time period and frequency at which the supplement(s) should be given.  The
    supplement should be given for the combination of all schedules if more than
    one schedule is present.
        :param quantity: The amount of the nutritional supplement to be given.
        :param instruction: Free text or additional instructions or information pertaining to the oral
    supplement.
        """
        super().__init__(
            resourceType="NutritionOrderSupplement",
            id_=id_,
            meta=meta,
            extension=extension,
            type=type,
            productName=productName,
            schedule=schedule,
            quantity=quantity,
            instruction=instruction,
        )
