from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # type_ (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # End Import for References for type_
    # Import for CodeableConcept for type_
    from spark_auto_mapper_fhir.value_sets.supplement_type_codes import (
        SupplementTypeCodesCode,
    )

    # End Import for CodeableConcept for type_
    # productName (string)
    # schedule (Timing)
    from spark_auto_mapper_fhir.backbone_elements.timing import Timing

    # quantity (Quantity)
    from spark_auto_mapper_fhir.complex_types.quantity import Quantity

    # instruction (string)


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class NutritionOrderSupplement(FhirBackboneElementBase):
    """
    NutritionOrder.Supplement
        A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        type_: Optional[CodeableConcept[SupplementTypeCodesCode]] = None,
        productName: Optional[FhirString] = None,
        schedule: Optional[FhirList[Timing]] = None,
        quantity: Optional[Quantity] = None,
        instruction: Optional[FhirString] = None,
    ) -> None:
        """
            A request to supply a diet, formula feeding (enteral) or oral nutritional
        supplement to a patient/resident.

            :param id_: id of resource
            :param extension: extensions
            :param type_: The kind of nutritional supplement product required such as a high protein or
        pediatric clear liquid supplement.
            :param productName: The product or brand name of the nutritional supplement such as "Acme Protein
        Shake".
            :param schedule: The time period and frequency at which the supplement(s) should be given.  The
        supplement should be given for the combination of all schedules if more than
        one schedule is present.
            :param quantity: The amount of the nutritional supplement to be given.
            :param instruction: Free text or additional instructions or information pertaining to the oral
        supplement.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            type_=type_,
            productName=productName,
            schedule=schedule,
            quantity=quantity,
            instruction=instruction,
        )
