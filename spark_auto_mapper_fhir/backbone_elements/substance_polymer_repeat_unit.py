from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept
    from spark_auto_mapper_fhir.complex_types.string import string
    from spark_auto_mapper_fhir.backbone_elements.substance_amount import SubstanceAmount
    from spark_auto_mapper_fhir.backbone_elements.substance_polymer_degree_of_polymerisation import SubstancePolymerDegreeOfPolymerisation
    from spark_auto_mapper_fhir.backbone_elements.substance_polymer_structural_representation import SubstancePolymerStructuralRepresentation


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class SubstancePolymerRepeatUnit(FhirBackboneElementBase):
    """
    """
    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        extension: Optional[FhirList[ExtensionBase]] = None,
        orientationOfPolymerisation: Optional[CodeableConcept ] = None,
        repeatUnit: Optional[FhirString ] = None,
        amount: Optional[SubstanceAmount ] = None,
        degreeOfPolymerisation: Optional[FhirList[SubstancePolymerDegreeOfPolymerisation ]] = None,
        structuralRepresentation: Optional[FhirList[SubstancePolymerStructuralRepresentation ]] = None,
    ) -> None:
        """

        :param id_: id of resource
        :param extension: extensions
        :param orientationOfPolymerisation: Todo.
        :param repeatUnit: Todo.
        :param amount: Todo.
        :param degreeOfPolymerisation: Todo.
        :param structuralRepresentation: Todo.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            orientationOfPolymerisation=orientationOfPolymerisation,
            repeatUnit=repeatUnit,
            amount=amount,
            degreeOfPolymerisation=degreeOfPolymerisation,
            structuralRepresentation=structuralRepresentation,
        )
