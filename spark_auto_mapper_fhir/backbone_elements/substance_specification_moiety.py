from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept
    from spark_auto_mapper_fhir.complex_types.identifier import Identifier
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class SubstanceSpecificationMoiety(FhirBackboneElementBase):
    """ """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        meta: Optional[Meta] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        role: Optional[CodeableConcept] = None,
        identifier: Optional[Identifier] = None,
        name: Optional[FhirString] = None,
        stereochemistry: Optional[CodeableConcept] = None,
        opticalActivity: Optional[CodeableConcept] = None,
        molecularFormula: Optional[FhirString] = None,
    ) -> None:
        """

        :param id_: id of resource
        :param meta: Meta
        :param extension: extensions
        :param role: Role that the moiety is playing.
        :param identifier: Identifier by which this moiety substance is known.
        :param name: Textual name for this moiety substance.
        :param stereochemistry: Stereochemistry type.
        :param opticalActivity: Optical activity type.
        :param molecularFormula: Molecular formula.
        """
        super().__init__(
            resourceType="SubstanceSpecificationMoiety",
            id_=id_,
            meta=meta,
            extension=extension,
            role=role,
            identifier=identifier,
            name=name,
            stereochemistry=stereochemistry,
            opticalActivity=opticalActivity,
            molecularFormula=molecularFormula,
        )
