from __future__ import annotations
from typing import Optional, TYPE_CHECKING, Union

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # description (string)
    # url (url)
    from spark_auto_mapper_fhir.fhir_types.url import FhirUrl

    # custodian (Reference)
    from spark_auto_mapper_fhir.complex_types.reference import Reference

    # Imports for References for custodian
    from spark_auto_mapper_fhir.resources.organization import Organization


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class CapabilityStatementImplementation(FhirBackboneElementBase):
    """
    CapabilityStatement.Implementation
        A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        description: FhirString,
        url: Optional[FhirUrl] = None,
        custodian: Optional[Reference[Union[Organization]]] = None,
    ) -> None:
        """
            A Capability Statement documents a set of capabilities (behaviors) of a FHIR
        Server for a particular version of FHIR that may be used as a statement of
        actual server functionality or a statement of required or desired server
        implementation.

            :param id_: id of resource
            :param extension: extensions
            :param description: Information about the specific installation that this capability statement
        relates to.
            :param url: An absolute base URL for the implementation.  This forms the base for REST
        interfaces as well as the mailbox and document interfaces.
            :param custodian: The organization responsible for the management of the instance and oversight
        of the data on the server at the specified URL.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            description=description,
            url=url,
            custodian=custodian,
        )
