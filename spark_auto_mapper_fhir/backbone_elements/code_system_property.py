from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.complex_types.code import code
    from spark_auto_mapper_fhir.complex_types.uri import uri
    from spark_auto_mapper_fhir.complex_types.string import string
    from spark_auto_mapper_fhir.complex_types.property_type import PropertyType


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class CodeSystemProperty(FhirBackboneElementBase):
    """
    """
    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        meta: Optional[Meta] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        code: code,
        uri: Optional[uri] = None,
        description: Optional[string] = None,
        type: PropertyType,
    ) -> None:
        """

        :param id_: id of resource
        :param meta: Meta
        :param extension: extensions
        :param code: A code that is used to identify the property. The code is used internally (in
    CodeSystem.concept.property.code) and also externally, such as in property
    filters.
        :param uri: Reference to the formal meaning of the property. One possible source of
    meaning is the [Concept Properties](codesystem-concept-properties.html) code
    system.
        :param description: A description of the property- why it is defined, and how its value might be
    used.
        :param type: The type of the property value. Properties of type "code" contain a code
    defined by the code system (e.g. a reference to another defined concept).
        """
        super().__init__(
            resourceType="CodeSystemProperty",
            id_=id_,
            meta=meta,
            extension=extension,
            code=code,
            uri=uri,
            description=description,
            type=type,
        )
