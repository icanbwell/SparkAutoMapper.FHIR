from __future__ import annotations
from typing import Optional, Union, List, Any, TYPE_CHECKING

from pyspark.sql.types import StructType, DataType
from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.date import FhirDate
from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.integer import FhirInteger
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.complex_types.http_verb import HTTPVerb
    from spark_auto_mapper_fhir.complex_types.uri import uri
    from spark_auto_mapper_fhir.complex_types.string import string
    from spark_auto_mapper_fhir.complex_types.instant import instant
    from spark_auto_mapper_fhir.complex_types.string import string
    from spark_auto_mapper_fhir.complex_types.string import string


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class BundleRequest(FhirBackboneElementBase):
    """
    """
    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        meta: Optional[Meta] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        method: HTTPVerb,
        url: uri,
        ifNoneMatch: Optional[string] = None,
        ifModifiedSince: Optional[instant] = None,
        ifMatch: Optional[string] = None,
        ifNoneExist: Optional[string] = None,
    ) -> None:
        """

        :param id_: id of resource
        :param meta: Meta
        :param extension: extensions
        :param method: In a transaction or batch, this is the HTTP action to be executed for this
    entry. In a history bundle, this indicates the HTTP action that occurred.
        :param url: The URL for this entry, relative to the root (the address to which the request
    is posted).
        :param ifNoneMatch: If the ETag values match, return a 304 Not Modified status. See the API
    documentation for ["Conditional Read"](http.html#cread).
        :param ifModifiedSince: Only perform the operation if the last updated date matches. See the API
    documentation for ["Conditional Read"](http.html#cread).
        :param ifMatch: Only perform the operation if the Etag value matches. For more information,
    see the API section ["Managing Resource Contention"](http.html#concurrency).
        :param ifNoneExist: Instruct the server not to perform the create if a specified resource already
    exists. For further information, see the API documentation for ["Conditional
    Create"](http.html#ccreate). This is just the query portion of the URL - what
    follows the "?" (not including the "?").
        """
        super().__init__(
            resourceType="BundleRequest",
            id_=id_,
            meta=meta,
            extension=extension,
            method=method,
            url=url,
            ifNoneMatch=ifNoneMatch,
            ifModifiedSince=ifModifiedSince,
            ifMatch=ifMatch,
            ifNoneExist=ifNoneExist,
        )
