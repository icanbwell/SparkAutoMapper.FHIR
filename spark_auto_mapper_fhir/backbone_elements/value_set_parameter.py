from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    # name (string)
    pass


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class ValueSetParameter(FhirBackboneElementBase):
    """
    ValueSet.Parameter
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        extension: Optional[FhirList[ExtensionBase]] = None,
        name: FhirString,
    ) -> None:
        """

            :param id_: id of resource
            :param extension: extensions
            :param name: Name of the input parameter to the $expand operation; may be a server-assigned
        name for additional default or other server-supplied parameters used to
        control the expansion process.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            name=name,
        )
