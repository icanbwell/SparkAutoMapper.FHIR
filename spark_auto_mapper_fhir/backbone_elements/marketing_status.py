from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.fhir_types.string import FhirString
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # id_ (string)
    # extension (Extension)
    # modifierExtension (Extension)
    # country (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # End Import for References for country
    # Import for CodeableConcept for country
    from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode

    # End Import for CodeableConcept for country
    # jurisdiction (CodeableConcept)
    # End Import for References for jurisdiction
    # Import for CodeableConcept for jurisdiction
    # End Import for CodeableConcept for jurisdiction
    # status (CodeableConcept)
    # End Import for References for status
    # Import for CodeableConcept for status
    # End Import for CodeableConcept for status
    # dateRange (Period)
    from spark_auto_mapper_fhir.complex_types.period import Period

    # restoreDate (dateTime)


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class MarketingStatus(FhirBackboneElementBase):
    """
    MarketingStatus
        The marketing status describes the date when a medicinal product is actually put on the market or the date as of which it is no longer available.
        If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirString] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        modifierExtension: Optional[FhirList[ExtensionBase]] = None,
        country: CodeableConcept[GenericTypeCode],
        jurisdiction: Optional[CodeableConcept[GenericTypeCode]] = None,
        status: CodeableConcept[GenericTypeCode],
        dateRange: Period,
        restoreDate: Optional[FhirDateTime] = None,
    ) -> None:
        """
            The marketing status describes the date when a medicinal product is actually
        put on the market or the date as of which it is no longer available.
            If the element is present, it must have a value for at least one of the
        defined elements, an @id referenced from the Narrative, or extensions

            :param id_: None
            :param extension: May be used to represent additional information that is not part of the basic
        definition of the element. To make the use of extensions safe and manageable,
        there is a strict set of governance  applied to the definition and use of
        extensions. Though any implementer can define an extension, there is a set of
        requirements that SHALL be met as part of the definition of the extension.
            :param modifierExtension: May be used to represent additional information that is not part of the basic
        definition of the element and that modifies the understanding of the element
        in which it is contained and/or the understanding of the containing element's
        descendants. Usually modifier elements provide negation or qualification. To
        make the use of extensions safe and manageable, there is a strict set of
        governance applied to the definition and use of extensions. Though any
        implementer can define an extension, there is a set of requirements that SHALL
        be met as part of the definition of the extension. Applications processing a
        resource are required to check for modifier extensions.

        Modifier extensions SHALL NOT change the meaning of any elements on Resource
        or DomainResource (including cannot change the meaning of modifierExtension
        itself).
            :param country: The country in which the marketing authorisation has been granted shall be
        specified It should be specified using the ISO 3166 ‑ 1 alpha-2 code elements.
            :param jurisdiction: Where a Medicines Regulatory Agency has granted a marketing authorisation for
        which specific provisions within a jurisdiction apply, the jurisdiction can be
        specified using an appropriate controlled terminology The controlled term and
        the controlled term identifier shall be specified.
            :param status: This attribute provides information on the status of the marketing of the
        medicinal product See ISO/TS 20443 for more information and examples.
            :param dateRange: The date when the Medicinal Product is placed on the market by the Marketing
        Authorisation Holder (or where applicable, the manufacturer/distributor) in a
        country and/or jurisdiction shall be provided A complete date consisting of
        day, month and year shall be specified using the ISO 8601 date format NOTE
        “Placed on the market” refers to the release of the Medicinal Product into the
        distribution chain.
            :param restoreDate: The date when the Medicinal Product is placed on the market by the Marketing
        Authorisation Holder (or where applicable, the manufacturer/distributor) in a
        country and/or jurisdiction shall be provided A complete date consisting of
        day, month and year shall be specified using the ISO 8601 date format NOTE
        “Placed on the market” refers to the release of the Medicinal Product into the
        distribution chain.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            modifierExtension=modifierExtension,
            country=country,
            jurisdiction=jurisdiction,
            status=status,
            dateRange=dateRange,
            restoreDate=restoreDate,
        )
