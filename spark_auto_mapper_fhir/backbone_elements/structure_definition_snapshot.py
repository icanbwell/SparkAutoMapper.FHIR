from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # element (ElementDefinition)
    from spark_auto_mapper_fhir.backbone_elements.element_definition import (
        ElementDefinition,
    )


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class StructureDefinitionSnapshot(FhirBackboneElementBase):
    """
    StructureDefinition.Snapshot
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        element: FhirList[ElementDefinition],
    ) -> None:
        """

        :param id_: id of resource
        :param extension: extensions
        :param element: Captures constraints on each element within the resource.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            element=element,
        )
