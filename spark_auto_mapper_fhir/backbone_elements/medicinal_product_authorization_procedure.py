from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.date_time import FhirDateTime
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # identifier (Identifier)
    from spark_auto_mapper_fhir.complex_types.identifier import Identifier

    # type_ (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # End Import for References for type_
    # Import for CodeableConcept for type_
    from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode

    # End Import for CodeableConcept for type_
    # datePeriod (Period)
    from spark_auto_mapper_fhir.complex_types.period import Period

    # dateDateTime (dateTime)


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class MedicinalProductAuthorizationProcedure(FhirBackboneElementBase):
    """
    MedicinalProductAuthorization.Procedure
        The regulatory authorization of a medicinal product.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        identifier: Optional[Identifier] = None,
        type_: CodeableConcept[GenericTypeCode],
        datePeriod: Optional[Period] = None,
        dateDateTime: Optional[FhirDateTime] = None,
        application: Optional[FhirList[MedicinalProductAuthorizationProcedure]] = None,
    ) -> None:
        """
        The regulatory authorization of a medicinal product.

        :param id_: id of resource
        :param extension: extensions
        :param identifier: Identifier for this procedure.
        :param type_: Type of procedure.
        :param datePeriod: None
        :param dateDateTime: None
        :param application: Applcations submitted to obtain a marketing authorization.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            identifier=identifier,
            type_=type_,
            datePeriod=datePeriod,
            dateDateTime=dateDateTime,
            application=application,
        )
