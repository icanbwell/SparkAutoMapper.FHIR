from __future__ import annotations
from typing import Optional, TYPE_CHECKING, Union

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # type_ (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # End Import for References for type_
    # Import for CodeableConcept for type_
    from spark_auto_mapper_fhir.value_sets.claim_payee_type_codes import (
        ClaimPayeeTypeCodesCode,
    )

    # End Import for CodeableConcept for type_
    # party (Reference)
    from spark_auto_mapper_fhir.complex_types.reference import Reference

    # Imports for References for party
    from spark_auto_mapper_fhir.resources.practitioner import Practitioner
    from spark_auto_mapper_fhir.resources.practitioner_role import PractitionerRole
    from spark_auto_mapper_fhir.resources.organization import Organization
    from spark_auto_mapper_fhir.resources.patient import Patient
    from spark_auto_mapper_fhir.resources.related_person import RelatedPerson


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class ClaimPayee(FhirBackboneElementBase):
    """
    Claim.Payee
        A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        type_: CodeableConcept[ClaimPayeeTypeCodesCode],
        party: Optional[
            Reference[
                Union[
                    Practitioner, PractitionerRole, Organization, Patient, RelatedPerson
                ]
            ]
        ] = None,
    ) -> None:
        """
            A provider issued list of professional services and products which have been
        provided, or are to be provided, to a patient which is sent to an insurer for
        reimbursement.

            :param id_: id of resource
            :param extension: extensions
            :param type_: Type of Party to be reimbursed: subscriber, provider, other.
            :param party: Reference to the individual or organization to whom any payment will be made.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            type_=type_,
            party=party,
        )
