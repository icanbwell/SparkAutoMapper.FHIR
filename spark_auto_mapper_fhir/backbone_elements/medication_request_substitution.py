from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # allowedBoolean (boolean)
    # allowedCodeableConcept (CodeableConcept)
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept

    # End Import for References for allowedCodeableConcept
    # Import for CodeableConcept for allowedCodeableConcept
    from spark_auto_mapper_fhir.value_sets.generic_type import GenericTypeCode

    # End Import for CodeableConcept for allowedCodeableConcept
    # reason (CodeableConcept)
    # End Import for References for reason
    # Import for CodeableConcept for reason
    from spark_auto_mapper_fhir.value_sets.substance_admin_substitution_reason import (
        SubstanceAdminSubstitutionReason,
    )

    # End Import for CodeableConcept for reason


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class MedicationRequestSubstitution(FhirBackboneElementBase):
    """
    MedicationRequest.Substitution
        An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called "MedicationRequest" rather than "MedicationPrescription" or "MedicationOrder" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        allowedBoolean: Optional[FhirBoolean] = None,
        allowedCodeableConcept: Optional[CodeableConcept[GenericTypeCode]] = None,
        reason: Optional[CodeableConcept[SubstanceAdminSubstitutionReason]] = None,
    ) -> None:
        """
            An order or request for both supply of the medication and the instructions for
        administration of the medication to a patient. The resource is called
        "MedicationRequest" rather than "MedicationPrescription" or "MedicationOrder"
        to generalize the use across inpatient and outpatient settings, including care
        plans, etc., and to harmonize with workflow patterns.

            :param id_: id of resource
            :param extension: extensions
            :param allowedBoolean: None
            :param allowedCodeableConcept: None
            :param reason: Indicates the reason for the substitution, or why substitution must or must
        not be performed.
        """
        super().__init__(
            id_=id_,
            extension=extension,
            allowedBoolean=allowedBoolean,
            allowedCodeableConcept=allowedCodeableConcept,
            reason=reason,
        )
