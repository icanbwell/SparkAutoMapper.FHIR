from __future__ import annotations
from typing import Optional, TYPE_CHECKING, Union

from spark_auto_mapper_fhir.fhir_types.boolean import FhirBoolean
from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId
from spark_auto_mapper_fhir.resources.resource import Resource

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    pass
    # autocreate (boolean)
    # autodelete (boolean)
    # resource (Reference)
    from spark_auto_mapper_fhir.complex_types.reference import Reference

    # Imports for References for resource


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class TestScriptFixture(FhirBackboneElementBase):
    """
    TestScript.Fixture
        A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
    """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: Optional[FhirId] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        autocreate: FhirBoolean,
        autodelete: FhirBoolean,
        resource: Optional[Reference[Union[Resource]]] = None,
    ) -> None:
        """
            A structured set of tests against a FHIR server or client implementation to
        determine compliance against the FHIR specification.

            :param id_: id of resource
            :param extension: extensions
            :param autocreate: Whether or not to implicitly create the fixture during setup. If true, the
        fixture is automatically created on each server being tested during setup,
        therefore no create operation is required for this fixture in the
        TestScript.setup section.
            :param autodelete: Whether or not to implicitly delete the fixture during teardown. If true, the
        fixture is automatically deleted on each server being tested during teardown,
        therefore no delete operation is required for this fixture in the
        TestScript.teardown section.
            :param resource: Reference to the resource (containing the contents of the resource needed for
        operations).
        """
        super().__init__(
            id_=id_,
            extension=extension,
            autocreate=autocreate,
            autodelete=autodelete,
            resource=resource,
        )
