from __future__ import annotations
from typing import Optional, TYPE_CHECKING

from spark_auto_mapper_fhir.fhir_types.list import FhirList
from spark_auto_mapper_fhir.complex_types.meta import Meta
from spark_auto_mapper_fhir.extensions.extension_base import ExtensionBase
from spark_auto_mapper_fhir.fhir_types.id import FhirId

from spark_auto_mapper_fhir.base_types.fhir_backbone_element_base import (
    FhirBackboneElementBase,
)

if TYPE_CHECKING:
    from spark_auto_mapper_fhir.complex_types.codeable_concept import CodeableConcept


# This file is auto-generated by generate_classes so do not edit manually
# noinspection PyPep8Naming
class SubstanceSourceMaterialHybrid(FhirBackboneElementBase):
    """ """

    # noinspection PyPep8Naming
    def __init__(
        self,
        *,
        id_: FhirId,
        meta: Optional[Meta] = None,
        extension: Optional[FhirList[ExtensionBase]] = None,
        maternalOrganismId: Optional[FhirString] = None,
        maternalOrganismName: Optional[FhirString] = None,
        paternalOrganismId: Optional[FhirString] = None,
        paternalOrganismName: Optional[FhirString] = None,
        hybridType: Optional[CodeableConcept] = None,
    ) -> None:
        """

            :param id_: id of resource
            :param meta: Meta
            :param extension: extensions
            :param maternalOrganismId: The identifier of the maternal species constituting the hybrid organism shall
        be specified based on a controlled vocabulary. For plants, the parents aren’t
        always known, and it is unlikely that it will be known which is maternal and
        which is paternal.
            :param maternalOrganismName: The name of the maternal species constituting the hybrid organism shall be
        specified. For plants, the parents aren’t always known, and it is unlikely
        that it will be known which is maternal and which is paternal.
            :param paternalOrganismId: The identifier of the paternal species constituting the hybrid organism shall
        be specified based on a controlled vocabulary.
            :param paternalOrganismName: The name of the paternal species constituting the hybrid organism shall be
        specified.
            :param hybridType: The hybrid type of an organism shall be specified.
        """
        super().__init__(
            resourceType="SubstanceSourceMaterialHybrid",
            id_=id_,
            meta=meta,
            extension=extension,
            maternalOrganismId=maternalOrganismId,
            maternalOrganismName=maternalOrganismName,
            paternalOrganismId=paternalOrganismId,
            paternalOrganismName=paternalOrganismName,
            hybridType=hybridType,
        )
