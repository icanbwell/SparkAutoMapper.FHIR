:mod:`spark_auto_mapper_fhir.extensions.extension`
==================================================

.. py:module:: spark_auto_mapper_fhir.extensions.extension


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.extensions.extension.Extension



.. class:: Extension(*, id_: Optional[spark_auto_mapper_fhir.fhir_types.string.FhirString] = None, extension: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.extensions.extension_base.ExtensionBase]] = None, url: Optional[spark_auto_mapper_fhir.fhir_types.uri.FhirUri] = None, valueBase64Binary: Optional[spark_auto_mapper_fhir.fhir_types.base64_binary.FhirBase64Binary] = None, valueBoolean: Optional[spark_auto_mapper_fhir.fhir_types.boolean.FhirBoolean] = None, valueCanonical: Optional[spark_auto_mapper_fhir.fhir_types.canonical.FhirCanonical] = None, valueCode: Optional[spark_auto_mapper_fhir.value_sets.generic_type.GenericTypeCode] = None, valueDate: Optional[spark_auto_mapper_fhir.fhir_types.date.FhirDate] = None, valueDateTime: Optional[spark_auto_mapper_fhir.fhir_types.date_time.FhirDateTime] = None, valueDecimal: Optional[spark_auto_mapper_fhir.fhir_types.decimal.FhirDecimal] = None, valueId: Optional[spark_auto_mapper_fhir.fhir_types.id.FhirId] = None, valueInstant: Optional[spark_auto_mapper_fhir.fhir_types.instant.FhirInstant] = None, valueInteger: Optional[spark_auto_mapper_fhir.fhir_types.integer.FhirInteger] = None, valueMarkdown: Optional[spark_auto_mapper_fhir.fhir_types.markdown.FhirMarkdown] = None, valueOid: Optional[spark_auto_mapper_fhir.fhir_types.oid.FhirOid] = None, valuePositiveInt: Optional[spark_auto_mapper_fhir.fhir_types.positive_int.FhirPositiveInt] = None, valueString: Optional[spark_auto_mapper_fhir.fhir_types.string.FhirString] = None, valueTime: Optional[spark_auto_mapper_fhir.fhir_types.time.FhirTime] = None, valueUnsignedInt: Optional[spark_auto_mapper_fhir.fhir_types.unsigned_int.FhirUnsignedInt] = None, valueUri: Optional[spark_auto_mapper_fhir.fhir_types.uri.FhirUri] = None, valueUrl: Optional[spark_auto_mapper_fhir.fhir_types.url.FhirUrl] = None, valueUuid: Optional[spark_auto_mapper_fhir.fhir_types.uuid.FhirUuid] = None, valueAddress: Optional[spark_auto_mapper_fhir.complex_types.address.Address] = None, valueAge: Optional[spark_auto_mapper_fhir.complex_types.age.Age] = None, valueAnnotation: Optional[spark_auto_mapper_fhir.complex_types.annotation.Annotation] = None, valueAttachment: Optional[spark_auto_mapper_fhir.complex_types.attachment.Attachment] = None, valueCodeableConcept: Optional[spark_auto_mapper_fhir.complex_types.codeable_concept.CodeableConcept[spark_auto_mapper_fhir.value_sets.generic_type.GenericTypeCode]] = None, valueCoding: Optional[spark_auto_mapper_fhir.complex_types.coding.Coding[spark_auto_mapper_fhir.value_sets.generic_type.GenericTypeCode]] = None, valueContactPoint: Optional[spark_auto_mapper_fhir.complex_types.contact_point.ContactPoint] = None, valueCount: Optional[spark_auto_mapper_fhir.complex_types.count.Count] = None, valueDistance: Optional[spark_auto_mapper_fhir.complex_types.distance.Distance] = None, valueDuration: Optional[spark_auto_mapper_fhir.complex_types.duration.Duration] = None, valueHumanName: Optional[spark_auto_mapper_fhir.complex_types.human_name.HumanName] = None, valueIdentifier: Optional[spark_auto_mapper_fhir.complex_types.identifier.Identifier] = None, valueMoney: Optional[spark_auto_mapper_fhir.complex_types.money.Money] = None, valuePeriod: Optional[spark_auto_mapper_fhir.complex_types.period.Period] = None, valueQuantity: Optional[spark_auto_mapper_fhir.complex_types.quantity.Quantity] = None, valueRange: Optional[spark_auto_mapper_fhir.complex_types.range.Range] = None, valueRatio: Optional[spark_auto_mapper_fhir.complex_types.ratio.Ratio] = None, valueReference: Optional[spark_auto_mapper_fhir.complex_types.reference.Reference[spark_auto_mapper_fhir.resources.resource.Resource]] = None, valueSampledData: Optional[spark_auto_mapper_fhir.complex_types.sampled_data.SampledData] = None, valueSignature: Optional[spark_auto_mapper_fhir.complex_types.signature.Signature] = None, valueTiming: Optional[spark_auto_mapper_fhir.backbone_elements.timing.Timing] = None, valueContactDetail: Optional[spark_auto_mapper_fhir.complex_types.contact_detail.ContactDetail] = None, valueContributor: Optional[spark_auto_mapper_fhir.complex_types.contributor.Contributor] = None, valueDataRequirement: Optional[spark_auto_mapper_fhir.complex_types.data_requirement.DataRequirement] = None, valueExpression: Optional[spark_auto_mapper_fhir.complex_types.expression.Expression] = None, valueParameterDefinition: Optional[spark_auto_mapper_fhir.complex_types.parameter_definition.ParameterDefinition] = None, valueRelatedArtifact: Optional[spark_auto_mapper_fhir.complex_types.related_artifact.RelatedArtifact] = None, valueTriggerDefinition: Optional[spark_auto_mapper_fhir.complex_types.trigger_definition.TriggerDefinition] = None, valueUsageContext: Optional[spark_auto_mapper_fhir.complex_types.usage_context.UsageContext] = None, valueDosage: Optional[spark_auto_mapper_fhir.backbone_elements.dosage.Dosage] = None, valueMeta: Optional[spark_auto_mapper_fhir.complex_types.meta.Meta] = None)


   Bases: :class:`spark_auto_mapper_fhir.extensions.extension_base.ExtensionBase`

   Extension
   fhir-base.xsd
       Optional Extension Element - found in all resources.
       If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions

   .. method:: get_schema(self, include_extension: bool) -> Optional[Union[(pyspark.sql.types.StructType, pyspark.sql.types.DataType)]]



