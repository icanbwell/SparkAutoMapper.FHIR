:py:mod:`spark_auto_mapper_fhir.backbone_elements.request_group_action`
=======================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.request_group_action


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.request_group_action.RequestGroupAction




.. py:class:: RequestGroupAction(*, id_ = None, extension = None, modifierExtension = None, prefix = None, title = None, description = None, textEquivalent = None, priority = None, code = None, documentation = None, condition = None, relatedAction = None, timingDateTime = None, timingAge = None, timingPeriod = None, timingDuration = None, timingRange = None, timingTiming = None, participant = None, type_ = None, groupingBehavior = None, selectionBehavior = None, requiredBehavior = None, precheckBehavior = None, cardinalityBehavior = None, resource = None, action = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   RequestGroup.Action
       A group of related requests that can be used to capture intended activities that have inter-dependencies such as "give this medication after that one".

       A group of related requests that can be used to capture intended activities
   that have inter-dependencies such as "give this medication after that one".

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param prefix: A user-visible prefix for the action.
       :param title: The title of the action displayed to a user.
       :param description: A short description of the action used to provide a summary to display to the
   user.
       :param textEquivalent: A text equivalent of the action to be performed. This provides a human-
   interpretable description of the action when the definition is consumed by a
   system that might not be capable of interpreting it dynamically.
       :param priority: Indicates how quickly the action should be addressed with respect to other
   actions.
       :param code: A code that provides meaning for the action or action group. For example, a
   section may have a LOINC code for a section of a documentation template.
       :param documentation: Didactic or other informational resources associated with the action that can
   be provided to the CDS recipient. Information resources can include inline
   text commentary and links to web resources.
       :param condition: An expression that describes applicability criteria, or start/stop conditions
   for the action.
       :param relatedAction: A relationship to another action such as "before" or "30-60 minutes after
   start of".
       :param timingDateTime: None
       :param timingAge: None
       :param timingPeriod: None
       :param timingDuration: None
       :param timingRange: None
       :param timingTiming: None
       :param participant: The participant that should perform or be responsible for this action.
       :param type_: The type of action to perform (create, update, remove).
       :param groupingBehavior: Defines the grouping behavior for the action and its children.
       :param selectionBehavior: Defines the selection behavior for the action and its children.
       :param requiredBehavior: Defines expectations around whether an action is required.
       :param precheckBehavior: Defines whether the action should usually be preselected.
       :param cardinalityBehavior: Defines whether the action can be selected multiple times.
       :param resource: The resource that is the target of the action (e.g. CommunicationRequest).
       :param action: Sub actions.


