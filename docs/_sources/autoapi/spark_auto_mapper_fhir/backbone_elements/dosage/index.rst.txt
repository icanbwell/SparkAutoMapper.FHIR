:py:mod:`spark_auto_mapper_fhir.backbone_elements.dosage`
=========================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.dosage


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.dosage.Dosage




.. py:class:: Dosage(*, id_ = None, extension = None, modifierExtension = None, sequence = None, text = None, additionalInstruction = None, patientInstruction = None, timing = None, asNeededBoolean = None, asNeededCodeableConcept = None, site = None, route = None, method = None, doseAndRate = None, maxDosePerPeriod = None, maxDosePerAdministration = None, maxDosePerLifetime = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   Dosage
       Indicates how the medication is/was taken or should be taken by the patient.
       If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions

       Indicates how the medication is/was taken or should be taken by the patient.
       If the element is present, it must have a value for at least one of the
   defined elements, an @id referenced from the Narrative, or extensions

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param sequence: Indicates the order in which the dosage instructions should be applied or
   interpreted.
       :param text: Free text dosage instructions e.g. SIG.
       :param additionalInstruction: Supplemental instructions to the patient on how to take the medication  (e.g.
   "with meals" or"take half to one hour before food") or warnings for the
   patient about the medication (e.g. "may cause drowsiness" or "avoid exposure
   of skin to direct sunlight or sunlamps").
       :param patientInstruction: Instructions in terms that are understood by the patient or consumer.
       :param timing: When medication should be administered.
       :param asNeededBoolean: None
       :param asNeededCodeableConcept: None
       :param site: Body site to administer to.
       :param route: How drug should enter body.
       :param method: Technique for administering medication.
       :param doseAndRate: The amount of medication administered.
       :param maxDosePerPeriod: Upper limit on medication per unit of time.
       :param maxDosePerAdministration: Upper limit on medication per administration.
       :param maxDosePerLifetime: Upper limit on medication per lifetime of the patient.


