:py:mod:`spark_auto_mapper_fhir.backbone_elements.timing_repeat`
================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.timing_repeat


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.timing_repeat.TimingRepeat




.. py:class:: TimingRepeat(*, id_ = None, extension = None, modifierExtension = None, boundsDuration = None, boundsRange = None, boundsPeriod = None, count = None, countMax = None, duration = None, durationMax = None, durationUnit = None, frequency = None, frequencyMax = None, period = None, periodMax = None, periodUnit = None, dayOfWeek = None, timeOfDay = None, when = None, offset = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   Timing.Repeat
       Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.
       If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions

       Specifies an event that may occur multiple times. Timing schedules are used to
   record when things are planned, expected or requested to occur. The most
   common usage is in dosage instructions for medications. They are also used
   when planning care of various kinds, and may be used for reporting the
   schedule to which past regular activities were carried out.
       If the element is present, it must have a value for at least one of the
   defined elements, an @id referenced from the Narrative, or extensions

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param boundsDuration: None
       :param boundsRange: None
       :param boundsPeriod: None
       :param count: A total count of the desired number of repetitions across the duration of the
   entire timing specification. If countMax is present, this element indicates
   the lower bound of the allowed range of count values.
       :param countMax: If present, indicates that the count is a range - so to perform the action
   between [count] and [countMax] times.
       :param duration: How long this thing happens for when it happens. If durationMax is present,
   this element indicates the lower bound of the allowed range of the duration.
       :param durationMax: If present, indicates that the duration is a range - so to perform the action
   between [duration] and [durationMax] time length.
       :param durationUnit: The units of time for the duration, in UCUM units.
       :param frequency: The number of times to repeat the action within the specified period. If
   frequencyMax is present, this element indicates the lower bound of the allowed
   range of the frequency.
       :param frequencyMax: If present, indicates that the frequency is a range - so to repeat between
   [frequency] and [frequencyMax] times within the period or period range.
       :param period: Indicates the duration of time over which repetitions are to occur; e.g. to
   express "3 times per day", 3 would be the frequency and "1 day" would be the
   period. If periodMax is present, this element indicates the lower bound of the
   allowed range of the period length.
       :param periodMax: If present, indicates that the period is a range from [period] to [periodMax],
   allowing expressing concepts such as "do this once every 3-5 days.
       :param periodUnit: The units of time for the period in UCUM units.
       :param dayOfWeek: If one or more days of week is provided, then the action happens only on the
   specified day(s).
       :param timeOfDay: Specified time of day for action to take place.
       :param when: An approximate time period during the day, potentially linked to an event of
   daily living that indicates when the action should occur.
       :param offset: The number of minutes from the event. If the event code does not indicate
   whether the minutes is before or after the event, then the offset is assumed
   to be after the event.


