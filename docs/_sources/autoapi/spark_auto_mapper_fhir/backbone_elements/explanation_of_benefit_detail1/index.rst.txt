:py:mod:`spark_auto_mapper_fhir.backbone_elements.explanation_of_benefit_detail1`
=================================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.explanation_of_benefit_detail1


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.explanation_of_benefit_detail1.ExplanationOfBenefitDetail1




.. py:class:: ExplanationOfBenefitDetail1(*, id_ = None, extension = None, modifierExtension = None, productOrService, modifier = None, quantity = None, unitPrice = None, factor = None, net = None, noteNumber = None, adjudication = None, subDetail = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   ExplanationOfBenefit.Detail1
       This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.

       This resource provides: the claim details; adjudication details from the
   processing of a Claim; and optionally account balance information, for
   informing the subscriber of the benefits provided.

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param productOrService: When the value is a group code then this item collects a set of related claim
   details, otherwise this contains the product, service, drug or other billing
   code for the item.
       :param modifier: Item typification or modifiers codes to convey additional context for the
   product or service.
       :param quantity: The number of repetitions of a service or product.
       :param unitPrice: If the item is not a group then this is the fee for the product or service,
   otherwise this is the total of the fees for the details of the group.
       :param factor: A real number that represents a multiplier used in determining the overall
   value of services delivered and/or goods received. The concept of a Factor
   allows for a discount or surcharge multiplier to be applied to a monetary
   amount.
       :param net: The quantity times the unit price for an additional service or product or
   charge.
       :param noteNumber: The numbers associated with notes below which apply to the adjudication of
   this item.
       :param adjudication: The adjudication results.
       :param subDetail: The third-tier service adjudications for payor added services.


