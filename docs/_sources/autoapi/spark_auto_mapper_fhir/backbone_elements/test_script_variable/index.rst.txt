:py:mod:`spark_auto_mapper_fhir.backbone_elements.test_script_variable`
=======================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.test_script_variable


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.test_script_variable.TestScriptVariable




.. py:class:: TestScriptVariable(*, id_ = None, extension = None, modifierExtension = None, name, defaultValue = None, description = None, expression = None, headerField = None, hint = None, path = None, sourceId = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   TestScript.Variable
       A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.

       A structured set of tests against a FHIR server or client implementation to
   determine compliance against the FHIR specification.

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param name: Descriptive name for this variable.
       :param defaultValue: A default, hard-coded, or user-defined value for this variable.
       :param description: A free text natural language description of the variable and its purpose.
       :param expression: The FHIRPath expression to evaluate against the fixture body. When variables
   are defined, only one of either expression, headerField or path must be
   specified.
       :param headerField: Will be used to grab the HTTP header field value from the headers that
   sourceId is pointing to.
       :param hint: Displayable text string with hint help information to the user when entering a
   default value.
       :param path: XPath or JSONPath to evaluate against the fixture body.  When variables are
   defined, only one of either expression, headerField or path must be specified.
       :param sourceId: Fixture to evaluate the XPath/JSONPath expression or the headerField  against
   within this variable.


