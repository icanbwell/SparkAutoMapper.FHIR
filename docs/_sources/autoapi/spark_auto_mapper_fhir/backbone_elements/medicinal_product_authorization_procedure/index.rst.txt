:mod:`spark_auto_mapper_fhir.backbone_elements.medicinal_product_authorization_procedure`
=========================================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.medicinal_product_authorization_procedure


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.medicinal_product_authorization_procedure.MedicinalProductAuthorizationProcedure



.. class:: MedicinalProductAuthorizationProcedure(*, id_: Optional[spark_auto_mapper_fhir.fhir_types.string.FhirString] = None, extension: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.extensions.extension_base.ExtensionBase]] = None, modifierExtension: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.extensions.extension_base.ExtensionBase]] = None, identifier: Optional[spark_auto_mapper_fhir.complex_types.identifier.Identifier] = None, type_: spark_auto_mapper_fhir.complex_types.codeable_concept.CodeableConcept[spark_auto_mapper_fhir.value_sets.generic_type.GenericTypeCode], datePeriod: Optional[spark_auto_mapper_fhir.complex_types.period.Period] = None, dateDateTime: Optional[spark_auto_mapper_fhir.fhir_types.date_time.FhirDateTime] = None, application: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.backbone_elements.medicinal_product_authorization_procedure.MedicinalProductAuthorizationProcedure]] = None)


   Bases: :class:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   MedicinalProductAuthorization.Procedure
   The regulatory authorization of a medicinal product.


