:py:mod:`spark_auto_mapper_fhir.backbone_elements.structure_map_group`
======================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.structure_map_group


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.structure_map_group.StructureMapGroup




.. py:class:: StructureMapGroup(*, id_ = None, extension = None, modifierExtension = None, name, extends = None, typeMode, documentation = None, input, rule)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   StructureMap.Group
       A Map of relationships between 2 structures that can be used to transform data.

       A Map of relationships between 2 structures that can be used to transform
   data.

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param name: A unique name for the group for the convenience of human readers.
       :param extends: Another group that this group adds rules to.
       :param typeMode: If this is the default rule set to apply for the source type or this
   combination of types.
       :param documentation: Additional supporting documentation that explains the purpose of the group and
   the types of mappings within it.
       :param input: A name assigned to an instance of data. The instance must be provided when the
   mapping is invoked.
       :param rule: Transform Rule from source to target.


