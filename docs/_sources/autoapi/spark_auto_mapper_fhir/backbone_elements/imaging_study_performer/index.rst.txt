:py:mod:`spark_auto_mapper_fhir.backbone_elements.imaging_study_performer`
==========================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.imaging_study_performer


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.imaging_study_performer.ImagingStudyPerformer




.. py:class:: ImagingStudyPerformer(*, id_ = None, extension = None, modifierExtension = None, function = None, actor)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   ImagingStudy.Performer
       Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.

       Representation of the content produced in a DICOM imaging study. A study
   comprises a set of series, each of which includes a set of Service-Object Pair
   Instances (SOP Instances - images or other data) acquired or produced in a
   common context.  A series is of only one modality (e.g. X-ray, CT, MR,
   ultrasound), but a study may have multiple series of different modalities.

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param function: Distinguishes the type of involvement of the performer in the series.
       :param actor: Indicates who or what performed the series.


