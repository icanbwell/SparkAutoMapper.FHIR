:py:mod:`spark_auto_mapper_fhir.backbone_elements.verification_result_primary_source`
=====================================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.verification_result_primary_source


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.verification_result_primary_source.VerificationResultPrimarySource




.. py:class:: VerificationResultPrimarySource(*, id_ = None, extension = None, modifierExtension = None, who = None, type_ = None, communicationMethod = None, validationStatus = None, validationDate = None, canPushUpdates = None, pushTypeAvailable = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   VerificationResult.PrimarySource
       Describes validation requirements, source(s), status and dates for one or more elements.

       Describes validation requirements, source(s), status and dates for one or more
   elements.

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param who: Reference to the primary source.
       :param type_: Type of primary source (License Board; Primary Education; Continuing
   Education; Postal Service; Relationship owner; Registration Authority; legal
   source; issuing source; authoritative source).
       :param communicationMethod: Method for communicating with the primary source (manual; API; Push).
       :param validationStatus: Status of the validation of the target against the primary source (successful;
   failed; unknown).
       :param validationDate: When the target was validated against the primary source.
       :param canPushUpdates: Ability of the primary source to push updates/alerts (yes; no; undetermined).
       :param pushTypeAvailable: Type of alerts/updates the primary source can send (specific requested
   changes; any changes; as defined by source).


