:py:mod:`spark_auto_mapper_fhir.backbone_elements.verification_result_attestation`
==================================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.verification_result_attestation


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.verification_result_attestation.VerificationResultAttestation




.. py:class:: VerificationResultAttestation(*, id_ = None, extension = None, modifierExtension = None, who = None, onBehalfOf = None, communicationMethod = None, date = None, sourceIdentityCertificate = None, proxyIdentityCertificate = None, proxySignature = None, sourceSignature = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   VerificationResult.Attestation
       Describes validation requirements, source(s), status and dates for one or more elements.

       Describes validation requirements, source(s), status and dates for one or more
   elements.

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param who: The individual or organization attesting to information.
       :param onBehalfOf: When the who is asserting on behalf of another (organization or individual).
       :param communicationMethod: The method by which attested information was submitted/retrieved (manual; API;
   Push).
       :param date: The date the information was attested to.
       :param sourceIdentityCertificate: A digital identity certificate associated with the attestation source.
       :param proxyIdentityCertificate: A digital identity certificate associated with the proxy entity submitting
   attested information on behalf of the attestation source.
       :param proxySignature: Signed assertion by the proxy entity indicating that they have the right to
   submit attested information on behalf of the attestation source.
       :param sourceSignature: Signed assertion by the attestation source that they have attested to the
   information.


