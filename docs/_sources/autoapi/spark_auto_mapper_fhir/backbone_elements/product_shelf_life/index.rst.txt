:py:mod:`spark_auto_mapper_fhir.backbone_elements.product_shelf_life`
=====================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.product_shelf_life


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.product_shelf_life.ProductShelfLife




.. py:class:: ProductShelfLife(*, id_ = None, extension = None, modifierExtension = None, identifier = None, type_, period, specialPrecautionsForStorage = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   ProductShelfLife
       The shelf-life and storage information for a medicinal product item or container can be described using this class.
       If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions

       The shelf-life and storage information for a medicinal product item or
   container can be described using this class.
       If the element is present, it must have a value for at least one of the
   defined elements, an @id referenced from the Narrative, or extensions

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param identifier: Unique identifier for the packaged Medicinal Product.
       :param type_: This describes the shelf life, taking into account various scenarios such as
   shelf life of the packaged Medicinal Product itself, shelf life after
   transformation where necessary and shelf life after the first opening of a
   bottle, etc. The shelf life type shall be specified using an appropriate
   controlled vocabulary The controlled term and the controlled term identifier
   shall be specified.
       :param period: The shelf life time period can be specified using a numerical value for the
   period of time and its unit of time measurement The unit of measurement shall
   be specified in accordance with ISO 11240 and the resulting terminology The
   symbol and the symbol identifier shall be used.
       :param specialPrecautionsForStorage: Special precautions for storage, if any, can be specified using an appropriate
   controlled vocabulary The controlled term and the controlled term identifier
   shall be specified.


