:py:mod:`spark_auto_mapper_fhir.backbone_elements.concept_map_group`
====================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.concept_map_group


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.concept_map_group.ConceptMapGroup




.. py:class:: ConceptMapGroup(*, id_ = None, extension = None, modifierExtension = None, source = None, sourceVersion = None, target = None, targetVersion = None, element, unmapped = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   ConceptMap.Group
       A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.

       A statement of relationships from one set of concepts to one or more other
   concepts - either concepts in code systems, or data element/data element
   concepts, or classes in class models.

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param source: An absolute URI that identifies the source system where the concepts to be
   mapped are defined.
       :param sourceVersion: The specific version of the code system, as determined by the code system
   authority.
       :param target: An absolute URI that identifies the target system that the concepts will be
   mapped to.
       :param targetVersion: The specific version of the code system, as determined by the code system
   authority.
       :param element: Mappings for an individual concept in the source to one or more concepts in
   the target.
       :param unmapped: What to do when there is no mapping for the source concept. "Unmapped" does
   not include codes that are unmatched, and the unmapped element is ignored in a
   code is specified to have equivalence = unmatched.


