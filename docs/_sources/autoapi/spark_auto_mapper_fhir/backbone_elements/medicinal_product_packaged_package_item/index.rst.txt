:py:mod:`spark_auto_mapper_fhir.backbone_elements.medicinal_product_packaged_package_item`
==========================================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.medicinal_product_packaged_package_item


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.medicinal_product_packaged_package_item.MedicinalProductPackagedPackageItem




.. py:class:: MedicinalProductPackagedPackageItem(*, id_ = None, extension = None, modifierExtension = None, identifier = None, type_, quantity, material = None, alternateMaterial = None, device = None, manufacturedItem = None, packageItem = None, physicalCharacteristics = None, otherCharacteristics = None, shelfLifeStorage = None, manufacturer = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   MedicinalProductPackaged.PackageItem
       A medicinal product in a container or package.

       A medicinal product in a container or package.

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param identifier: Including possibly Data Carrier Identifier.
       :param type_: The physical type of the container of the medicine.
       :param quantity: The quantity of this package in the medicinal product, at the current level of
   packaging. The outermost is always 1.
       :param material: Material type of the package item.
       :param alternateMaterial: A possible alternate material for the packaging.
       :param device: A device accompanying a medicinal product.
       :param manufacturedItem: The manufactured item as contained in the packaged medicinal product.
       :param packageItem: Allows containers within containers.
       :param physicalCharacteristics: Dimensions, color etc.
       :param otherCharacteristics: Other codeable characteristics.
       :param shelfLifeStorage: Shelf Life and storage information.
       :param manufacturer: Manufacturer of this Package Item.


