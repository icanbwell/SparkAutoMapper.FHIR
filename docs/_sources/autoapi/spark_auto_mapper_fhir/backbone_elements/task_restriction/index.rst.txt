:mod:`spark_auto_mapper_fhir.backbone_elements.task_restriction`
================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.task_restriction


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.task_restriction.TaskRestriction



.. class:: TaskRestriction(*, id_: Optional[spark_auto_mapper_fhir.fhir_types.string.FhirString] = None, extension: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.extensions.extension_base.ExtensionBase]] = None, modifierExtension: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.extensions.extension_base.ExtensionBase]] = None, repetitions: Optional[spark_auto_mapper_fhir.fhir_types.positive_int.FhirPositiveInt] = None, period: Optional[spark_auto_mapper_fhir.complex_types.period.Period] = None, recipient: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.complex_types.reference.Reference[Union[(spark_auto_mapper_fhir.resources.patient.Patient, spark_auto_mapper_fhir.resources.practitioner.Practitioner, spark_auto_mapper_fhir.resources.practitioner_role.PractitionerRole, spark_auto_mapper_fhir.resources.related_person.RelatedPerson, spark_auto_mapper_fhir.resources.group.Group, spark_auto_mapper_fhir.resources.organization.Organization)]]]] = None)


   Bases: :class:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   Task.Restriction
   A task to be performed.


