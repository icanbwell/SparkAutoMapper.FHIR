:py:mod:`spark_auto_mapper_fhir.backbone_elements.clinical_impression_finding`
==============================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.clinical_impression_finding


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.clinical_impression_finding.ClinicalImpressionFinding




.. py:class:: ClinicalImpressionFinding(*, id_ = None, extension = None, modifierExtension = None, itemCodeableConcept = None, itemReference = None, basis = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   ClinicalImpression.Finding
       A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient's condition. Assessments are often 1:1 with a clinical consultation / encounter,  but this varies greatly depending on the clinical workflow. This resource is called "ClinicalImpression" rather than "ClinicalAssessment" to avoid confusion with the recording of assessment tools such as Apgar score.

       A record of a clinical assessment performed to determine what problem(s) may
   affect the patient and before planning the treatments or management strategies
   that are best to manage a patient's condition. Assessments are often 1:1 with
   a clinical consultation / encounter,  but this varies greatly depending on the
   clinical workflow. This resource is called "ClinicalImpression" rather than
   "ClinicalAssessment" to avoid confusion with the recording of assessment tools
   such as Apgar score.

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param itemCodeableConcept: Specific text or code for finding or diagnosis, which may include ruled-out or
   resolved conditions.
       :param itemReference: Specific reference for finding or diagnosis, which may include ruled-out or
   resolved conditions.
       :param basis: Which investigations support finding or diagnosis.


