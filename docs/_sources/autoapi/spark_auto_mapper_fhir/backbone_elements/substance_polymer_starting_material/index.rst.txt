:mod:`spark_auto_mapper_fhir.backbone_elements.substance_polymer_starting_material`
===================================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.substance_polymer_starting_material


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.substance_polymer_starting_material.SubstancePolymerStartingMaterial



.. class:: SubstancePolymerStartingMaterial(*, id_: Optional[spark_auto_mapper_fhir.fhir_types.string.FhirString] = None, extension: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.extensions.extension_base.ExtensionBase]] = None, modifierExtension: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.extensions.extension_base.ExtensionBase]] = None, material: Optional[spark_auto_mapper_fhir.complex_types.codeable_concept.CodeableConcept[spark_auto_mapper_fhir.value_sets.generic_type.GenericTypeCode]] = None, type_: Optional[spark_auto_mapper_fhir.complex_types.codeable_concept.CodeableConcept[spark_auto_mapper_fhir.value_sets.generic_type.GenericTypeCode]] = None, isDefining: Optional[spark_auto_mapper_fhir.fhir_types.boolean.FhirBoolean] = None, amount: Optional[spark_auto_mapper_fhir.backbone_elements.substance_amount.SubstanceAmount] = None)


   Bases: :class:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   SubstancePolymer.StartingMaterial
   Todo.


