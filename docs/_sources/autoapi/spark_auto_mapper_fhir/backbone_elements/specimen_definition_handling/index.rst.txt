:mod:`spark_auto_mapper_fhir.backbone_elements.specimen_definition_handling`
============================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.specimen_definition_handling


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.specimen_definition_handling.SpecimenDefinitionHandling



.. class:: SpecimenDefinitionHandling(*, id_: Optional[spark_auto_mapper_fhir.fhir_types.string.FhirString] = None, extension: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.extensions.extension_base.ExtensionBase]] = None, modifierExtension: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.extensions.extension_base.ExtensionBase]] = None, temperatureQualifier: Optional[spark_auto_mapper_fhir.complex_types.codeable_concept.CodeableConcept[spark_auto_mapper_fhir.value_sets.handling_condition_set.HandlingConditionSetCode]] = None, temperatureRange: Optional[spark_auto_mapper_fhir.complex_types.range.Range] = None, maxDuration: Optional[spark_auto_mapper_fhir.complex_types.duration.Duration] = None, instruction: Optional[spark_auto_mapper_fhir.fhir_types.string.FhirString] = None)


   Bases: :class:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   SpecimenDefinition.Handling
   A kind of specimen with associated set of requirements.


