:py:mod:`spark_auto_mapper_fhir.backbone_elements.test_script_capability`
=========================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.test_script_capability


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.test_script_capability.TestScriptCapability




.. py:class:: TestScriptCapability(*, id_ = None, extension = None, modifierExtension = None, required, validated, description = None, origin = None, destination = None, link = None, capabilities)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   TestScript.Capability
       A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.

       A structured set of tests against a FHIR server or client implementation to
   determine compliance against the FHIR specification.

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param required: Whether or not the test execution will require the given capabilities of the
   server in order for this test script to execute.
       :param validated: Whether or not the test execution will validate the given capabilities of the
   server in order for this test script to execute.
       :param description: Description of the capabilities that this test script is requiring the server
   to support.
       :param origin: Which origin server these requirements apply to.
       :param destination: Which server these requirements apply to.
       :param link: Links to the FHIR specification that describes this interaction and the
   resources involved in more detail.
       :param capabilities: Minimum capabilities required of server for test script to execute
   successfully.   If server does not meet at a minimum the referenced capability
   statement, then all tests in this script are skipped.


