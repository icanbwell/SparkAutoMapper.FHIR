:py:mod:`spark_auto_mapper_fhir.backbone_elements.audit_event_source`
=====================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.audit_event_source


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.audit_event_source.AuditEventSource




.. py:class:: AuditEventSource(*, id_ = None, extension = None, modifierExtension = None, site = None, observer, type_ = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   AuditEvent.Source
       A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.

       A record of an event made for purposes of maintaining a security log. Typical
   uses include detection of intrusion attempts and monitoring for inappropriate
   usage.

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param site: Logical source location within the healthcare enterprise network.  For
   example, a hospital or other provider location within a multi-entity provider
   group.
       :param observer: Identifier of the source where the event was detected.
       :param type_: Code specifying the type of source where event originated.


