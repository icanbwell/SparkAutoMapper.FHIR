:py:mod:`spark_auto_mapper_fhir.backbone_elements.encounter_hospitalization`
============================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.encounter_hospitalization


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.encounter_hospitalization.EncounterHospitalization




.. py:class:: EncounterHospitalization(*, id_ = None, extension = None, modifierExtension = None, preAdmissionIdentifier = None, origin = None, admitSource = None, reAdmission = None, dietPreference = None, specialCourtesy = None, specialArrangement = None, destination = None, dischargeDisposition = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   Encounter.Hospitalization
       An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.

       An interaction between a patient and healthcare provider(s) for the purpose of
   providing healthcare service(s) or assessing the health status of a patient.

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param preAdmissionIdentifier: Pre-admission identifier.
       :param origin: The location/organization from which the patient came before admission.
       :param admitSource: From where patient was admitted (physician referral, transfer).
       :param reAdmission: Whether this hospitalization is a readmission and why if known.
       :param dietPreference: Diet preferences reported by the patient.
       :param specialCourtesy: Special courtesies (VIP, board member).
       :param specialArrangement: Any special requests that have been made for this hospitalization encounter,
   such as the provision of specific equipment or other things.
       :param destination: Location/organization to which the patient is discharged.
       :param dischargeDisposition: Category or kind of location after discharge.


