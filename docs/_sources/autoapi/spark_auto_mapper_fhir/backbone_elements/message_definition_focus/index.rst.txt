:py:mod:`spark_auto_mapper_fhir.backbone_elements.message_definition_focus`
===========================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.message_definition_focus


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.message_definition_focus.MessageDefinitionFocus




.. py:class:: MessageDefinitionFocus(*, id_ = None, extension = None, modifierExtension = None, code, profile = None, min, max = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   MessageDefinition.Focus
       Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.

       Defines the characteristics of a message that can be shared between systems,
   including the type of event that initiates the message, the content to be
   transmitted and what response(s), if any, are permitted.

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param code: The kind of resource that must be the focus for this message.
       :param profile: A profile that reflects constraints for the focal resource (and potentially
   for related resources).
       :param min: Identifies the minimum number of resources of this type that must be pointed
   to by a message in order for it to be valid against this MessageDefinition.
       :param max: Identifies the maximum number of resources of this type that must be pointed
   to by a message in order for it to be valid against this MessageDefinition.


