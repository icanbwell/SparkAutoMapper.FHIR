:py:mod:`spark_auto_mapper_fhir.backbone_elements.medication_ingredient`
========================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.medication_ingredient


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.medication_ingredient.MedicationIngredient




.. py:class:: MedicationIngredient(*, id_ = None, extension = None, modifierExtension = None, itemCodeableConcept = None, itemReference = None, isActive = None, strength = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   Medication.Ingredient
       This resource is primarily used for the identification and definition of a medication for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.

       This resource is primarily used for the identification and definition of a
   medication for the purposes of prescribing, dispensing, and administering a
   medication as well as for making statements about medication use.

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param itemCodeableConcept: None
       :param itemReference: None
       :param isActive: Indication of whether this ingredient affects the therapeutic action of the
   drug.
       :param strength: Specifies how many (or how much) of the items there are in this Medication.
   For example, 250 mg per tablet.  This is expressed as a ratio where the
   numerator is 250mg and the denominator is 1 tablet.


