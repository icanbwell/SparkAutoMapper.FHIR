:py:mod:`spark_auto_mapper_fhir.backbone_elements.document_reference_content`
=============================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.document_reference_content


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.document_reference_content.DocumentReferenceContent




.. py:class:: DocumentReferenceContent(*, id_ = None, extension = None, modifierExtension = None, attachment, format = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   DocumentReference.Content
       A reference to a document of any kind for any purpose. Provides metadata about the document so that the document can be discovered and managed. The scope of a document is any seralized object with a mime-type, so includes formal patient centric documents (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text.

       A reference to a document of any kind for any purpose. Provides metadata about
   the document so that the document can be discovered and managed. The scope of
   a document is any seralized object with a mime-type, so includes formal
   patient centric documents (CDA), cliical notes, scanned paper, and non-patient
   specific documents like policy text.

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param attachment: The document or URL of the document along with critical metadata to prove
   content has integrity.
       :param format: An identifier of the document encoding, structure, and template that the
   document conforms to beyond the base format indicated in the mimeType.


