:py:mod:`spark_auto_mapper_fhir.backbone_elements.plan_definition_action`
=========================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.plan_definition_action


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.plan_definition_action.PlanDefinitionAction




.. py:class:: PlanDefinitionAction(*, id_ = None, extension = None, modifierExtension = None, prefix = None, title = None, description = None, textEquivalent = None, priority = None, code = None, reason = None, documentation = None, goalId = None, subjectCodeableConcept = None, subjectReference = None, trigger = None, condition = None, input = None, output = None, relatedAction = None, timingDateTime = None, timingAge = None, timingPeriod = None, timingDuration = None, timingRange = None, timingTiming = None, participant = None, type_ = None, groupingBehavior = None, selectionBehavior = None, requiredBehavior = None, precheckBehavior = None, cardinalityBehavior = None, definitionCanonical = None, definitionUri = None, transform = None, dynamicValue = None, action = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   PlanDefinition.Action
       This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.

       This resource allows for the definition of various types of plans as a
   sharable, consumable, and executable artifact. The resource is general enough
   to support the description of a broad range of clinical artifacts such as
   clinical decision support rules, order sets and protocols.

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param prefix: A user-visible prefix for the action.
       :param title: The title of the action displayed to a user.
       :param description: A brief description of the action used to provide a summary to display to the
   user.
       :param textEquivalent: A text equivalent of the action to be performed. This provides a human-
   interpretable description of the action when the definition is consumed by a
   system that might not be capable of interpreting it dynamically.
       :param priority: Indicates how quickly the action should be addressed with respect to other
   actions.
       :param code: A code that provides meaning for the action or action group. For example, a
   section may have a LOINC code for the section of a documentation template.
       :param reason: A description of why this action is necessary or appropriate.
       :param documentation: Didactic or other informational resources associated with the action that can
   be provided to the CDS recipient. Information resources can include inline
   text commentary and links to web resources.
       :param goalId: Identifies goals that this action supports. The reference must be to a goal
   element defined within this plan definition.
       :param subjectCodeableConcept: None
       :param subjectReference: None
       :param trigger: A description of when the action should be triggered.
       :param condition: An expression that describes applicability criteria or start/stop conditions
   for the action.
       :param input: Defines input data requirements for the action.
       :param output: Defines the outputs of the action, if any.
       :param relatedAction: A relationship to another action such as "before" or "30-60 minutes after
   start of".
       :param timingDateTime: None
       :param timingAge: None
       :param timingPeriod: None
       :param timingDuration: None
       :param timingRange: None
       :param timingTiming: None
       :param participant: Indicates who should participate in performing the action described.
       :param type_: The type of action to perform (create, update, remove).
       :param groupingBehavior: Defines the grouping behavior for the action and its children.
       :param selectionBehavior: Defines the selection behavior for the action and its children.
       :param requiredBehavior: Defines the required behavior for the action.
       :param precheckBehavior: Defines whether the action should usually be preselected.
       :param cardinalityBehavior: Defines whether the action can be selected multiple times.
       :param definitionCanonical: None
       :param definitionUri: None
       :param transform: A reference to a StructureMap resource that defines a transform that can be
   executed to produce the intent resource using the ActivityDefinition instance
   as the input.
       :param dynamicValue: Customizations that should be applied to the statically defined resource. For
   example, if the dosage of a medication must be computed based on the patient's
   weight, a customization would be used to specify an expression that calculated
   the weight, and the path on the resource that would contain the result.
       :param action: Sub actions that are contained within the action. The behavior of this action
   determines the functionality of the sub-actions. For example, a selection
   behavior of at-most-one indicates that of the sub-actions, at most one may be
   chosen as part of realizing the action definition.


