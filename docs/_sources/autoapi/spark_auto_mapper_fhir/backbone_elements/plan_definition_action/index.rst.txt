:mod:`spark_auto_mapper_fhir.backbone_elements.plan_definition_action`
======================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.plan_definition_action


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.plan_definition_action.PlanDefinitionAction



.. class:: PlanDefinitionAction(*, id_: Optional[spark_auto_mapper_fhir.fhir_types.string.FhirString] = None, extension: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.extensions.extension_base.ExtensionBase]] = None, modifierExtension: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.extensions.extension_base.ExtensionBase]] = None, prefix: Optional[spark_auto_mapper_fhir.fhir_types.string.FhirString] = None, title: Optional[spark_auto_mapper_fhir.fhir_types.string.FhirString] = None, description: Optional[spark_auto_mapper_fhir.fhir_types.string.FhirString] = None, textEquivalent: Optional[spark_auto_mapper_fhir.fhir_types.string.FhirString] = None, priority: Optional[spark_auto_mapper_fhir.value_sets.request_priority.RequestPriorityCode] = None, code: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.complex_types.codeable_concept.CodeableConcept[spark_auto_mapper_fhir.value_sets.generic_type.GenericTypeCode]]] = None, reason: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.complex_types.codeable_concept.CodeableConcept[spark_auto_mapper_fhir.value_sets.generic_type.GenericTypeCode]]] = None, documentation: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.complex_types.related_artifact.RelatedArtifact]] = None, goalId: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.fhir_types.id.FhirId]] = None, subjectCodeableConcept: Optional[spark_auto_mapper_fhir.complex_types.codeable_concept.CodeableConcept[spark_auto_mapper_fhir.value_sets.subject_type.SubjectTypeCode]] = None, subjectReference: Optional[spark_auto_mapper_fhir.complex_types.reference.Reference[spark_auto_mapper_fhir.resources.group.Group]] = None, trigger: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.complex_types.trigger_definition.TriggerDefinition]] = None, condition: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.backbone_elements.plan_definition_condition.PlanDefinitionCondition]] = None, input: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.complex_types.data_requirement.DataRequirement]] = None, output: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.complex_types.data_requirement.DataRequirement]] = None, relatedAction: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.backbone_elements.plan_definition_related_action.PlanDefinitionRelatedAction]] = None, timingDateTime: Optional[spark_auto_mapper_fhir.fhir_types.date_time.FhirDateTime] = None, timingAge: Optional[spark_auto_mapper_fhir.complex_types.age.Age] = None, timingPeriod: Optional[spark_auto_mapper_fhir.complex_types.period.Period] = None, timingDuration: Optional[spark_auto_mapper_fhir.complex_types.duration.Duration] = None, timingRange: Optional[spark_auto_mapper_fhir.complex_types.range.Range] = None, timingTiming: Optional[spark_auto_mapper_fhir.backbone_elements.timing.Timing] = None, participant: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.backbone_elements.plan_definition_participant.PlanDefinitionParticipant]] = None, type_: Optional[spark_auto_mapper_fhir.complex_types.codeable_concept.CodeableConcept[spark_auto_mapper_fhir.value_sets.action_type.ActionTypeCode]] = None, groupingBehavior: Optional[spark_auto_mapper_fhir.value_sets.action_grouping_behavior.ActionGroupingBehaviorCode] = None, selectionBehavior: Optional[spark_auto_mapper_fhir.value_sets.action_selection_behavior.ActionSelectionBehaviorCode] = None, requiredBehavior: Optional[spark_auto_mapper_fhir.value_sets.action_required_behavior.ActionRequiredBehaviorCode] = None, precheckBehavior: Optional[spark_auto_mapper_fhir.value_sets.action_precheck_behavior.ActionPrecheckBehaviorCode] = None, cardinalityBehavior: Optional[spark_auto_mapper_fhir.value_sets.action_cardinality_behavior.ActionCardinalityBehaviorCode] = None, definitionCanonical: Optional[spark_auto_mapper_fhir.fhir_types.canonical.FhirCanonical] = None, definitionUri: Optional[spark_auto_mapper_fhir.fhir_types.uri.FhirUri] = None, transform: Optional[spark_auto_mapper_fhir.fhir_types.canonical.FhirCanonical] = None, dynamicValue: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.backbone_elements.plan_definition_dynamic_value.PlanDefinitionDynamicValue]] = None, action: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.backbone_elements.plan_definition_action.PlanDefinitionAction]] = None)


   Bases: :class:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   PlanDefinition.Action
   This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.


