:py:mod:`spark_auto_mapper_fhir.backbone_elements.naming_system_unique_id`
==========================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.naming_system_unique_id


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.naming_system_unique_id.NamingSystemUniqueId




.. py:class:: NamingSystemUniqueId(*, id_ = None, extension = None, modifierExtension = None, type_, value, preferred = None, comment = None, period = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   NamingSystem.UniqueId
       A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc.  Represents a "System" used within the Identifier and Coding data types.

       A curated namespace that issues unique symbols within that namespace for the
   identification of concepts, people, devices, etc.  Represents a "System" used
   within the Identifier and Coding data types.

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the element and that modifies the understanding of the element
   in which it is contained and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer can define an extension, there is a set of requirements that SHALL
   be met as part of the definition of the extension. Applications processing a
   resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param type_: Identifies the unique identifier scheme used for this particular identifier.
       :param value: The string that should be sent over the wire to identify the code system or
   identifier system.
       :param preferred: Indicates whether this identifier is the "preferred" identifier of this type.
       :param comment: Notes about the past or intended usage of this identifier.
       :param period: Identifies the period of time over which this identifier is considered
   appropriate to refer to the naming system.  Outside of this window, the
   identifier might be non-deterministic.


