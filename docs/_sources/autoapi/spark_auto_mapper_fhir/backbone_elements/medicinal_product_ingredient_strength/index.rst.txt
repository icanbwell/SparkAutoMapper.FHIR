:mod:`spark_auto_mapper_fhir.backbone_elements.medicinal_product_ingredient_strength`
=====================================================================================

.. py:module:: spark_auto_mapper_fhir.backbone_elements.medicinal_product_ingredient_strength


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.backbone_elements.medicinal_product_ingredient_strength.MedicinalProductIngredientStrength



.. class:: MedicinalProductIngredientStrength(*, id_: Optional[spark_auto_mapper_fhir.fhir_types.string.FhirString] = None, extension: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.extensions.extension_base.ExtensionBase]] = None, modifierExtension: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.extensions.extension_base.ExtensionBase]] = None, presentation: spark_auto_mapper_fhir.complex_types.ratio.Ratio, presentationLowLimit: Optional[spark_auto_mapper_fhir.complex_types.ratio.Ratio] = None, concentration: Optional[spark_auto_mapper_fhir.complex_types.ratio.Ratio] = None, concentrationLowLimit: Optional[spark_auto_mapper_fhir.complex_types.ratio.Ratio] = None, measurementPoint: Optional[spark_auto_mapper_fhir.fhir_types.string.FhirString] = None, country: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.complex_types.codeable_concept.CodeableConcept[spark_auto_mapper_fhir.value_sets.generic_type.GenericTypeCode]]] = None, referenceStrength: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.backbone_elements.medicinal_product_ingredient_reference_strength.MedicinalProductIngredientReferenceStrength]] = None)


   Bases: :class:`spark_auto_mapper_fhir.base_types.fhir_backbone_element_base.FhirBackboneElementBase`

   MedicinalProductIngredient.Strength
   An ingredient of a manufactured item or pharmaceutical product.


