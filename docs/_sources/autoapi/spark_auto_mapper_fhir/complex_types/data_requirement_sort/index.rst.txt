:py:mod:`spark_auto_mapper_fhir.complex_types.data_requirement_sort`
====================================================================

.. py:module:: spark_auto_mapper_fhir.complex_types.data_requirement_sort


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.complex_types.data_requirement_sort.DataRequirementSort




.. py:class:: DataRequirementSort(*, id_ = None, extension = None, path, direction)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_complex_type_base.FhirComplexTypeBase`

   DataRequirement.Sort
   fhir-base.xsd
       Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.
       If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions

       Describes a required data item for evaluation in terms of the type of data,
   and optional code or date-based filters of the data.
       If the element is present, it must have a value for at least one of the
   defined elements, an @id referenced from the Narrative, or extensions

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param path: The attribute of the sort. The specified path must be resolvable from the type
   of the required data. The path is allowed to contain qualifiers (.) to
   traverse sub-elements, as well as indexers ([x]) to traverse multiple-
   cardinality sub-elements. Note that the index must be an integer constant.
       :param direction: The direction of the sort, ascending or descending.

   .. py:method:: get_schema(self, include_extension)



