:mod:`spark_auto_mapper_fhir.complex_types.trigger_definition`
==============================================================

.. py:module:: spark_auto_mapper_fhir.complex_types.trigger_definition


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.complex_types.trigger_definition.TriggerDefinition



.. class:: TriggerDefinition(*, id_: Optional[spark_auto_mapper_fhir.fhir_types.string.FhirString] = None, extension: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.extensions.extension_base.ExtensionBase]] = None, type_: spark_auto_mapper_fhir.value_sets.trigger_type.TriggerTypeCode, name: Optional[spark_auto_mapper_fhir.fhir_types.string.FhirString] = None, timingTiming: Optional[spark_auto_mapper_fhir.backbone_elements.timing.Timing] = None, timingReference: Optional[spark_auto_mapper_fhir.complex_types.reference.Reference[spark_auto_mapper_fhir.resources.schedule.Schedule]] = None, timingDate: Optional[spark_auto_mapper_fhir.fhir_types.date.FhirDate] = None, timingDateTime: Optional[spark_auto_mapper_fhir.fhir_types.date_time.FhirDateTime] = None, data: Optional[spark_auto_mapper_fhir.fhir_types.list.FhirList[spark_auto_mapper_fhir.complex_types.data_requirement.DataRequirement]] = None, condition: Optional[spark_auto_mapper_fhir.complex_types.expression.Expression] = None)


   Bases: :class:`spark_auto_mapper_fhir.base_types.fhir_complex_type_base.FhirComplexTypeBase`

   TriggerDefinition
   fhir-base.xsd
       A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.
       If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions

   .. method:: get_schema(self, include_extension: bool) -> Optional[Union[(pyspark.sql.types.StructType, pyspark.sql.types.DataType)]]



