:py:mod:`spark_auto_mapper_fhir.complex_types.expression`
=========================================================

.. py:module:: spark_auto_mapper_fhir.complex_types.expression


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.complex_types.expression.Expression




.. py:class:: Expression(*, id_ = None, extension = None, description = None, name = None, language, expression = None, reference = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_complex_type_base.FhirComplexTypeBase`

   Expression
   fhir-base.xsd
       A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used.
       If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions

       A expression that is evaluated in a specified context and returns a value. The
   context of use of the expression must specify the context in which the
   expression is evaluated, and how the result of the expression is used.
       If the element is present, it must have a value for at least one of the
   defined elements, an @id referenced from the Narrative, or extensions

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param description: A brief, natural language description of the condition that effectively
   communicates the intended semantics.
       :param name: A short name assigned to the expression to allow for multiple reuse of the
   expression in the context where it is defined.
       :param language: The media type of the language for the expression.
       :param expression: An expression in the specified language that returns a value.
       :param reference: A URI that defines where the expression is found.

   .. py:method:: get_schema(self, include_extension)



