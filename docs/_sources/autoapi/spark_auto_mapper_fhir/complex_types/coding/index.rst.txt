:py:mod:`spark_auto_mapper_fhir.complex_types.coding`
=====================================================

.. py:module:: spark_auto_mapper_fhir.complex_types.coding


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.complex_types.coding.Coding




.. py:class:: Coding(*, id_ = None, extension = None, system = None, version = None, code = None, display = None, userSelected = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_complex_type_base.FhirComplexTypeBase`, :py:obj:`Generic`\ [\ :py:obj:`_T`\ ]

   Coding
   fhir-base.xsd
       A reference to a code defined by a terminology system.
       If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions

       A reference to a code defined by a terminology system.
       If the element is present, it must have a value for at least one of the
   defined elements, an @id referenced from the Narrative, or extensions

       :param id_: None
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the element. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param system: The identification of the code system that defines the meaning of the symbol
   in the code.
       :param version: The version of the code system which was used when choosing this code. Note
   that a well-maintained code system does not need the version reported, because
   the meaning of codes is consistent across versions. However this cannot
   consistently be assured, and when the meaning is not guaranteed to be
   consistent, the version SHOULD be exchanged.
       :param code: A symbol in syntax defined by the system. The symbol may be a predefined code
   or an expression in a syntax defined by the coding system (e.g. post-
   coordination).
       :param display: A representation of the meaning of the code in the system, following the rules
   of the system.
       :param userSelected: Indicates that this coding was chosen by a user directly - e.g. off a pick
   list of available items (codes or displays).

   .. py:method:: get_schema(self, include_extension)



