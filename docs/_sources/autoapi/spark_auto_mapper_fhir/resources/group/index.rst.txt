:py:mod:`spark_auto_mapper_fhir.resources.group`
================================================

.. py:module:: spark_auto_mapper_fhir.resources.group


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.resources.group.Group




.. py:class:: Group(*, id_ = None, meta = None, implicitRules = None, language = None, text = None, contained = None, extension = None, modifierExtension = None, identifier = None, active = None, type_, actual, code = None, name = None, quantity = None, managingEntity = None, characteristic = None, member = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_resource_base.FhirResourceBase`

   Group
   group.xsd
       Represents a defined collection of entities that may be discussed or acted
   upon collectively but which are not expected to act collectively, and are not
   formally or legally recognized; i.e. a collection of entities that isn't an
   Organization.
       If the element is present, it must have either a @value, an @id, or extensions

       Represents a defined collection of entities that may be discussed or acted
   upon collectively but which are not expected to act collectively, and are not
   formally or legally recognized; i.e. a collection of entities that isn't an
   Organization.
       If the element is present, it must have either a @value, an @id, or extensions

       :param id_: The logical id of the resource, as used in the URL for the resource. Once
   assigned, this value never changes.
       :param meta: The metadata about the resource. This is content that is maintained by the
   infrastructure. Changes to the content might not always be associated with
   version changes to the resource.
       :param implicitRules: A reference to a set of rules that were followed when the resource was
   constructed, and which must be understood when processing the content. Often,
   this is a reference to an implementation guide that defines the special rules
   along with other profiles etc.
       :param language: The base language in which the resource is written.
       :param text: A human-readable narrative that contains a summary of the resource and can be
   used to represent the content of the resource to a human. The narrative need
   not encode all the structured data, but is required to contain sufficient
   detail to make it "clinically safe" for a human to just read the narrative.
   Resource definitions may define what content should be represented in the
   narrative to ensure clinical safety.
       :param contained: These resources do not have an independent existence apart from the resource
   that contains them - they cannot be identified independently, and nor can they
   have their own independent transaction scope.
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the resource. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the resource and that modifies the understanding of the element
   that contains it and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer is allowed to define an extension, there is a set of requirements
   that SHALL be met as part of the definition of the extension. Applications
   processing a resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param identifier: A unique business identifier for this group.
       :param active: Indicates whether the record for the group is available for use or is merely
   being retained for historical purposes.
       :param type_: Identifies the broad classification of the kind of resources the group
   includes.
       :param actual: If true, indicates that the resource refers to a specific group of real
   individuals.  If false, the group defines a set of intended individuals.
       :param code: Provides a specific type of resource the group includes; e.g. "cow",
   "syringe", etc.
       :param name: A label assigned to the group for human identification and communication.
       :param quantity: A count of the number of resource instances that are part of the group.
       :param managingEntity: Entity responsible for defining and maintaining Group characteristics and/or
   registered members.
       :param characteristic: Identifies traits whose presence r absence is shared by members of the group.
       :param member: Identifies the resource instances that are members of the group.

   .. py:method:: get_schema(self, include_extension)



