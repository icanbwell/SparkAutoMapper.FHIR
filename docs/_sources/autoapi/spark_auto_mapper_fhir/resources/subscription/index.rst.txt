:py:mod:`spark_auto_mapper_fhir.resources.subscription`
=======================================================

.. py:module:: spark_auto_mapper_fhir.resources.subscription


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.resources.subscription.Subscription




.. py:class:: Subscription(*, id_ = None, meta = None, implicitRules = None, language = None, text = None, contained = None, extension = None, modifierExtension = None, status, contact = None, end = None, reason, criteria, error = None, channel)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_resource_base.FhirResourceBase`

   Subscription
   subscription.xsd
       The subscription resource is used to define a push-based subscription from a
   server to another system. Once a subscription is registered with the server,
   the server checks every resource that is created or updated, and if the
   resource matches the given criteria, it sends a message on the defined
   "channel" so that another system can take an appropriate action.
       If the element is present, it must have either a @value, an @id, or extensions

       The subscription resource is used to define a push-based subscription from a
   server to another system. Once a subscription is registered with the server,
   the server checks every resource that is created or updated, and if the
   resource matches the given criteria, it sends a message on the defined
   "channel" so that another system can take an appropriate action.
       If the element is present, it must have either a @value, an @id, or extensions

       :param id_: The logical id of the resource, as used in the URL for the resource. Once
   assigned, this value never changes.
       :param meta: The metadata about the resource. This is content that is maintained by the
   infrastructure. Changes to the content might not always be associated with
   version changes to the resource.
       :param implicitRules: A reference to a set of rules that were followed when the resource was
   constructed, and which must be understood when processing the content. Often,
   this is a reference to an implementation guide that defines the special rules
   along with other profiles etc.
       :param language: The base language in which the resource is written.
       :param text: A human-readable narrative that contains a summary of the resource and can be
   used to represent the content of the resource to a human. The narrative need
   not encode all the structured data, but is required to contain sufficient
   detail to make it "clinically safe" for a human to just read the narrative.
   Resource definitions may define what content should be represented in the
   narrative to ensure clinical safety.
       :param contained: These resources do not have an independent existence apart from the resource
   that contains them - they cannot be identified independently, and nor can they
   have their own independent transaction scope.
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the resource. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the resource and that modifies the understanding of the element
   that contains it and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer is allowed to define an extension, there is a set of requirements
   that SHALL be met as part of the definition of the extension. Applications
   processing a resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param status: The status of the subscription, which marks the server state for managing the
   subscription.
       :param contact: Contact details for a human to contact about the subscription. The primary use
   of this for system administrator troubleshooting.
       :param end: The time for the server to turn the subscription off.
       :param reason: A description of why this subscription is defined.
       :param criteria: The rules that the server should use to determine when to generate
   notifications for this subscription.
       :param error: A record of the last error that occurred when the server processed a
   notification.
       :param channel: Details where to send notifications when resources are received that meet the
   criteria.

   .. py:method:: get_schema(self, include_extension)



