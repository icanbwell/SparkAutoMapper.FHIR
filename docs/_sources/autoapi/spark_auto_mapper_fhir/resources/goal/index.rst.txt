:py:mod:`spark_auto_mapper_fhir.resources.goal`
===============================================

.. py:module:: spark_auto_mapper_fhir.resources.goal


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.resources.goal.Goal




.. py:class:: Goal(*, id_ = None, meta = None, implicitRules = None, language = None, text = None, contained = None, extension = None, modifierExtension = None, identifier = None, lifecycleStatus, achievementStatus = None, category = None, priority = None, description, subject, startDate = None, startCodeableConcept = None, target = None, statusDate = None, statusReason = None, expressedBy = None, addresses = None, note = None, outcomeCode = None, outcomeReference = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_resource_base.FhirResourceBase`

   Goal
   goal.xsd
       Describes the intended objective(s) for a patient, group or organization care,
   for example, weight loss, restoring an activity of daily living, obtaining
   herd immunity via immunization, meeting a process improvement objective, etc.
       If the element is present, it must have either a @value, an @id, or extensions

       Describes the intended objective(s) for a patient, group or organization care,
   for example, weight loss, restoring an activity of daily living, obtaining
   herd immunity via immunization, meeting a process improvement objective, etc.
       If the element is present, it must have either a @value, an @id, or extensions

       :param id_: The logical id of the resource, as used in the URL for the resource. Once
   assigned, this value never changes.
       :param meta: The metadata about the resource. This is content that is maintained by the
   infrastructure. Changes to the content might not always be associated with
   version changes to the resource.
       :param implicitRules: A reference to a set of rules that were followed when the resource was
   constructed, and which must be understood when processing the content. Often,
   this is a reference to an implementation guide that defines the special rules
   along with other profiles etc.
       :param language: The base language in which the resource is written.
       :param text: A human-readable narrative that contains a summary of the resource and can be
   used to represent the content of the resource to a human. The narrative need
   not encode all the structured data, but is required to contain sufficient
   detail to make it "clinically safe" for a human to just read the narrative.
   Resource definitions may define what content should be represented in the
   narrative to ensure clinical safety.
       :param contained: These resources do not have an independent existence apart from the resource
   that contains them - they cannot be identified independently, and nor can they
   have their own independent transaction scope.
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the resource. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the resource and that modifies the understanding of the element
   that contains it and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer is allowed to define an extension, there is a set of requirements
   that SHALL be met as part of the definition of the extension. Applications
   processing a resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param identifier: Business identifiers assigned to this goal by the performer or other systems
   which remain constant as the resource is updated and propagates from server to
   server.
       :param lifecycleStatus: The state of the goal throughout its lifecycle.
       :param achievementStatus: Describes the progression, or lack thereof, towards the goal against the
   target.
       :param category: Indicates a category the goal falls within.
       :param priority: Identifies the mutually agreed level of importance associated with
   reaching/sustaining the goal.
       :param description: Human-readable and/or coded description of a specific desired objective of
   care, such as "control blood pressure" or "negotiate an obstacle course" or
   "dance with child at wedding".
       :param subject: Identifies the patient, group or organization for whom the goal is being
   established.
       :param startDate: None
       :param startCodeableConcept: None
       :param target: Indicates what should be done by when.
       :param statusDate: Identifies when the current status.  I.e. When initially created, when
   achieved, when cancelled, etc.
       :param statusReason: Captures the reason for the current status.
       :param expressedBy: Indicates whose goal this is - patient goal, practitioner goal, etc.
       :param addresses: The identified conditions and other health record elements that are intended
   to be addressed by the goal.
       :param note: Any comments related to the goal.
       :param outcomeCode: Identifies the change (or lack of change) at the point when the status of the
   goal is assessed.
       :param outcomeReference: Details of what's changed (or not changed).

   .. py:method:: get_schema(self, include_extension)



