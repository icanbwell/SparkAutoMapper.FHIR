:py:mod:`spark_auto_mapper_fhir.resources.invoice`
==================================================

.. py:module:: spark_auto_mapper_fhir.resources.invoice


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.resources.invoice.Invoice




.. py:class:: Invoice(*, id_ = None, meta = None, implicitRules = None, language = None, text = None, contained = None, extension = None, modifierExtension = None, identifier = None, status, cancelledReason = None, type_ = None, subject = None, recipient = None, date = None, participant = None, issuer = None, account = None, lineItem = None, totalPriceComponent = None, totalNet = None, totalGross = None, paymentTerms = None, note = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_resource_base.FhirResourceBase`

   Invoice
   invoice.xsd
       Invoice containing collected ChargeItems from an Account with calculated
   individual and total price for Billing purpose.
       If the element is present, it must have either a @value, an @id, or extensions

       Invoice containing collected ChargeItems from an Account with calculated
   individual and total price for Billing purpose.
       If the element is present, it must have either a @value, an @id, or extensions

       :param id_: The logical id of the resource, as used in the URL for the resource. Once
   assigned, this value never changes.
       :param meta: The metadata about the resource. This is content that is maintained by the
   infrastructure. Changes to the content might not always be associated with
   version changes to the resource.
       :param implicitRules: A reference to a set of rules that were followed when the resource was
   constructed, and which must be understood when processing the content. Often,
   this is a reference to an implementation guide that defines the special rules
   along with other profiles etc.
       :param language: The base language in which the resource is written.
       :param text: A human-readable narrative that contains a summary of the resource and can be
   used to represent the content of the resource to a human. The narrative need
   not encode all the structured data, but is required to contain sufficient
   detail to make it "clinically safe" for a human to just read the narrative.
   Resource definitions may define what content should be represented in the
   narrative to ensure clinical safety.
       :param contained: These resources do not have an independent existence apart from the resource
   that contains them - they cannot be identified independently, and nor can they
   have their own independent transaction scope.
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the resource. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the resource and that modifies the understanding of the element
   that contains it and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer is allowed to define an extension, there is a set of requirements
   that SHALL be met as part of the definition of the extension. Applications
   processing a resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param identifier: Identifier of this Invoice, often used for reference in correspondence about
   this invoice or for tracking of payments.
       :param status: The current state of the Invoice.
       :param cancelledReason: In case of Invoice cancellation a reason must be given (entered in error,
   superseded by corrected invoice etc.).
       :param type_: Type of Invoice depending on domain, realm an usage (e.g. internal/external,
   dental, preliminary).
       :param subject: The individual or set of individuals receiving the goods and services billed
   in this invoice.
       :param recipient: The individual or Organization responsible for balancing of this invoice.
       :param date: Date/time(s) of when this Invoice was posted.
       :param participant: Indicates who or what performed or participated in the charged service.
       :param issuer: The organizationissuing the Invoice.
       :param account: Account which is supposed to be balanced with this Invoice.
       :param lineItem: Each line item represents one charge for goods and services rendered. Details
   such as date, code and amount are found in the referenced ChargeItem resource.
       :param totalPriceComponent: The total amount for the Invoice may be calculated as the sum of the line
   items with surcharges/deductions that apply in certain conditions.  The
   priceComponent element can be used to offer transparency to the recipient of
   the Invoice of how the total price was calculated.
       :param totalNet: Invoice total , taxes excluded.
       :param totalGross: Invoice total, tax included.
       :param paymentTerms: Payment details such as banking details, period of payment, deductibles,
   methods of payment.
       :param note: Comments made about the invoice by the issuer, subject, or other participants.

   .. py:method:: get_schema(self, include_extension)



