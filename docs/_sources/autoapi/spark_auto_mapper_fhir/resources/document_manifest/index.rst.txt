:py:mod:`spark_auto_mapper_fhir.resources.document_manifest`
============================================================

.. py:module:: spark_auto_mapper_fhir.resources.document_manifest


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.resources.document_manifest.DocumentManifest




.. py:class:: DocumentManifest(*, id_ = None, meta = None, implicitRules = None, language = None, text = None, contained = None, extension = None, modifierExtension = None, masterIdentifier = None, identifier = None, status, type_ = None, subject = None, created = None, author = None, recipient = None, source = None, description = None, content, related = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_resource_base.FhirResourceBase`

   DocumentManifest
   documentmanifest.xsd
       A collection of documents compiled for a purpose together with metadata that
   applies to the collection.
       If the element is present, it must have either a @value, an @id, or extensions

       A collection of documents compiled for a purpose together with metadata that
   applies to the collection.
       If the element is present, it must have either a @value, an @id, or extensions

       :param id_: The logical id of the resource, as used in the URL for the resource. Once
   assigned, this value never changes.
       :param meta: The metadata about the resource. This is content that is maintained by the
   infrastructure. Changes to the content might not always be associated with
   version changes to the resource.
       :param implicitRules: A reference to a set of rules that were followed when the resource was
   constructed, and which must be understood when processing the content. Often,
   this is a reference to an implementation guide that defines the special rules
   along with other profiles etc.
       :param language: The base language in which the resource is written.
       :param text: A human-readable narrative that contains a summary of the resource and can be
   used to represent the content of the resource to a human. The narrative need
   not encode all the structured data, but is required to contain sufficient
   detail to make it "clinically safe" for a human to just read the narrative.
   Resource definitions may define what content should be represented in the
   narrative to ensure clinical safety.
       :param contained: These resources do not have an independent existence apart from the resource
   that contains them - they cannot be identified independently, and nor can they
   have their own independent transaction scope.
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the resource. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the resource and that modifies the understanding of the element
   that contains it and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer is allowed to define an extension, there is a set of requirements
   that SHALL be met as part of the definition of the extension. Applications
   processing a resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param masterIdentifier: A single identifier that uniquely identifies this manifest. Principally used
   to refer to the manifest in non-FHIR contexts.
       :param identifier: Other identifiers associated with the document manifest, including version
   independent  identifiers.
       :param status: The status of this document manifest.
       :param type_: The code specifying the type of clinical activity that resulted in placing the
   associated content into the DocumentManifest.
       :param subject: Who or what the set of documents is about. The documents can be about a
   person, (patient or healthcare practitioner), a device (i.e. machine) or even
   a group of subjects (such as a document about a herd of farm animals, or a set
   of patients that share a common exposure). If the documents cross more than
   one subject, then more than one subject is allowed here (unusual use case).
       :param created: When the document manifest was created for submission to the server (not
   necessarily the same thing as the actual resource last modified time, since it
   may be modified, replicated, etc.).
       :param author: Identifies who is the author of the manifest. Manifest author is not
   necessarly the author of the references included.
       :param recipient: A patient, practitioner, or organization for which this set of documents is
   intended.
       :param source: Identifies the source system, application, or software that produced the
   document manifest.
       :param description: Human-readable description of the source document. This is sometimes known as
   the "title".
       :param content: The list of Resources that consist of the parts of this manifest.
       :param related: Related identifiers or resources associated with the DocumentManifest.

   .. py:method:: get_schema(self, include_extension)



