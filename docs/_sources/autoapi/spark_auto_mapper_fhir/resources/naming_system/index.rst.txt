:py:mod:`spark_auto_mapper_fhir.resources.naming_system`
========================================================

.. py:module:: spark_auto_mapper_fhir.resources.naming_system


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.resources.naming_system.NamingSystem




.. py:class:: NamingSystem(*, id_ = None, meta = None, implicitRules = None, language = None, text = None, contained = None, extension = None, modifierExtension = None, name, status, kind, date, publisher = None, contact = None, responsible = None, type_ = None, description = None, useContext = None, jurisdiction = None, usage = None, uniqueId)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_resource_base.FhirResourceBase`

   NamingSystem
   namingsystem.xsd
       A curated namespace that issues unique symbols within that namespace for the
   identification of concepts, people, devices, etc.  Represents a "System" used
   within the Identifier and Coding data types.
       If the element is present, it must have either a @value, an @id, or extensions

       A curated namespace that issues unique symbols within that namespace for the
   identification of concepts, people, devices, etc.  Represents a "System" used
   within the Identifier and Coding data types.
       If the element is present, it must have either a @value, an @id, or extensions

       :param id_: The logical id of the resource, as used in the URL for the resource. Once
   assigned, this value never changes.
       :param meta: The metadata about the resource. This is content that is maintained by the
   infrastructure. Changes to the content might not always be associated with
   version changes to the resource.
       :param implicitRules: A reference to a set of rules that were followed when the resource was
   constructed, and which must be understood when processing the content. Often,
   this is a reference to an implementation guide that defines the special rules
   along with other profiles etc.
       :param language: The base language in which the resource is written.
       :param text: A human-readable narrative that contains a summary of the resource and can be
   used to represent the content of the resource to a human. The narrative need
   not encode all the structured data, but is required to contain sufficient
   detail to make it "clinically safe" for a human to just read the narrative.
   Resource definitions may define what content should be represented in the
   narrative to ensure clinical safety.
       :param contained: These resources do not have an independent existence apart from the resource
   that contains them - they cannot be identified independently, and nor can they
   have their own independent transaction scope.
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the resource. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the resource and that modifies the understanding of the element
   that contains it and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer is allowed to define an extension, there is a set of requirements
   that SHALL be met as part of the definition of the extension. Applications
   processing a resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param name: A natural language name identifying the naming system. This name should be
   usable as an identifier for the module by machine processing applications such
   as code generation.
       :param status: The status of this naming system. Enables tracking the life-cycle of the
   content.
       :param kind: Indicates the purpose for the naming system - what kinds of things does it
   make unique?
       :param date: The date  (and optionally time) when the naming system was published. The date
   must change when the business version changes and it must change if the status
   code changes. In addition, it should change when the substantive content of
   the naming system changes.
       :param publisher: The name of the organization or individual that published the naming system.
       :param contact: Contact details to assist a user in finding and communicating with the
   publisher.
       :param responsible: The name of the organization that is responsible for issuing identifiers or
   codes for this namespace and ensuring their non-collision.
       :param type_: Categorizes a naming system for easier search by grouping related naming
   systems.
       :param description: A free text natural language description of the naming system from a
   consumer's perspective. Details about what the namespace identifies including
   scope, granularity, version labeling, etc.
       :param useContext: The content was developed with a focus and intent of supporting the contexts
   that are listed. These contexts may be general categories (gender, age, ...)
   or may be references to specific programs (insurance plans, studies, ...) and
   may be used to assist with indexing and searching for appropriate naming
   system instances.
       :param jurisdiction: A legal or geographic region in which the naming system is intended to be
   used.
       :param usage: Provides guidance on the use of the namespace, including the handling of
   formatting characters, use of upper vs. lower case, etc.
       :param uniqueId: Indicates how the system may be identified when referenced in electronic
   exchange.

   .. py:method:: get_schema(self, include_extension)



