:py:mod:`spark_auto_mapper_fhir.resources.provenance`
=====================================================

.. py:module:: spark_auto_mapper_fhir.resources.provenance


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.resources.provenance.Provenance




.. py:class:: Provenance(*, id_ = None, meta = None, implicitRules = None, language = None, text = None, contained = None, extension = None, modifierExtension = None, target, occurredPeriod = None, occurredDateTime = None, recorded, policy = None, location = None, reason = None, activity = None, agent, entity = None, signature = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_resource_base.FhirResourceBase`

   Provenance
   provenance.xsd
       Provenance of a resource is a record that describes entities and processes
   involved in producing and delivering or otherwise influencing that resource.
   Provenance provides a critical foundation for assessing authenticity, enabling
   trust, and allowing reproducibility. Provenance assertions are a form of
   contextual metadata and can themselves become important records with their own
   provenance. Provenance statement indicates clinical significance in terms of
   confidence in authenticity, reliability, and trustworthiness, integrity, and
   stage in lifecycle (e.g. Document Completion - has the artifact been legally
   authenticated), all of which may impact security, privacy, and trust policies.
       If the element is present, it must have either a @value, an @id, or extensions

       Provenance of a resource is a record that describes entities and processes
   involved in producing and delivering or otherwise influencing that resource.
   Provenance provides a critical foundation for assessing authenticity, enabling
   trust, and allowing reproducibility. Provenance assertions are a form of
   contextual metadata and can themselves become important records with their own
   provenance. Provenance statement indicates clinical significance in terms of
   confidence in authenticity, reliability, and trustworthiness, integrity, and
   stage in lifecycle (e.g. Document Completion - has the artifact been legally
   authenticated), all of which may impact security, privacy, and trust policies.
       If the element is present, it must have either a @value, an @id, or extensions

       :param id_: The logical id of the resource, as used in the URL for the resource. Once
   assigned, this value never changes.
       :param meta: The metadata about the resource. This is content that is maintained by the
   infrastructure. Changes to the content might not always be associated with
   version changes to the resource.
       :param implicitRules: A reference to a set of rules that were followed when the resource was
   constructed, and which must be understood when processing the content. Often,
   this is a reference to an implementation guide that defines the special rules
   along with other profiles etc.
       :param language: The base language in which the resource is written.
       :param text: A human-readable narrative that contains a summary of the resource and can be
   used to represent the content of the resource to a human. The narrative need
   not encode all the structured data, but is required to contain sufficient
   detail to make it "clinically safe" for a human to just read the narrative.
   Resource definitions may define what content should be represented in the
   narrative to ensure clinical safety.
       :param contained: These resources do not have an independent existence apart from the resource
   that contains them - they cannot be identified independently, and nor can they
   have their own independent transaction scope.
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the resource. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the resource and that modifies the understanding of the element
   that contains it and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer is allowed to define an extension, there is a set of requirements
   that SHALL be met as part of the definition of the extension. Applications
   processing a resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param target: The Reference(s) that were generated or updated by  the activity described in
   this resource. A provenance can point to more than one target if multiple
   resources were created/updated by the same activity.
       :param occurredPeriod: None
       :param occurredDateTime: None
       :param recorded: The instant of time at which the activity was recorded.
       :param policy: Policy or plan the activity was defined by. Typically, a single activity may
   have multiple applicable policy documents, such as patient consent, guarantor
   funding, etc.
       :param location: Where the activity occurred, if relevant.
       :param reason: The reason that the activity was taking place.
       :param activity: An activity is something that occurs over a period of time and acts upon or
   with entities; it may include consuming, processing, transforming, modifying,
   relocating, using, or generating entities.
       :param agent: An actor taking a role in an activity  for which it can be assigned some
   degree of responsibility for the activity taking place.
       :param entity: An entity used in this activity.
       :param signature: A digital signature on the target Reference(s). The signer should match a
   Provenance.agent. The purpose of the signature is indicated.

   .. py:method:: get_schema(self, include_extension)



