:py:mod:`spark_auto_mapper_fhir.resources.encounter`
====================================================

.. py:module:: spark_auto_mapper_fhir.resources.encounter


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.resources.encounter.Encounter




.. py:class:: Encounter(*, id_ = None, meta = None, implicitRules = None, language = None, text = None, contained = None, extension = None, modifierExtension = None, identifier = None, status, statusHistory = None, class_, classHistory = None, type_ = None, serviceType = None, priority = None, subject = None, episodeOfCare = None, basedOn = None, participant = None, appointment = None, period = None, length = None, reasonCode = None, reasonReference = None, diagnosis = None, account = None, hospitalization = None, location = None, serviceProvider = None, partOf = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_resource_base.FhirResourceBase`

   Encounter
   encounter.xsd
       An interaction between a patient and healthcare provider(s) for the purpose of
   providing healthcare service(s) or assessing the health status of a patient.
       If the element is present, it must have either a @value, an @id, or extensions

       An interaction between a patient and healthcare provider(s) for the purpose of
   providing healthcare service(s) or assessing the health status of a patient.
       If the element is present, it must have either a @value, an @id, or extensions

       :param id_: The logical id of the resource, as used in the URL for the resource. Once
   assigned, this value never changes.
       :param meta: The metadata about the resource. This is content that is maintained by the
   infrastructure. Changes to the content might not always be associated with
   version changes to the resource.
       :param implicitRules: A reference to a set of rules that were followed when the resource was
   constructed, and which must be understood when processing the content. Often,
   this is a reference to an implementation guide that defines the special rules
   along with other profiles etc.
       :param language: The base language in which the resource is written.
       :param text: A human-readable narrative that contains a summary of the resource and can be
   used to represent the content of the resource to a human. The narrative need
   not encode all the structured data, but is required to contain sufficient
   detail to make it "clinically safe" for a human to just read the narrative.
   Resource definitions may define what content should be represented in the
   narrative to ensure clinical safety.
       :param contained: These resources do not have an independent existence apart from the resource
   that contains them - they cannot be identified independently, and nor can they
   have their own independent transaction scope.
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the resource. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the resource and that modifies the understanding of the element
   that contains it and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer is allowed to define an extension, there is a set of requirements
   that SHALL be met as part of the definition of the extension. Applications
   processing a resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param identifier: Identifier(s) by which this encounter is known.
       :param status: planned | arrived | triaged | in-progress | onleave | finished | cancelled +.
       :param statusHistory: The status history permits the encounter resource to contain the status
   history without needing to read through the historical versions of the
   resource, or even have the server store them.
       :param class_: Concepts representing classification of patient encounter such as ambulatory
   (outpatient), inpatient, emergency, home health or others due to local
   variations.
       :param classHistory: The class history permits the tracking of the encounters transitions without
   needing to go  through the resource history.  This would be used for a case
   where an admission starts of as an emergency encounter, then transitions into
   an inpatient scenario. Doing this and not restarting a new encounter ensures
   that any lab/diagnostic results can more easily follow the patient and not
   require re-processing and not get lost or cancelled during a kind of discharge
   from emergency to inpatient.
       :param type_: Specific type of encounter (e.g. e-mail consultation, surgical day-care,
   skilled nursing, rehabilitation).
       :param serviceType: Broad categorization of the service that is to be provided (e.g. cardiology).
       :param priority: Indicates the urgency of the encounter.
       :param subject: The patient or group present at the encounter.
       :param episodeOfCare: Where a specific encounter should be classified as a part of a specific
   episode(s) of care this field should be used. This association can facilitate
   grouping of related encounters together for a specific purpose, such as
   government reporting, issue tracking, association via a common problem.  The
   association is recorded on the encounter as these are typically created after
   the episode of care and grouped on entry rather than editing the episode of
   care to append another encounter to it (the episode of care could span years).
       :param basedOn: The request this encounter satisfies (e.g. incoming referral or procedure
   request).
       :param participant: The list of people responsible for providing the service.
       :param appointment: The appointment that scheduled this encounter.
       :param period: The start and end time of the encounter.
       :param length: Quantity of time the encounter lasted. This excludes the time during leaves of
   absence.
       :param reasonCode: Reason the encounter takes place, expressed as a code. For admissions, this
   can be used for a coded admission diagnosis.
       :param reasonReference: Reason the encounter takes place, expressed as a code. For admissions, this
   can be used for a coded admission diagnosis.
       :param diagnosis: The list of diagnosis relevant to this encounter.
       :param account: The set of accounts that may be used for billing for this Encounter.
       :param hospitalization: Details about the admission to a healthcare service.
       :param location: List of locations where  the patient has been during this encounter.
       :param serviceProvider: The organization that is primarily responsible for this Encounter's services.
   This MAY be the same as the organization on the Patient record, however it
   could be different, such as if the actor performing the services was from an
   external organization (which may be billed seperately) for an external
   consultation.  Refer to the example bundle showing an abbreviated set of
   Encounters for a colonoscopy.
       :param partOf: Another Encounter of which this encounter is a part of (administratively or in
   time).

   .. py:method:: get_schema(self, include_extension)



