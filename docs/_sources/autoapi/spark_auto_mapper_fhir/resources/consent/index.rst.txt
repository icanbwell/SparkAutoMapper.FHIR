:py:mod:`spark_auto_mapper_fhir.resources.consent`
==================================================

.. py:module:: spark_auto_mapper_fhir.resources.consent


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.resources.consent.Consent




.. py:class:: Consent(*, id_ = None, meta = None, implicitRules = None, language = None, text = None, contained = None, extension = None, modifierExtension = None, identifier = None, status, scope, category, patient = None, dateTime = None, performer = None, organization = None, sourceAttachment = None, sourceReference = None, policy = None, policyRule = None, verification = None, provision = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_resource_base.FhirResourceBase`

   Consent
   consent.xsd
       A record of a healthcare consumer’s  choices, which permits or denies
   identified recipient(s) or recipient role(s) to perform one or more actions
   within a given policy context, for specific purposes and periods of time.
       If the element is present, it must have either a @value, an @id, or extensions

       A record of a healthcare consumer’s  choices, which permits or denies
   identified recipient(s) or recipient role(s) to perform one or more actions
   within a given policy context, for specific purposes and periods of time.
       If the element is present, it must have either a @value, an @id, or extensions

       :param id_: The logical id of the resource, as used in the URL for the resource. Once
   assigned, this value never changes.
       :param meta: The metadata about the resource. This is content that is maintained by the
   infrastructure. Changes to the content might not always be associated with
   version changes to the resource.
       :param implicitRules: A reference to a set of rules that were followed when the resource was
   constructed, and which must be understood when processing the content. Often,
   this is a reference to an implementation guide that defines the special rules
   along with other profiles etc.
       :param language: The base language in which the resource is written.
       :param text: A human-readable narrative that contains a summary of the resource and can be
   used to represent the content of the resource to a human. The narrative need
   not encode all the structured data, but is required to contain sufficient
   detail to make it "clinically safe" for a human to just read the narrative.
   Resource definitions may define what content should be represented in the
   narrative to ensure clinical safety.
       :param contained: These resources do not have an independent existence apart from the resource
   that contains them - they cannot be identified independently, and nor can they
   have their own independent transaction scope.
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the resource. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the resource and that modifies the understanding of the element
   that contains it and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer is allowed to define an extension, there is a set of requirements
   that SHALL be met as part of the definition of the extension. Applications
   processing a resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param identifier: Unique identifier for this copy of the Consent Statement.
       :param status: Indicates the current state of this consent.
       :param scope: A selector of the type of consent being presented: ADR, Privacy, Treatment,
   Research.  This list is now extensible.
       :param category: A classification of the type of consents found in the statement. This element
   supports indexing and retrieval of consent statements.
       :param patient: The patient/healthcare consumer to whom this consent applies.
       :param dateTime: When this  Consent was issued / created / indexed.
       :param performer: Either the Grantor, which is the entity responsible for granting the rights
   listed in a Consent Directive or the Grantee, which is the entity responsible
   for complying with the Consent Directive, including any obligations or
   limitations on authorizations and enforcement of prohibitions.
       :param organization: The organization that manages the consent, and the framework within which it
   is executed.
       :param sourceAttachment: None
       :param sourceReference: None
       :param policy: The references to the policies that are included in this consent scope.
   Policies may be organizational, but are often defined jurisdictionally, or in
   law.
       :param policyRule: A reference to the specific base computable regulation or policy.
       :param verification: Whether a treatment instruction (e.g. artificial respiration yes or no) was
   verified with the patient, his/her family or another authorized person.
       :param provision: An exception to the base policy of this consent. An exception can be an
   addition or removal of access permissions.

   .. py:method:: get_schema(self, include_extension)



