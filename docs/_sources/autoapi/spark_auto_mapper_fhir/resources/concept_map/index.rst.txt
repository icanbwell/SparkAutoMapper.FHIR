:py:mod:`spark_auto_mapper_fhir.resources.concept_map`
======================================================

.. py:module:: spark_auto_mapper_fhir.resources.concept_map


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.resources.concept_map.ConceptMap




.. py:class:: ConceptMap(*, id_ = None, meta = None, implicitRules = None, language = None, text = None, contained = None, extension = None, modifierExtension = None, url = None, identifier = None, version = None, name = None, title = None, status, experimental = None, date = None, publisher = None, contact = None, description = None, useContext = None, jurisdiction = None, purpose = None, copyright = None, sourceUri = None, sourceCanonical = None, targetUri = None, targetCanonical = None, group = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_resource_base.FhirResourceBase`

   ConceptMap
   conceptmap.xsd
       A statement of relationships from one set of concepts to one or more other
   concepts - either concepts in code systems, or data element/data element
   concepts, or classes in class models.
       If the element is present, it must have either a @value, an @id, or extensions

       A statement of relationships from one set of concepts to one or more other
   concepts - either concepts in code systems, or data element/data element
   concepts, or classes in class models.
       If the element is present, it must have either a @value, an @id, or extensions

       :param id_: The logical id of the resource, as used in the URL for the resource. Once
   assigned, this value never changes.
       :param meta: The metadata about the resource. This is content that is maintained by the
   infrastructure. Changes to the content might not always be associated with
   version changes to the resource.
       :param implicitRules: A reference to a set of rules that were followed when the resource was
   constructed, and which must be understood when processing the content. Often,
   this is a reference to an implementation guide that defines the special rules
   along with other profiles etc.
       :param language: The base language in which the resource is written.
       :param text: A human-readable narrative that contains a summary of the resource and can be
   used to represent the content of the resource to a human. The narrative need
   not encode all the structured data, but is required to contain sufficient
   detail to make it "clinically safe" for a human to just read the narrative.
   Resource definitions may define what content should be represented in the
   narrative to ensure clinical safety.
       :param contained: These resources do not have an independent existence apart from the resource
   that contains them - they cannot be identified independently, and nor can they
   have their own independent transaction scope.
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the resource. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the resource and that modifies the understanding of the element
   that contains it and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer is allowed to define an extension, there is a set of requirements
   that SHALL be met as part of the definition of the extension. Applications
   processing a resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param url: An absolute URI that is used to identify this concept map when it is
   referenced in a specification, model, design or an instance; also called its
   canonical identifier. This SHOULD be globally unique and SHOULD be a literal
   address at which at which an authoritative instance of this concept map is (or
   will be) published. This URL can be the target of a canonical reference. It
   SHALL remain the same when the concept map is stored on different servers.
       :param identifier: A formal identifier that is used to identify this concept map when it is
   represented in other formats, or referenced in a specification, model, design
   or an instance.
       :param version: The identifier that is used to identify this version of the concept map when
   it is referenced in a specification, model, design or instance. This is an
   arbitrary value managed by the concept map author and is not expected to be
   globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a
   managed version is not available. There is also no expectation that versions
   can be placed in a lexicographical sequence.
       :param name: A natural language name identifying the concept map. This name should be
   usable as an identifier for the module by machine processing applications such
   as code generation.
       :param title: A short, descriptive, user-friendly title for the concept map.
       :param status: The status of this concept map. Enables tracking the life-cycle of the
   content.
       :param experimental: A Boolean value to indicate that this concept map is authored for testing
   purposes (or education/evaluation/marketing) and is not intended to be used
   for genuine usage.
       :param date: The date  (and optionally time) when the concept map was published. The date
   must change when the business version changes and it must change if the status
   code changes. In addition, it should change when the substantive content of
   the concept map changes.
       :param publisher: The name of the organization or individual that published the concept map.
       :param contact: Contact details to assist a user in finding and communicating with the
   publisher.
       :param description: A free text natural language description of the concept map from a consumer's
   perspective.
       :param useContext: The content was developed with a focus and intent of supporting the contexts
   that are listed. These contexts may be general categories (gender, age, ...)
   or may be references to specific programs (insurance plans, studies, ...) and
   may be used to assist with indexing and searching for appropriate concept map
   instances.
       :param jurisdiction: A legal or geographic region in which the concept map is intended to be used.
       :param purpose: Explanation of why this concept map is needed and why it has been designed as
   it has.
       :param copyright: A copyright statement relating to the concept map and/or its contents.
   Copyright statements are generally legal restrictions on the use and
   publishing of the concept map.
       :param sourceUri: None
       :param sourceCanonical: None
       :param targetUri: None
       :param targetCanonical: None
       :param group: A group of mappings that all have the same source and target system.

   .. py:method:: get_schema(self, include_extension)



