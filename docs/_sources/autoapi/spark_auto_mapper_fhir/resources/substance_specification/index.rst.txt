:py:mod:`spark_auto_mapper_fhir.resources.substance_specification`
==================================================================

.. py:module:: spark_auto_mapper_fhir.resources.substance_specification


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.resources.substance_specification.SubstanceSpecification




.. py:class:: SubstanceSpecification(*, id_ = None, meta = None, implicitRules = None, language = None, text = None, contained = None, extension = None, modifierExtension = None, identifier = None, type_ = None, status = None, domain = None, description = None, source = None, comment = None, moiety = None, property = None, referenceInformation = None, structure = None, code = None, name = None, molecularWeight = None, relationship = None, nucleicAcid = None, polymer = None, protein = None, sourceMaterial = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_resource_base.FhirResourceBase`

   SubstanceSpecification
   substancespecification.xsd
       The detailed description of a substance, typically at a level beyond what is
   used for prescribing.
       If the element is present, it must have either a @value, an @id, or extensions

       The detailed description of a substance, typically at a level beyond what is
   used for prescribing.
       If the element is present, it must have either a @value, an @id, or extensions

       :param id_: The logical id of the resource, as used in the URL for the resource. Once
   assigned, this value never changes.
       :param meta: The metadata about the resource. This is content that is maintained by the
   infrastructure. Changes to the content might not always be associated with
   version changes to the resource.
       :param implicitRules: A reference to a set of rules that were followed when the resource was
   constructed, and which must be understood when processing the content. Often,
   this is a reference to an implementation guide that defines the special rules
   along with other profiles etc.
       :param language: The base language in which the resource is written.
       :param text: A human-readable narrative that contains a summary of the resource and can be
   used to represent the content of the resource to a human. The narrative need
   not encode all the structured data, but is required to contain sufficient
   detail to make it "clinically safe" for a human to just read the narrative.
   Resource definitions may define what content should be represented in the
   narrative to ensure clinical safety.
       :param contained: These resources do not have an independent existence apart from the resource
   that contains them - they cannot be identified independently, and nor can they
   have their own independent transaction scope.
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the resource. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the resource and that modifies the understanding of the element
   that contains it and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer is allowed to define an extension, there is a set of requirements
   that SHALL be met as part of the definition of the extension. Applications
   processing a resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param identifier: Identifier by which this substance is known.
       :param type_: High level categorization, e.g. polymer or nucleic acid.
       :param status: Status of substance within the catalogue e.g. approved.
       :param domain: If the substance applies to only human or veterinary use.
       :param description: Textual description of the substance.
       :param source: Supporting literature.
       :param comment: Textual comment about this record of a substance.
       :param moiety: Moiety, for structural modifications.
       :param property: General specifications for this substance, including how it is related to
   other substances.
       :param referenceInformation: General information detailing this substance.
       :param structure: Structural information.
       :param code: Codes associated with the substance.
       :param name: Names applicable to this substance.
       :param molecularWeight: The molecular weight or weight range (for proteins, polymers or nucleic
   acids).
       :param relationship: A link between this substance and another, with details of the relationship.
       :param nucleicAcid: Data items specific to nucleic acids.
       :param polymer: Data items specific to polymers.
       :param protein: Data items specific to proteins.
       :param sourceMaterial: Material or taxonomic/anatomical source for the substance.

   .. py:method:: get_schema(self, include_extension)



