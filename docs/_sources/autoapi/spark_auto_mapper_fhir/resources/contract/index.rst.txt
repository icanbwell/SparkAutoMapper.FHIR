:py:mod:`spark_auto_mapper_fhir.resources.contract`
===================================================

.. py:module:: spark_auto_mapper_fhir.resources.contract


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.resources.contract.Contract




.. py:class:: Contract(*, id_ = None, meta = None, implicitRules = None, language = None, text = None, contained = None, extension = None, modifierExtension = None, identifier = None, url = None, version = None, status = None, legalState = None, instantiatesCanonical = None, instantiatesUri = None, contentDerivative = None, issued = None, applies = None, expirationType = None, subject = None, authority = None, domain = None, site = None, name = None, title = None, subtitle = None, alias = None, author = None, scope = None, topicCodeableConcept = None, topicReference = None, type_ = None, subType = None, contentDefinition = None, term = None, supportingInfo = None, relevantHistory = None, signer = None, friendly = None, legal = None, rule = None, legallyBindingAttachment = None, legallyBindingReference = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_resource_base.FhirResourceBase`

   Contract
   contract.xsd
       Legally enforceable, formally recorded unilateral or bilateral directive i.e.,
   a policy or agreement.
       If the element is present, it must have either a @value, an @id, or extensions

       Legally enforceable, formally recorded unilateral or bilateral directive i.e.,
   a policy or agreement.
       If the element is present, it must have either a @value, an @id, or extensions

       :param id_: The logical id of the resource, as used in the URL for the resource. Once
   assigned, this value never changes.
       :param meta: The metadata about the resource. This is content that is maintained by the
   infrastructure. Changes to the content might not always be associated with
   version changes to the resource.
       :param implicitRules: A reference to a set of rules that were followed when the resource was
   constructed, and which must be understood when processing the content. Often,
   this is a reference to an implementation guide that defines the special rules
   along with other profiles etc.
       :param language: The base language in which the resource is written.
       :param text: A human-readable narrative that contains a summary of the resource and can be
   used to represent the content of the resource to a human. The narrative need
   not encode all the structured data, but is required to contain sufficient
   detail to make it "clinically safe" for a human to just read the narrative.
   Resource definitions may define what content should be represented in the
   narrative to ensure clinical safety.
       :param contained: These resources do not have an independent existence apart from the resource
   that contains them - they cannot be identified independently, and nor can they
   have their own independent transaction scope.
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the resource. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the resource and that modifies the understanding of the element
   that contains it and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer is allowed to define an extension, there is a set of requirements
   that SHALL be met as part of the definition of the extension. Applications
   processing a resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param identifier: Unique identifier for this Contract or a derivative that references a Source
   Contract.
       :param url: Canonical identifier for this contract, represented as a URI (globally
   unique).
       :param version: An edition identifier used for business purposes to label business significant
   variants.
       :param status: The status of the resource instance.
       :param legalState: Legal states of the formation of a legal instrument, which is a formally
   executed written document that can be formally attributed to its author,
   records and formally expresses a legally enforceable act, process, or
   contractual duty, obligation, or right, and therefore evidences that act,
   process, or agreement.
       :param instantiatesCanonical: The URL pointing to a FHIR-defined Contract Definition that is adhered to in
   whole or part by this Contract.
       :param instantiatesUri: The URL pointing to an externally maintained definition that is adhered to in
   whole or in part by this Contract.
       :param contentDerivative: The minimal content derived from the basal information source at a specific
   stage in its lifecycle.
       :param issued: When this  Contract was issued.
       :param applies: Relevant time or time-period when this Contract is applicable.
       :param expirationType: Event resulting in discontinuation or termination of this Contract instance by
   one or more parties to the contract.
       :param subject: The target entity impacted by or of interest to parties to the agreement.
       :param authority: A formally or informally recognized grouping of people, principals,
   organizations, or jurisdictions formed for the purpose of achieving some form
   of collective action such as the promulgation, administration and enforcement
   of contracts and policies.
       :param domain: Recognized governance framework or system operating with a circumscribed scope
   in accordance with specified principles, policies, processes or procedures for
   managing rights, actions, or behaviors of parties or principals relative to
   resources.
       :param site: Sites in which the contract is complied with,  exercised, or in force.
       :param name: A natural language name identifying this Contract definition, derivative, or
   instance in any legal state. Provides additional information about its
   content. This name should be usable as an identifier for the module by machine
   processing applications such as code generation.
       :param title: A short, descriptive, user-friendly title for this Contract definition,
   derivative, or instance in any legal state.t giving additional information
   about its content.
       :param subtitle: An explanatory or alternate user-friendly title for this Contract definition,
   derivative, or instance in any legal state.t giving additional information
   about its content.
       :param alias: Alternative representation of the title for this Contract definition,
   derivative, or instance in any legal state., e.g., a domain specific contract
   number related to legislation.
       :param author: The individual or organization that authored the Contract definition,
   derivative, or instance in any legal state.
       :param scope: A selector of legal concerns for this Contract definition, derivative, or
   instance in any legal state.
       :param topicCodeableConcept: None
       :param topicReference: None
       :param type_: A high-level category for the legal instrument, whether constructed as a
   Contract definition, derivative, or instance in any legal state.  Provides
   additional information about its content within the context of the Contract's
   scope to distinguish the kinds of systems that would be interested in the
   contract.
       :param subType: Sub-category for the Contract that distinguishes the kinds of systems that
   would be interested in the Contract within the context of the Contract's
   scope.
       :param contentDefinition: Precusory content developed with a focus and intent of supporting the
   formation a Contract instance, which may be associated with and transformable
   into a Contract.
       :param term: One or more Contract Provisions, which may be related and conveyed as a group,
   and may contain nested groups.
       :param supportingInfo: Information that may be needed by/relevant to the performer in their execution
   of this term action.
       :param relevantHistory: Links to Provenance records for past versions of this Contract definition,
   derivative, or instance, which identify key state transitions or updates that
   are likely to be relevant to a user looking at the current version of the
   Contract.  The Provence.entity indicates the target that was changed in the
   update. http://build.fhir.org/provenance-definitions.html#Provenance.entity.
       :param signer: Parties with legal standing in the Contract, including the principal parties,
   the grantor(s) and grantee(s), which are any person or organization bound by
   the contract, and any ancillary parties, which facilitate the execution of the
   contract such as a notary or witness.
       :param friendly: The "patient friendly language" versionof the Contract in whole or in parts.
   "Patient friendly language" means the representation of the Contract and
   Contract Provisions in a manner that is readily accessible and understandable
   by a layperson in accordance with best practices for communication styles that
   ensure that those agreeing to or signing the Contract understand the roles,
   actions, obligations, responsibilities, and implication of the agreement.
       :param legal: List of Legal expressions or representations of this Contract.
       :param rule: List of Computable Policy Rule Language Representations of this Contract.
       :param legallyBindingAttachment: None
       :param legallyBindingReference: None

   .. py:method:: get_schema(self, include_extension)



