:py:mod:`spark_auto_mapper_fhir.resources.parameters`
=====================================================

.. py:module:: spark_auto_mapper_fhir.resources.parameters


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.resources.parameters.Parameters




.. py:class:: Parameters(*, id_ = None, meta = None, implicitRules = None, language = None, parameter = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_resource_base.FhirResourceBase`

   Parameters
   parameters.xsd
       This resource is a non-persisted resource used to pass information into and
   back from an [operation](operations.html). It has no other use, and there is
   no RESTful endpoint associated with it.
       If the element is present, it must have either a @value, an @id, or extensions

       This resource is a non-persisted resource used to pass information into and
   back from an [operation](operations.html). It has no other use, and there is
   no RESTful endpoint associated with it.
       If the element is present, it must have either a @value, an @id, or extensions

       :param id_: The logical id of the resource, as used in the URL for the resource. Once
   assigned, this value never changes.
       :param meta: The metadata about the resource. This is content that is maintained by the
   infrastructure. Changes to the content might not always be associated with
   version changes to the resource.
       :param implicitRules: A reference to a set of rules that were followed when the resource was
   constructed, and which must be understood when processing the content. Often,
   this is a reference to an implementation guide that defines the special rules
   along with other profiles etc.
       :param language: The base language in which the resource is written.
       :param parameter: A parameter passed to or received from the operation.

   .. py:method:: get_schema(self, include_extension)



