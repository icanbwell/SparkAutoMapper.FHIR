:py:mod:`spark_auto_mapper_fhir.resources.request_group`
========================================================

.. py:module:: spark_auto_mapper_fhir.resources.request_group


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.resources.request_group.RequestGroup




.. py:class:: RequestGroup(*, id_ = None, meta = None, implicitRules = None, language = None, text = None, contained = None, extension = None, modifierExtension = None, identifier = None, instantiatesCanonical = None, instantiatesUri = None, basedOn = None, replaces = None, groupIdentifier = None, status, intent, priority = None, code = None, subject = None, encounter = None, authoredOn = None, author = None, reasonCode = None, reasonReference = None, note = None, action = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_resource_base.FhirResourceBase`

   RequestGroup
   requestgroup.xsd
       A group of related requests that can be used to capture intended activities
   that have inter-dependencies such as "give this medication after that one".
       If the element is present, it must have either a @value, an @id, or extensions

       A group of related requests that can be used to capture intended activities
   that have inter-dependencies such as "give this medication after that one".
       If the element is present, it must have either a @value, an @id, or extensions

       :param id_: The logical id of the resource, as used in the URL for the resource. Once
   assigned, this value never changes.
       :param meta: The metadata about the resource. This is content that is maintained by the
   infrastructure. Changes to the content might not always be associated with
   version changes to the resource.
       :param implicitRules: A reference to a set of rules that were followed when the resource was
   constructed, and which must be understood when processing the content. Often,
   this is a reference to an implementation guide that defines the special rules
   along with other profiles etc.
       :param language: The base language in which the resource is written.
       :param text: A human-readable narrative that contains a summary of the resource and can be
   used to represent the content of the resource to a human. The narrative need
   not encode all the structured data, but is required to contain sufficient
   detail to make it "clinically safe" for a human to just read the narrative.
   Resource definitions may define what content should be represented in the
   narrative to ensure clinical safety.
       :param contained: These resources do not have an independent existence apart from the resource
   that contains them - they cannot be identified independently, and nor can they
   have their own independent transaction scope.
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the resource. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the resource and that modifies the understanding of the element
   that contains it and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer is allowed to define an extension, there is a set of requirements
   that SHALL be met as part of the definition of the extension. Applications
   processing a resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param identifier: Allows a service to provide a unique, business identifier for the request.
       :param instantiatesCanonical: A canonical URL referencing a FHIR-defined protocol, guideline, orderset or
   other definition that is adhered to in whole or in part by this request.
       :param instantiatesUri: A URL referencing an externally defined protocol, guideline, orderset or other
   definition that is adhered to in whole or in part by this request.
       :param basedOn: A plan, proposal or order that is fulfilled in whole or in part by this
   request.
       :param replaces: Completed or terminated request(s) whose function is taken by this new
   request.
       :param groupIdentifier: A shared identifier common to all requests that were authorized more or less
   simultaneously by a single author, representing the identifier of the
   requisition, prescription or similar form.
       :param status: The current state of the request. For request groups, the status reflects the
   status of all the requests in the group.
       :param intent: Indicates the level of authority/intentionality associated with the request
   and where the request fits into the workflow chain.
       :param priority: Indicates how quickly the request should be addressed with respect to other
   requests.
       :param code: A code that identifies what the overall request group is.
       :param subject: The subject for which the request group was created.
       :param encounter: Describes the context of the request group, if any.
       :param authoredOn: Indicates when the request group was created.
       :param author: Provides a reference to the author of the request group.
       :param reasonCode: Describes the reason for the request group in coded or textual form.
       :param reasonReference: Indicates another resource whose existence justifies this request group.
       :param note: Provides a mechanism to communicate additional information about the response.
       :param action: The actions, if any, produced by the evaluation of the artifact.

   .. py:method:: get_schema(self, include_extension)



