:py:mod:`spark_auto_mapper_fhir.resources.slot`
===============================================

.. py:module:: spark_auto_mapper_fhir.resources.slot


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.resources.slot.Slot




.. py:class:: Slot(*, id_ = None, meta = None, implicitRules = None, language = None, text = None, contained = None, extension = None, modifierExtension = None, identifier = None, serviceCategory = None, serviceType = None, specialty = None, appointmentType = None, schedule, status, start, end, overbooked = None, comment = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_resource_base.FhirResourceBase`

   Slot
   slot.xsd
       A slot of time on a schedule that may be available for booking appointments.
       If the element is present, it must have either a @value, an @id, or extensions

       A slot of time on a schedule that may be available for booking appointments.
       If the element is present, it must have either a @value, an @id, or extensions

       :param id_: The logical id of the resource, as used in the URL for the resource. Once
   assigned, this value never changes.
       :param meta: The metadata about the resource. This is content that is maintained by the
   infrastructure. Changes to the content might not always be associated with
   version changes to the resource.
       :param implicitRules: A reference to a set of rules that were followed when the resource was
   constructed, and which must be understood when processing the content. Often,
   this is a reference to an implementation guide that defines the special rules
   along with other profiles etc.
       :param language: The base language in which the resource is written.
       :param text: A human-readable narrative that contains a summary of the resource and can be
   used to represent the content of the resource to a human. The narrative need
   not encode all the structured data, but is required to contain sufficient
   detail to make it "clinically safe" for a human to just read the narrative.
   Resource definitions may define what content should be represented in the
   narrative to ensure clinical safety.
       :param contained: These resources do not have an independent existence apart from the resource
   that contains them - they cannot be identified independently, and nor can they
   have their own independent transaction scope.
       :param extension: May be used to represent additional information that is not part of the basic
   definition of the resource. To make the use of extensions safe and manageable,
   there is a strict set of governance  applied to the definition and use of
   extensions. Though any implementer can define an extension, there is a set of
   requirements that SHALL be met as part of the definition of the extension.
       :param modifierExtension: May be used to represent additional information that is not part of the basic
   definition of the resource and that modifies the understanding of the element
   that contains it and/or the understanding of the containing element's
   descendants. Usually modifier elements provide negation or qualification. To
   make the use of extensions safe and manageable, there is a strict set of
   governance applied to the definition and use of extensions. Though any
   implementer is allowed to define an extension, there is a set of requirements
   that SHALL be met as part of the definition of the extension. Applications
   processing a resource are required to check for modifier extensions.

   Modifier extensions SHALL NOT change the meaning of any elements on Resource
   or DomainResource (including cannot change the meaning of modifierExtension
   itself).
       :param identifier: External Ids for this item.
       :param serviceCategory: A broad categorization of the service that is to be performed during this
   appointment.
       :param serviceType: The type of appointments that can be booked into this slot (ideally this would
   be an identifiable service - which is at a location, rather than the location
   itself). If provided then this overrides the value provided on the
   availability resource.
       :param specialty: The specialty of a practitioner that would be required to perform the service
   requested in this appointment.
       :param appointmentType: The style of appointment or patient that may be booked in the slot (not
   service type).
       :param schedule: The schedule resource that this slot defines an interval of status
   information.
       :param status: busy | free | busy-unavailable | busy-tentative | entered-in-error.
       :param start: Date/Time that the slot is to begin.
       :param end: Date/Time that the slot is to conclude.
       :param overbooked: This slot has already been overbooked, appointments are unlikely to be
   accepted for this time.
       :param comment: Comments on the slot to describe any extended information. Such as custom
   constraints on the slot.

   .. py:method:: get_schema(self, include_extension)



