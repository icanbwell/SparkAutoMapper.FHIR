:py:mod:`spark_auto_mapper_fhir.resources.binary`
=================================================

.. py:module:: spark_auto_mapper_fhir.resources.binary


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.resources.binary.Binary




.. py:class:: Binary(*, id_ = None, meta = None, implicitRules = None, language = None, contentType, securityContext = None, data = None)

   Bases: :py:obj:`spark_auto_mapper_fhir.base_types.fhir_resource_base.FhirResourceBase`

   Binary
   binary.xsd
       A resource that represents the data of a single raw artifact as digital
   content accessible in its native format.  A Binary resource can contain any
   content, whether text, image, pdf, zip archive, etc.
       If the element is present, it must have either a @value, an @id, or extensions

       A resource that represents the data of a single raw artifact as digital
   content accessible in its native format.  A Binary resource can contain any
   content, whether text, image, pdf, zip archive, etc.
       If the element is present, it must have either a @value, an @id, or extensions

       :param id_: The logical id of the resource, as used in the URL for the resource. Once
   assigned, this value never changes.
       :param meta: The metadata about the resource. This is content that is maintained by the
   infrastructure. Changes to the content might not always be associated with
   version changes to the resource.
       :param implicitRules: A reference to a set of rules that were followed when the resource was
   constructed, and which must be understood when processing the content. Often,
   this is a reference to an implementation guide that defines the special rules
   along with other profiles etc.
       :param language: The base language in which the resource is written.
       :param contentType: MimeType of the binary content represented as a standard MimeType (BCP 13).
       :param securityContext: This element identifies another resource that can be used as a proxy of the
   security sensitivity to use when deciding and enforcing access control rules
   for the Binary resource. Given that the Binary resource contains very few
   elements that can be used to determine the sensitivity of the data and
   relationships to individuals, the referenced resource stands in as a proxy
   equivalent for this purpose. This referenced resource may be related to the
   Binary (e.g. Media, DocumentReference), or may be some non-related Resource
   purely as a security proxy. E.g. to identify that the binary resource relates
   to a patient, and access should only be granted to applications that have
   access to the patient.
       :param data: The actual content, base64 encoded.

   .. py:method:: get_schema(self, include_extension)



