:py:mod:`spark_auto_mapper_fhir.value_sets.role_class`
======================================================

.. py:module:: spark_auto_mapper_fhir.value_sets.role_class


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper_fhir.value_sets.role_class.RoleClass
   spark_auto_mapper_fhir.value_sets.role_class.RoleClassValues




.. py:class:: RoleClass(value)

   Bases: :py:obj:`spark_auto_mapper_fhir.value_sets.generic_type.GenericTypeCode`

   v3.RoleClass
   From: http://terminology.hl7.org/ValueSet/v3-RoleClass in v3-codesystems.xml
        Codes for the Role class hierarchy.  The values in this hierarchy, represent
   a Role which is an association or relationship between two entities - the
   entity that plays the role and the entity that scopes the role.  Roles names
   are derived from the name of the playing entity in that role. The role
   hierarchy stems from three core concepts, or abstract domains:
   RoleClassOntological
   is an abstract domain that collects roles in which the playing entity is
   defined or specified by the scoping entity.   RoleClassPartitive
   collects roles in which the playing entity is in some sense a "part" of the
   scoping entity.   RoleClassAssociative
   collects all of the remaining forms of association between the playing entity
   and the scoping entity. This set of roles is further partitioned between:
   RoleClassPassive
   which are roles in which the playing entity is used, known, treated, handled,
   built, or destroyed, etc. under the auspices of the scoping entity. The
   playing entity is passive in these roles in that the role exists without an
   agreement from the playing entity.   RoleClassMutualRelationship
   which are relationships based on mutual behavior of the two entities. The
   basis of these relationship may be formal agreements or they may bede facto
   behavior.  Thus, this sub-domain is further divided into:
   RoleClassRelationshipFormal
   in which the relationship is formally defined, frequently by a contract or
   agreement.   Personal relationship
   which inks two people in a personal relationship. The hierarchy discussed
   above is represented In the current vocabulary tables as a set of abstract
   domains, with the exception of the  "Personal relationship" which is a leaf
   concept.  OpenIssue:
   Description copied from Concept Domain of same name.  Must be verified.

   .. py:attribute:: codeset
      :annotation: :spark_auto_mapper_fhir.fhir_types.uri.FhirUri = http://terminology.hl7.org/CodeSystem/v3-RoleClass

      


.. py:class:: RoleClassValues

   Corresponds to the Role class
   From: http://terminology.hl7.org/CodeSystem/v3-RoleClass in v3-codesystems.xml

   .. py:attribute:: Role
      

      The player of the role is a child of the scoping entity, in a generic sense.
      From: http://terminology.hl7.org/CodeSystem/v3-RoleClass in v3-codesystems.xml


   .. py:attribute:: Child
      

      A role played by an entity that receives credentials from the scoping entity.
      From: http://terminology.hl7.org/CodeSystem/v3-RoleClass in v3-codesystems.xml


   .. py:attribute:: CredentialedEntity
      

      nurse practitioner
      From: http://terminology.hl7.org/CodeSystem/v3-RoleClass in v3-codesystems.xml


   .. py:attribute:: NursePractitioner
      

      nurse
      From: http://terminology.hl7.org/CodeSystem/v3-RoleClass in v3-codesystems.xml


   .. py:attribute:: Nurse
      

      physician assistant
      From: http://terminology.hl7.org/CodeSystem/v3-RoleClass in v3-codesystems.xml


   .. py:attribute:: PhysicianAssistant
      

      physician
      From: http://terminology.hl7.org/CodeSystem/v3-RoleClass in v3-codesystems.xml


   .. py:attribute:: Physician
      

      


